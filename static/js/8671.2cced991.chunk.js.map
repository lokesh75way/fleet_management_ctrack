{"version":3,"file":"static/js/8671.2cced991.chunk.js","mappings":"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","sources":["components/Form/ChangePassword.jsx","features/company/pages/Create.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"../Input/CustomInput\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\n\nconst ChangePassword = ({\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  isFormSubmitting,\n}) => {\n  const [showOldPassword, setOldShowPassword] = useState(false);\n  const [showNewPassword, setNewShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <>\n          <div className=\"col-xl-6 mb-3 position-relative\">\n            <label className=\"form-label\">\n              Old Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showOldPassword ? \"text\" : \"password\"}\n                register={register}\n                name=\"oldPassword\"\n                label=\"Old Password\"\n                placeholder=\"\"\n                defaultValue={getValues(\"oldPassword\")}\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setOldShowPassword(!showOldPassword);\n                }}\n              >\n                {showOldPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.oldPassword} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label className=\"form-label\">\n              New Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showNewPassword ? \"text\" : \"password\"}\n                register={register}\n                label=\"New Password\"\n                name=\"newPassword\"\n                placeholder=\"\"\n                defaultValue={getValues(\"newPassword\")}\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setNewShowPassword(!showNewPassword);\n                }}\n              >\n                {showNewPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.newPassword} />\n          </div>\n          <div className=\"col-xl-6 mb-3 position-relative\">\n            <label className=\"form-label\">\n              Retype Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                register={register}\n                label=\"Retype Password\"\n                name=\"confirmPassword\"\n                placeholder=\"\"\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setConfirmShowPassword(!showConfirmPassword);\n                }}\n              >\n                {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.confirmPassword} />\n          </div>\n        </>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport CreateForm from \"../components/Form\";\nimport { companyAccountSchema, companyPasswordSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport ChangePassword from \"@/components/Form/ChangePassword\";\nimport {\n  addCompany,\n  changePassword,\n  editCompany,\n  getCompanyById,\n} from \"../api\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport Loader from \"@/components/Loader\";\n\nconst CreateCompany = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  let tabHeading = [\n    id ? t(\"editCompany\") : t(\"newCompany\"),\n    t(\"changePassword\"),\n  ];\n  let component = [CreateForm, ChangePassword];\n  const [activeIndex, setActiveIndex] = useState(0);\n  const queryClient = useQueryClient();\n\n  if (!id) {\n    tabHeading = [t(\"newCompany\")];\n    component = [CreateForm];\n  }\n\n  const {\n    data: companyData,\n    isError,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"company\", id],\n    queryFn: () => getCompanyById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch company data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const parsedCompanyData = useMemo(() => {\n    return {\n      ...companyData,\n      ...companyData?.companyId,\n      businessGroupId: companyData?.businessGroupId,\n      logo: companyData?.companyDetails?.logo ?? null,\n      password: \"\",\n    };\n  }, [companyData]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    defaultValues: {\n      businessGroupId: \"\",\n      userInfo: [\n        {\n          name: \"\",\n          designation: \"\",\n          mobileNumber: null,\n          email: \"\",\n        },\n      ],\n      timeFormat: timeFormatOptions[1]?.value,\n      dateFormat: dateFormatOptions[1]?.value,\n    },\n    resolver: yupResolver(\n      activeIndex === 1 ? companyPasswordSchema : companyAccountSchema(id)\n    ),\n    values: parsedCompanyData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: editCompanyMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => editCompany(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Company Updated Successfully\");\n      queryClient.invalidateQueries([\"companies\"]);\n      navigate(\"/company\");\n    },\n    onError,\n  });\n\n  const { mutate: createCompanyMutation, isPending: createPending } =\n    useMutation({\n      mutationFn: addCompany,\n      onSuccess: () => {\n        notifySuccess(\"New Company Created\");\n        queryClient.invalidateQueries([\"companies\"]);\n        navigate(\"/company\");\n      },\n      onError,\n    });\n\n  const { mutate: passwordMutation, isPending: passwordPending } = useMutation({\n    mutationFn: changePassword,\n    onSuccess: () => {\n      notifySuccess(\"Password has been changed\");\n      navigate(\"/company\");\n    },\n    onError,\n  });\n\n  const onSubmit = async (data) => {\n    if (activeIndex === 0) {\n      if (data.logo == null || data.logo.length === 0) {\n        delete data.logo;\n      }\n      if (data.file && data.file.length === 0) {\n        delete data.file;\n      }\n      if (id) {\n        editCompanyMutation({ data, id });\n      } else {\n        createCompanyMutation(data);\n      }\n    } else if (activeIndex === 1) {\n      const passwordData = {\n        password: data.newPassword,\n        oldPassword: data.oldPassword,\n        confirmPassword: data.confirmPassword,\n        _id: id,\n      };\n\n      passwordMutation(passwordData);\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"company\")}\n        pageTitle={id ? t(\"edit\") : t(\"create\")}\n        parentTitle={t(\"company\")}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            handleSubmit={handleSubmit}\n                            onSubmit={onSubmit}\n                            isFormSubmitting={\n                              createPending || editPending || passwordPending\n                            }\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CreateCompany;\n"],"names":["_ref","getValues","register","onSubmit","handleSubmit","errors","isFormSubmitting","showOldPassword","setOldShowPassword","useState","showNewPassword","setNewShowPassword","showConfirmPassword","setConfirmShowPassword","_jsxs","className","children","_jsx","style","width","margin","_Fragment","CustomInput","type","name","label","placeholder","defaultValue","onClick","LuEyeOff","LuEye","Error","errorName","oldPassword","newPassword","confirmPassword","display","justifyContent","Button","disabled","CreateCompany","_timeFormatOptions$","_dateFormatOptions$","t","useTranslation","navigate","useNavigate","id","useParams","tabHeading","component","CreateForm","ChangePassword","activeIndex","setActiveIndex","queryClient","useQueryClient","data","companyData","isError","isLoading","useQuery","queryKey","queryFn","getCompanyById","enabled","staleTime","Infinity","useEffect","notifyError","parsedCompanyData","useMemo","_companyData$companyD","_companyData$companyD2","companyId","businessGroupId","logo","companyDetails","password","formState","setValue","control","useForm","defaultValues","userInfo","designation","mobileNumber","email","timeFormat","timeFormatOptions","value","dateFormat","dateFormatOptions","resolver","yupResolver","companyPasswordSchema","companyAccountSchema","values","onError","err","getApiErrorMessage","mutate","editCompanyMutation","isPending","editPending","useMutation","mutationFn","editCompany","onSuccess","notifySuccess","invalidateQueries","createCompanyMutation","createPending","addCompany","passwordMutation","passwordPending","changePassword","async","length","file","passwordData","_id","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","padding","eventKey","active","Content","Loader","height","Component","Pane"],"sourceRoot":""}