{"version":3,"file":"static/js/9057.0816f78d.chunk.js","mappings":"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","sources":["jsx/components/bootstrap/Tab.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-scroll\";\nimport Highlight from \"react-highlight\";\nimport PageTitle from \"../../layouts/PageTitle\";\nimport { Row, Col, Card, Tab, Nav } from \"react-bootstrap\";\n\nconst sidebarLink = [\n  { to: \"default-tab\", title: \"Default Tab\" },\n  { to: \"custom-tab\", title: \"Custom Tab\" },\n  { to: \"nav-pills\", title: \"Nav Pills Tabs\" },\n  { to: \"nav-pills-tabs\", title: \"Nav Pills Tabs-2\" },\n  { to: \"vertical-nav\", title: \"Vertical Nav Pill\" },\n  { to: \"vertical-nav-pill\", title: \"Vertical Nav Pill-2\" },\n  { to: \"tab-icon\", title: \"Tab with Icon\" },\n];\n\nconst UiTab = () => {\n  const tabData = [\n    {\n      name: \"Home\",\n      icon: \"home\",\n      content:\n        \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.\",\n    },\n    {\n      name: \"Profile\",\n      icon: \"user\",\n      content:\n        \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n    },\n    {\n      name: \"Contact\",\n      icon: \"phone\",\n      content:\n        \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.\",\n    },\n\n    {\n      name: \"Message\",\n      icon: \"envelope\",\n      content:\n        \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n    },\n  ];\n  const [activeLink, setActiveLink] = useState(0);\n  return (\n    <Fragment>\n      <PageTitle activeMenu=\"Tab\" motherMenu=\"Bootstrap\" pageContent=\"Tab\" />\n      <div className=\"container-fluid\">\n        <div className=\"element-area\">\n          <div className=\"demo-view\">\n            <div className=\"container-fluid pt-0 ps-0 pe-lg-4 pe-0\">\n              <Row>\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"default-tab\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Default Tab</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            {/* <!-- Nav tabs --> */}\n                            <div className=\"default-tab\">\n                              <Tab.Container\n                                defaultActiveKey={tabData[0].name.toLowerCase()}\n                              >\n                                <Nav as=\"ul\" className=\"nav-tabs\">\n                                  {tabData.map((data, i) => (\n                                    <Nav.Item as=\"li\" key={i}>\n                                      <Nav.Link\n                                        eventKey={data.name.toLowerCase()}\n                                      >\n                                        <i\n                                          className={`la la-${data.icon} me-2`}\n                                        />\n                                        {data.name}\n                                      </Nav.Link>\n                                    </Nav.Item>\n                                  ))}\n                                </Nav>\n                                <Tab.Content className=\"pt-4\">\n                                  {tabData.map((data, i) => (\n                                    <Tab.Pane\n                                      eventKey={data.name.toLowerCase()}\n                                      key={i}\n                                    >\n                                      <h4>This is {data.name} title</h4>\n                                      <p>{data.content}</p>\n                                      <p>{data.content}</p>\n                                    </Tab.Pane>\n                                  ))}\n                                </Tab.Content>\n                              </Tab.Container>\n                            </div>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n    <div className=\"default-tab\">\n      <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n        <Nav as=\"ul\" className=\"nav-tabs\">\n          {tabData.map((data, i) => (\n            <Nav.Item as=\"li\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                <i className={\\`la la-$\\{data.icon} me-2\\`} />\n                {data.name}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n        <Tab.Content className=\"pt-4\">\n          {tabData.map((data, i) => (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <h4>This is {data.name} title</h4>\n              <p>{data.content}</p>\n              <p>{data.content}</p>\n            </Tab.Pane>\n          ))}\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"custom-tab\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Custom Tab 1</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            {/* <!-- Nav tabs --> */}\n                            <div className=\"custom-tab-1\">\n                              <Tab.Container\n                                defaultActiveKey={tabData[0].name.toLowerCase()}\n                              >\n                                <Nav as=\"ul\" className=\"nav-tabs\">\n                                  {tabData.map((data, i) => (\n                                    <Nav.Item as=\"li\" key={i}>\n                                      <Nav.Link\n                                        eventKey={data.name.toLowerCase()}\n                                      >\n                                        <i\n                                          className={`la la-${data.icon} me-2`}\n                                        />\n                                        {data.name}\n                                      </Nav.Link>\n                                    </Nav.Item>\n                                  ))}\n                                </Nav>\n                                <Tab.Content className=\"pt-4\">\n                                  {tabData.map((data, i) => (\n                                    <Tab.Pane\n                                      eventKey={data.name.toLowerCase()}\n                                      key={i}\n                                    >\n                                      <h4>This is {data.name} title</h4>\n                                      <p>{data.content}</p>\n                                      <p>{data.content}</p>\n                                    </Tab.Pane>\n                                  ))}\n                                </Tab.Content>\n                              </Tab.Container>\n                            </div>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <div className=\"custom-tab-1\">\n    <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n      <Nav as=\"ul\" className=\"nav-tabs\">\n        {tabData.map((data, i) => (\n          <Nav.Item as=\"li\" key={i}>\n            <Nav.Link eventKey={data.name.toLowerCase()}>\n              <i className={\\`la la-$\\{data.icon} me-2\\`} />\n              {data.name}\n            </Nav.Link>\n          </Nav.Item>\n        ))}\n      </Nav>\n      <Tab.Content className=\"pt-4\">\n        {tabData.map((data, i) => (\n          <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n            <h4>This is {data.name} title</h4>\n            <p>{data.content}</p>\n            <p>{data.content}</p>\n          </Tab.Pane>\n        ))}\n      </Tab.Content>\n    </Tab.Container>\n  </div>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"nav-pills\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Nav Pills Tabs</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            <Tab.Container\n                              defaultActiveKey={tabData[0].name.toLowerCase()}\n                            >\n                              <Nav as=\"ul\" className=\"nav-pills mb-4 light\">\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Nav.Item as=\"li\" key={i}>\n                                        <Nav.Link\n                                          eventKey={data.name.toLowerCase()}\n                                        >\n                                          Tab{\" \"}\n                                          {i === 1\n                                            ? \"Two\"\n                                            : i === 2\n                                              ? \"Three\"\n                                              : \"One\"}\n                                        </Nav.Link>\n                                      </Nav.Item>\n                                    )\n                                )}\n                              </Nav>\n                              <Tab.Content className=\"\">\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Tab.Pane\n                                        eventKey={data.name.toLowerCase()}\n                                        key={i}\n                                      >\n                                        <p>{data.content}</p>\n                                        <p>{data.content}</p>\n                                      </Tab.Pane>\n                                    )\n                                )}\n                              </Tab.Content>\n                            </Tab.Container>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n    <Nav as=\"ul\" className=\"nav-pills mb-4 light\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Nav.Item as=\"li\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                Tab {i === 1 ? \"Two\" : i === 2 ? \"Three\" : \"One\"}\n              </Nav.Link>\n            </Nav.Item>\n          )\n      )}\n    </Nav>\n    <Tab.Content className=\"\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <p>{data.content}</p>\n              <p>{data.content}</p>\n            </Tab.Pane>\n          )\n      )}\n    </Tab.Content>\n  </Tab.Container>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"nav-pills-tabs\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Nav Pills Tabs</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            <Tab.Container\n                              defaultActiveKey={tabData[0].name.toLowerCase()}\n                            >\n                              <Nav\n                                as=\"ul\"\n                                className=\"nav-pills mb-4 justify-content-end\"\n                              >\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Nav.Item as=\"li\" key={i}>\n                                        <Nav.Link\n                                          eventKey={data.name.toLowerCase()}\n                                        >\n                                          Tab{\" \"}\n                                          {i === 1\n                                            ? \"Two\"\n                                            : i === 2\n                                              ? \"Three\"\n                                              : \"One\"}\n                                        </Nav.Link>\n                                      </Nav.Item>\n                                    )\n                                )}\n                              </Nav>\n                              <Tab.Content className=\"\">\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Tab.Pane\n                                        eventKey={data.name.toLowerCase()}\n                                        key={i}\n                                      >\n                                        <p>{data.content}</p>\n                                        <p>{data.content}</p>\n                                      </Tab.Pane>\n                                    )\n                                )}\n                              </Tab.Content>\n                            </Tab.Container>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n    <Nav as=\"ul\" className=\"nav-pills mb-4 justify-content-end\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Nav.Item as=\"li\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                Tab {i === 1 ? \"Two\" : i === 2 ? \"Three\" : \"One\"}\n              </Nav.Link>\n            </Nav.Item>\n          )\n      )}\n    </Nav>\n    <Tab.Content className=\"\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <p>{data.content}</p>\n              <p>{data.content}</p>\n            </Tab.Pane>\n          )\n      )}\n    </Tab.Content>\n  </Tab.Container>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"vertical-nav\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Vertical Nav Pill</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            <Row>\n                              <Tab.Container\n                                defaultActiveKey={tabData[0].name.toLowerCase()}\n                              >\n                                <Col sm={4}>\n                                  <Nav\n                                    as=\"ul\"\n                                    className=\"flex-column nav-pills mb-3\"\n                                  >\n                                    {tabData.map((data, i) => (\n                                      <Nav.Item as=\"li\" key={i}>\n                                        <Nav.Link\n                                          eventKey={data.name.toLowerCase()}\n                                        >\n                                          {data.name}\n                                        </Nav.Link>\n                                      </Nav.Item>\n                                    ))}\n                                  </Nav>\n                                </Col>\n                                <Col sm={8}>\n                                  <Tab.Content className=\"ms-2\">\n                                    {tabData.map((data, i) => (\n                                      <Tab.Pane\n                                        eventKey={data.name.toLowerCase()}\n                                        key={i}\n                                      >\n                                        <p>\n                                          {data.content} {data.content}\n                                        </p>\n                                      </Tab.Pane>\n                                    ))}\n                                  </Tab.Content>{\" \"}\n                                </Col>\n                              </Tab.Container>\n                            </Row>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Row>\n    <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n      <Col sm={4}>\n        <Nav as=\"ul\" className=\"flex-column nav-pills mb-3\">\n          {tabData.map((data, i) => (\n            <Nav.Item as=\"li\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                {data.name}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Col>\n      <Col sm={8}>\n        <Tab.Content className=\"ms-2\">\n          {tabData.map((data, i) => (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <p>\n                {data.content} {data.content}\n              </p>\n            </Tab.Pane>\n          ))}\n        </Tab.Content>{\" \"}\n      </Col>\n    </Tab.Container>\n  </Row>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"vertical-nav-pill\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Vertical Nav Pill</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            <Row>\n                              <Tab.Container\n                                defaultActiveKey={tabData[0].name.toLowerCase()}\n                              >\n                                <Col sm={8}>\n                                  <Tab.Content>\n                                    {tabData.map((data, i) => (\n                                      <Tab.Pane\n                                        eventKey={data.name.toLowerCase()}\n                                        key={i}\n                                      >\n                                        <p>\n                                          {data.content} {data.content}\n                                        </p>\n                                      </Tab.Pane>\n                                    ))}\n                                  </Tab.Content>\n                                </Col>\n                                <Col sm={4} id=\"order-2\">\n                                  <Nav\n                                    as=\"div\"\n                                    variant=\"pills\"\n                                    className=\"flex-column ms-2\"\n                                  >\n                                    {tabData.map((data, i) => (\n                                      <Nav.Item as=\"a\" key={i}>\n                                        <Nav.Link\n                                          eventKey={data.name.toLowerCase()}\n                                        >\n                                          {data.name}\n                                        </Nav.Link>\n                                      </Nav.Item>\n                                    ))}\n                                  </Nav>\n                                </Col>\n                              </Tab.Container>\n                            </Row>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Row>\n    <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n      <Col sm={8}>\n        <Tab.Content>\n          {tabData.map((data, i) => (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <p>\n                {data.content} {data.content}\n              </p>\n            </Tab.Pane>\n          ))}\n        </Tab.Content>\n      </Col>\n      <Col sm={4} id=\"order-2\">\n        <Nav as=\"div\" variant=\"pills\" className=\"flex-column ms-2\">\n          {tabData.map((data, i) => (\n            <Nav.Item as=\"a\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                {data.name}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Col>\n    </Tab.Container>\n  </Row>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n\n                <Col xl={12}>\n                  <Tab.Container defaultActiveKey=\"Preview\">\n                    <Card name=\"tab-icon\" className=\"dz-card\">\n                      <Card.Header>\n                        <div>\n                          <Card.Title>Tab with icon</Card.Title>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body>\n                            <Tab.Container\n                              defaultActiveKey={tabData[0].name.toLowerCase()}\n                            >\n                              <Nav as=\"ul\" className=\"nav-tabs\">\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Nav.Item as=\"li\" key={i}>\n                                        <Nav.Link\n                                          eventKey={data.name.toLowerCase()}\n                                        >\n                                          <i\n                                            className={`ti-${i === 2 ? \"email\" : data.icon}`}\n                                          />\n                                        </Nav.Link>\n                                      </Nav.Item>\n                                    )\n                                )}\n                              </Nav>\n                              <Tab.Content className=\"pt-4\">\n                                {tabData.map(\n                                  (data, i) =>\n                                    i !== tabData.length - 1 && (\n                                      <Tab.Pane\n                                        eventKey={data.name.toLowerCase()}\n                                        key={i}\n                                      >\n                                        <h4>This is icon title</h4>\n                                        <p>\n                                          Lorem Ipsum is simply dummy text of\n                                          the printing and typesetting industry.\n                                          Lorem Ipsum has been the industry's\n                                          standard dummy text ever since the\n                                          1500s, when an unknown printer took a\n                                          galley of type and scrambled it to\n                                          make a type specimen book. It has\n                                          survived not only five centuries, but\n                                          also the leap into electronic\n                                          typesetting\n                                        </p>\n                                        <p>\n                                          Lorem Ipsum is simply dummy text of\n                                          the printing and typesetting industry.\n                                          Lorem Ipsum has been the industry's\n                                          standard dummy text ever since the\n                                          1500s, when an unknown printer took a\n                                          galley of type and scrambled it to\n                                          make a type specimen book. It has\n                                          survived not only five centuries, but\n                                          also the leap into electronic\n                                          typesetting\n                                        </p>\n                                      </Tab.Pane>\n                                    )\n                                )}\n                              </Tab.Content>\n                            </Tab.Container>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n    <Nav as=\"ul\" className=\"nav-tabs\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Nav.Item as=\"li\" key={i}>\n              <Nav.Link eventKey={data.name.toLowerCase()}>\n                <i\n                  className={\\`ti-$\\{i === 2 ? \"email\" : data.icon}\\`}\n                />\n              </Nav.Link>\n            </Nav.Item>\n          )\n      )}\n    </Nav>\n    <Tab.Content className=\"pt-4\">\n      {tabData.map(\n        (data, i) =>\n          i !== tabData.length - 1 && (\n            <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n              <h4>This is icon title</h4>\n              <p>{data.content}</p>\n              <p>{data.content}</p>\n            </Tab.Pane>\n          )\n      )}\n    </Tab.Content>\n    </Tab.Container>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Card>\n                  </Tab.Container>\n                </Col>\n              </Row>\n            </div>\n          </div>\n          <div className=\"demo-right \">\n            <div className=\"demo-right-inner dlab-scroll \" id=\"right-sidebar\">\n              <h4 className=\"title\">Tab</h4>\n              <ul className=\"navbar-nav\" id=\"menu-bar\">\n                {sidebarLink.map((item, ind) => (\n                  <li key={ind}>\n                    <Link\n                      to={item.to}\n                      smooth={true}\n                      className={`scroll ${ind === activeLink ? \"active\" : \"\"} `}\n                      activeClass=\"active\"\n                      spy={true}\n                      onClick={() => setActiveLink(ind)}\n                    >\n                      {item.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UiTab;\n"],"names":["sidebarLink","to","title","UiTab","tabData","name","icon","content","activeLink","setActiveLink","useState","_jsxs","Fragment","children","_jsx","PageTitle","activeMenu","motherMenu","pageContent","className","Row","Col","xl","Tab","Container","defaultActiveKey","Card","Header","Title","Nav","as","id","role","Item","Link","type","eventKey","Content","Pane","Body","toLowerCase","map","data","i","concat","Highlight","length","sm","variant","item","ind","smooth","activeClass","spy","onClick"],"sourceRoot":""}