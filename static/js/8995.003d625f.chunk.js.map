{"version":3,"file":"static/js/8995.003d625f.chunk.js","mappings":"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","sources":["jsx/components/Tables/SubCompanyTable.jsx","jsx/pages/company/Branch.js"],"sourcesContent":["import React from 'react'\nimport { MdDelete } from 'react-icons/md'\nimport { FaEdit } from 'react-icons/fa'\nimport DeleteModal from '../Modal/DeleteModal'\nimport { Link } from 'react-router-dom'\nimport { IMAGES,SVGICON} from '../../constant/theme'; \nimport useStorage from '../../../hooks/useStorage'\nimport { usePermissions } from '../../../context/PermissionContext'\n\nconst SubCompanyTable = ({onConfirmDelete,params,currentPage, itemsPerPage, tempValue,tempValue2,tableData,editDrawerOpen, setDataLength}) => {\n  var filterData = tableData;\n\n  const {can} = usePermissions()\n  const editPermission = can('branch','modify');\n  const deletePermission = can('branch','delete');\n  if(tempValue!=='All Companies'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentCompany === tempValue)\n  }\n  if(tempValue2!=='All Branches'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentBranch === tempValue2)\n  }\n  // console.log(\"this is data after filter\",filterData,tempValue,tempValue2);\n  var branchCount = []\n  for(var i=0;i<filterData.length;i++){\n    const branchName = filterData[i].userName\n    branchCount[i] = filterData.filter((item)=> item.parentBranch === branchName).length\n  }\n  // setDataLength(filterData.length)\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n    return (\n      <>\n        {filterData.map((item, index) => (\n          <tr key={index}>\n            <td>\n              <span>{startIndex + index}</span>\n            </td>\n            <td>\n              <span className=\"text-primary\">{item.branchName}</span>\n            </td>\n            <td>\n              <span >{item.parentBranchId?.branchName ? item.parentBranchId?.branchName :<span className='ps-4'>-</span> }</span>\n            </td>\n            <td>\n              <span >{item.companyId?.companyName ? item.companyId?.companyName : <span className='ps-4'>-</span> }</span>\n            </td>\n            <td>\n              <span >{item.businessGroupId?.groupName ? item.businessGroupId?.groupName : <span className='ps-4'>-</span> }</span>\n            </td>\n            {/* <td>\n              <span>{item.mobileNumber}</span>\n            </td> */}\n            <td>\n              <span>{item.city}</span>\n            </td>\n\n            <td>\n            <Link\n              to={`/branch/bid/${item.id}`}\n              className=\"text-primary badge light border-0 badge-count\"\n            >\n              {branchCount[index]}\n            </Link>\n          </td>\n            {(editPermission || deletePermission) && <td>\n              <span className=\"d-flex justify-content-center\">\n                {editPermission && <span\n                  className=\"cursor-pointer\"\n                  onClick={() => editDrawerOpen(item._id)}\n                >\n                  <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n                </span>}\n                {deletePermission && <DeleteModal\n                  className=\"cursor-pointer \"\n                  onConfirmDelete={onConfirmDelete}\n                  id={item._id}\n                >\n                  <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n                </DeleteModal>}\n              </span>\n            </td>}\n          </tr>\n        ))}\n      </>\n    );\n}\n\nexport default SubCompanyTable","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport SubCompanyTable from \"../../components/Tables/SubCompanyTable\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport AsyncSelect from \"react-select/async\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { clsx } from \"clsx\";\n\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport { usePermissions } from \"../../../context/PermissionContext\";\nimport {\n  getAllBranch,\n  createBranch,\n  deleteBranch,\n} from \"../../../services/api/BranchServices\";\nimport { notifySuccess } from \"../../../utils/toast\";\nimport usePagination from \"../../../hooks/usePagination\";\nimport { getCompany } from \"../../../services/api/CompanyServices\";\nimport CompanyDropdown from \"../../components/CompanyDropdown\";\nimport BranchDropdown from \"../../components/BranchDropdown\";\nimport { getSelectValues } from \"../../../utils/helper\";\nimport ParentBranchDropdown from \"../../components/ParentBranch\";\nimport ReactPaginate from \"react-paginate\";\n\n// import { SubCompanyData } from '../../components/Tables/Tables';\n\nconst Branch = () => {\n  const { isRtl } = useContext(ThemeContext);\n  const arrowleft = clsx({\n    \"fa-solid fa-angle-right\": isRtl,\n    \"fa-solid fa-angle-left\": !isRtl,\n  });\n  const arrowright = clsx({\n    \"fa-solid fa-angle-left\": isRtl,\n    \"fa-solid fa-angle-right\": !isRtl,\n  });\n  const { can, setUserPermission } = usePermissions();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [selectFilter, setFilter] = useState({\n    value: \"All Companies\",\n    label: \"All Companies\",\n  });\n  const [selectFilter2, setFilter2] = useState({\n    value: \"All Branches\",\n    label: \"All Branches\",\n  });\n  const [tempValue, setTempValue] = useState(\"All Companies\");\n  const [tempValue2, setTempValue2] = useState(\"All Branches\");\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      marginRight: \"1rem\",\n      marginLeft: \"1rem\",\n      width: \"15rem\",\n      height: \"0.6rem\",\n      menuPortal: (provided) => ({ ...provided, zIndex: 9999 }),\n      menu: (provided) => ({ ...provided, zIndex: 9999 }),\n    }),\n  };\n  const loggedinUser = localStorage.getItem(\"loginDetails-name\");\n  // const SubCompanyData = JSON.parse( localStorage.getItem('branchData'));\n  const role = localStorage.getItem(\"role\");\n  const { control, setValue, getValues, watch } = useForm();\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const SubCompanyData = userData.filter((item) => item.role === \"branch\");\n  const [companyId, setCompanyId] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const [editData, setEditData] = useState({\n    id: 0,\n    reseller: \"\",\n    contact: 0,\n    username: \"\",\n    status: \"\",\n    location: \"\",\n    usergroup: \"\",\n    branches: 0,\n  });\n  const [companyDropdown, setCompanyDropdown] = useState({\n    label: \"All Companies\",\n    value: \"All Companies\",\n  });\n  const [branchDropdown, setBranchDropdown] = useState({\n    label: \"All Branches\",\n    value: \"All Branches\",\n  });\n  const [companies, setCompanies] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const defaultValues = getSelectValues();\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\n    usePagination();\n  \n  const itemsPerPage=10;\n\n  const handlePageClick = ({ selected }) => {\n    goToPage(selected + 1); \n  };\n  \n    const startIndex = (page - 1) * itemsPerPage;\n    const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  const fetchAllBranch = async (page, CompanyId, branchId) => {\n    try {\n      if (CompanyId) {\n        const { data, success } = await getAllBranch(undefined, CompanyId);\n        setTableData(data.data);\n        setCount(data.totalCount);\n        setBranches(data.data);\n      } else if (branchId) {\n        const { data, success } = await getAllBranch(\n          undefined,\n          undefined,\n          branchId\n        );\n        setTableData(data.data);\n        setCount(data.totalCount);\n        setBranches(data.data);\n      } else {\n        const { data, success } = await getAllBranch(page);\n        const permissions = JSON.parse(localStorage.getItem(\"permission\"));\n        setUserPermission(permissions?.[0]?.permission);\n        setTableData(data.data);\n        setCount(data.totalCount);\n        // setBranches(data.data);\n      }\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    fetchAllBranch(page);\n  }, [page]);\n\n  const filteredBranches = branches.filter(\n    (branch) =>\n      selectedCompany && branch.companyId._id === selectedCompany.value\n  );\n\n  const branchOptions = filteredBranches.map((branch) => ({\n    value: branch._id,\n    label: branch.branchName,\n  }));\n\n  const handleCompanyChange = (selectedOption) => {\n\n    setSelectedCompany(selectedOption);\n    setFilter(selectedOption);\n    setCompanyId(selectedOption.value);\n    setPage(1);\n    fetchAllBranch(1, selectedOption.value);\n  };\n\n  // Handler function for branch selection\n  const handleBranchChange = (branchOption) => {\n\n    setSelectedBranch(branchOption);\n    setFilter2(branchOption);\n    setPage(1);\n    fetchAllBranch(1, undefined, branchOption.value);\n  };\n  const handleClearFilter = () => {\n    fetchAllBranch();\n    setCompanyId(null);\n    setValue(\"company\", \"\");\n    setValue(\"parent\", \"\");\n    setCompanyDropdown({\n      label: \"All companies\",\n      value: \"All companies\",\n    });\n  };\n\n  const onConfirmDelete = async (id) => {\n    await deleteBranch(id);\n    notifySuccess(\"Branch Deleted\");\n    await fetchAllBranch();\n  };\n\n  const editDrawerOpen = (item) => {\n    const filteredData = tableData.filter((data) => data._id === item);\n    navigate(`edit/${item}`, { state: filteredData });\n  };\n\n  const d = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  useEffect(() => {\n    if (role === \"admin\") return;\n    else if (role === \"businessgroup\") {\n      const filteredData = SubCompanyData.filter(\n        (item) => item.parentBusinessGroup === loggedinUser\n      );\n      setTableData(filteredData);\n    } else if (role === \"company\") {\n      const filteredData = SubCompanyData.filter(\n        (item) => item.parentCompany === loggedinUser\n      );\n      setTableData(filteredData);\n    }\n  }, [loggedinUser, role, SubCompanyData]);\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={\"Branch\"}\n        parentTitle={\"Home\"}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t(\"branches\")}</h4>\n                    <div className=\"d-flex align-items-center\">\n                      <Link\n                        className=\"btn  btn-xxs\"\n                        data-bs-toggle=\"offcanvas\"\n                        onClick={handleClearFilter}\n                        style={{\n                          background: \"gray\",\n                          border: \"gray\",\n                          color: \"white\",\n                        }}\n                      >\n                        Clear\n                      </Link>\n                      <Controller\n                        name=\"company\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <CompanyDropdown\n                          \n                            onChange={async (newValue) => {\n                              setValue(\"company\", newValue.value);\n                              setCompanyId(newValue.value);\n                              handleCompanyChange(newValue);\n                            }}\n                            key={companyId}\n                            value={value? value : companyDropdown}\n                            customStyles={customStyles}\n                            name={name}\n                            ref={ref}\n                            isDisabled={false}\n                          />\n                        )}\n                      />\n                      <Controller\n                        name=\"parent\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <ParentBranchDropdown\n                            key={companyId}\n                            onChange={(newValue) => {\n                              setValue(\"parent\", newValue.value);\n                              \n                              handleBranchChange(newValue);\n                            }}\n                            companyId={companyId}\n                            // value={[{\n                            //   label: \"Choose Branch\",\n                            //   value: \"Choose Branch\",\n                            // }]}\n                            value={value? value : branchDropdown}\n                            customStyles={customStyles}\n                            ref={ref}\n                            name={name}\n                            isDisabled={false}\n                          />\n                        )}\n                      />\n                      {can(\"branch\", \"add\") && (\n                        <Link\n                          to={\"/branch/create\"}\n                          className=\"btn btn-primary btn-sm ms-1\"\n                          style={{ paddingBlock: \"9px\" }}\n                          data-bs-toggle=\"offcanvas\"\n                          // onClick={()=>subCompany.current.showModal()}\n                        >\n                          + {t(\"addBranch\")}\n                        </Link>\n                      )}{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"id\")}</th>\n                          <th>{t(\"branchName\")}</th>\n                          <th>{t(\"parentBranch\")}</th>\n                          <th>{t(\"companyName\")}</th>\n                          <th>{t(\"businessGroup\")}</th>\n                          {/* <th>{t('mobileNumber')}</th> */}\n                          <th>{t(\"location\")}</th>\n                          <th>{t(\"childBranches\")}</th>\n                          {(can(\"branch\", \"modify\") ||\n                            can(\"branch\", \"delete\")) && <th>{t(\"action\")}</th>}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <SubCompanyTable\n                          key={tableData}\n                          tempValue={tempValue}\n                          // setDataLength={setDataLength}\n                          tempValue2={tempValue2}\n                          editData={editData}\n                          tableData={tableData}\n                          currentPage={page} \n                          itemsPerPage={itemsPerPage}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <ReactPaginate\n                          previousLabel={\n                            <i className=\"fa-solid fa-angle-left\"></i>\n                          }\n                          nextLabel={\n                            <i className=\"fa-solid fa-angle-right\"></i>\n                          }\n                          breakLabel={\"...\"}\n                          pageCount={Math.ceil(totalCount / itemsPerPage)} // Calculate pageCount based on totalCount and itemsPerPage\n                          marginPagesDisplayed={2}\n                          pageRangeDisplayed={5}\n                          onPageChange={handlePageClick}\n                          containerClassName={\"pagination\"}\n                          activeClassName={\"active\"}\n                          pageClassName=\"page-item\"\n                          pageLinkClassName=\"page-link\"\n                          previousClassName=\"page-item\"\n                          previousLinkClassName=\"page-link\"\n                          nextClassName=\"page-item\"\n                          nextLinkClassName=\"page-link\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <SubCompanyOffcanvas\n                ref={subCompany}\n                editData={editData}\n                setEditData={setEditData}\n                handleSubmit={handleSubmit}\n                Title={ editData.id === 0 ? \"Add Branch\" : \"Edit Branch\"}\n            /> */}\n    </>\n  );\n};\nexport default Branch;\n"],"names":["_ref","onConfirmDelete","params","currentPage","itemsPerPage","tempValue","tempValue2","tableData","editDrawerOpen","setDataLength","filterData","can","usePermissions","editPermission","deletePermission","filter","item","role","parentCompany","parentBranch","branchCount","i","length","branchName","userName","startIndex","_jsx","_Fragment","children","map","index","_item$parentBranchId","_item$parentBranchId2","_item$companyId","_item$companyId2","_item$businessGroupId","_item$businessGroupId2","_jsxs","className","parentBranchId","companyId","companyName","businessGroupId","groupName","city","Link","to","concat","id","onClick","_id","FaEdit","style","color","fontSize","DeleteModal","MdDelete","Branch","isRtl","useContext","ThemeContext","setUserPermission","clsx","t","useTranslation","navigate","useNavigate","selectFilter","setFilter","useParams","useState","value","label","selectFilter2","setFilter2","setTempValue","setTempValue2","data","setData","document","querySelectorAll","customStyles","control","base","marginRight","marginLeft","width","height","menuPortal","provided","zIndex","menu","loggedinUser","localStorage","getItem","setValue","getValues","watch","useForm","SubCompanyData","JSON","parse","setCompanyId","setTableData","editData","setEditData","reseller","contact","username","status","location","usergroup","branches","companyDropdown","setCompanyDropdown","branchDropdown","setBranchDropdown","companies","setCompanies","setBranches","selectedCompany","setSelectedCompany","selectedBranch","setSelectedBranch","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","getSelectValues","usePagination","fetchAllBranch","slice","async","CompanyId","branchId","success","getAllBranch","undefined","_permissions$","permissions","permission","error","console","log","useEffect","branch","filteredData","parentBusinessGroup","MainPagetitle","mainTitle","pageTitle","parentTitle","handleClearFilter","background","border","Controller","name","rules","required","render","_ref2","field","onChange","ref","CompanyDropdown","selectedOption","newValue","isDisabled","_ref3","ParentBranchDropdown","branchOption","paddingBlock","SubCompanyTable","deleteBranch","notifySuccess","state","Math","min","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName"],"sourceRoot":""}