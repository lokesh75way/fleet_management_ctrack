{"version":3,"file":"static/js/4967.16001ae1.chunk.js","mappings":"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","sources":["jsx/components/Tables/DriverTable.jsx","jsx/pages/Driver.js"],"sourcesContent":["import React from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from \"../../../components/Modal/DeleteModal\";\n\nconst DriverTable = ({\n  tableData,\n  currentPage,\n  itemsPerPage,\n  onConfirmDelete,\n  editDrawerOpen,\n}) => {\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n\n  return (\n    <>\n      {tableData.map((item, index) => (\n        <tr key={item.id}>\n          <td>\n            <span>{startIndex + index}</span>\n          </td>\n          <td>\n            <div className=\"products\">\n              <div>\n                <h6>\n                  {item.firstName} {item.lastName}\n                </h6>\n                <span>{item.employeeDesignation}</span>\n              </div>\n            </div>\n          </td>\n          <td>\n            <span>{item.age}</span>\n          </td>\n          <td>\n            <span>{item.contact1}</span>\n          </td>\n          <td>\n            <span className=\"text-primary \">{item.drivingExperience}</span>\n          </td>\n          <td>\n            <span>{item.city}</span>\n          </td>\n          <td>\n            <span\n              className={`badge light border-0 ${\n                item.active ? \"badge-success\" : \"badge-danger\"\n              } d-inline-block text-center`}\n              style={{ width: \"5rem\" }}\n            >\n              {item.active ? \"Active\" : \"InActive\"}\n            </span>\n          </td>\n          <td>\n            <span className=\"d-flex justify-content-center\">\n              <span\n                className=\"cursor-pointer\"\n                onClick={() => editDrawerOpen(item)}\n              >\n                <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n              </span>\n              <DeleteModal\n                className=\"cursor-pointer \"\n                onConfirmDelete={onConfirmDelete}\n                id={item._id}\n              >\n                <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n              </DeleteModal>\n            </span>\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default DriverTable;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MainPagetitle from \"../../components/MainPagetitle\";\nimport DriverTable from \"../components/Tables/DriverTable\";\nimport { clsx } from \"clsx\";\n\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport useStorage from \"../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\nimport { deleteDrivers, getDrivers } from \"../../services/api/driverService\";\nimport { notifyError } from \"../../utils/toast\";\nimport usePagination from \"../../hooks/usePagination\";\nimport ReactPaginate from \"react-paginate\";\nimport { ICON } from \"../constant/theme\";\nimport Paginate from \"../../components/Paginate\";\nimport TableSkeleton from \"@/components/Skeleton/Table\";\n\nconst Driver = () => {\n  const { isRtl } = useContext(ThemeContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const [tableData, setTableData] = useState([]);\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\n    usePagination();\n\n  const itemsPerPage = 10;\n\n  const handlePageClick = ({ selected }) => {\n    goToPage(selected + 1);\n  };\n\n  const startIndex = (page - 1) * itemsPerPage;\n  const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  async function getDriversData(page) {\n    try {\n      setIsLoading(true);\n      const { data, totalLength } = await getDrivers(page);\n      setTableData(data);\n      setCount(totalLength);\n    } catch (error) {\n      notifyError(\"Some error occured !!\");\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getDriversData(page);\n  }, [page]);\n\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n\n  const { t } = useTranslation();\n\n  const onConfirmDelete = async (id) => {\n    try {\n      await deleteDrivers({ driverIds: [id] });\n      const updatedData = tableData.filter((item) => item._id !== id);\n      setTableData(updatedData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const editDrawerOpen = (item) => {\n    // navigate(`/driver/edit/${item._id}`);\n    setEditData(item);\n    const filteredData = tableData.filter((data) => data._id === item._id);\n    navigate(`/driver/edit/${item._id}`, { state: filteredData });\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"drivers\")}\n        pageTitle={t(\"drivers\")}\n        parentTitle={t(\"home\")}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t(\"drivers\")}</h4>\n                    <div>\n                      <Link\n                        to={\"/driver/create\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        data-bs-toggle=\"offcanvas\"\n                        // onClick={() => employe.current.showModal()}\n                      >\n                        + {t(\"addDriver\")}\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    {!tableData.length && isLoading ? (\n                      <TableSkeleton />\n                    ) : (\n                      <table\n                        id=\"empoloyees-tblwrapper\"\n                        className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                      >\n                        <thead>\n                          <tr>\n                            <th>{t(\"id\")}</th>\n                            <th>{t(\"employeeName\")}</th>\n                            <th>{t(\"age\")}</th>\n                            <th>{t(\"contactNumber\")}</th>\n                            <th>{t(\"drivingExperienceSince\")}</th>\n                            <th>{t(\"city\")}</th>\n                            <th>{t(\"status\")}</th>\n                            <th>{t(\"action\")}</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <DriverTable\n                            editData={editData}\n                            tableData={tableData}\n                            onConfirmDelete={onConfirmDelete}\n                            editDrawerOpen={editDrawerOpen}\n                            setEditData={setEditData}\n                            currentPage={page}\n                            itemsPerPage={itemsPerPage}\n                          />\n                        </tbody>\n                      </table>\n                    )}\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Paginate\n                          totalCount={totalCount}\n                          itemsPerPage={itemsPerPage}\n                          handlePageClick={handlePageClick}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Driver;\n"],"names":["_ref","tableData","currentPage","itemsPerPage","onConfirmDelete","editDrawerOpen","startIndex","_jsx","_Fragment","children","map","item","index","_jsxs","className","firstName","lastName","employeeDesignation","age","contact1","drivingExperience","city","active","style","width","onClick","FaEdit","color","fontSize","DeleteModal","id","_id","MdDelete","Driver","isRtl","useContext","ThemeContext","isLoading","setIsLoading","useState","navigate","useNavigate","setTableData","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","usePagination","slice","useEffect","async","data","totalLength","getDrivers","error","notifyError","getDriversData","editData","setEditData","status","title","contact","gender","location","t","useTranslation","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","length","TableSkeleton","DriverTable","deleteDrivers","driverIds","updatedData","filter","console","filteredData","state","Math","min","Paginate","handlePageClick","selected"],"sourceRoot":""}