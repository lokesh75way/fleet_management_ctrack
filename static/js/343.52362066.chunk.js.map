{"version":3,"file":"static/js/343.52362066.chunk.js","mappings":"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","sources":["jsx/components/Aikit/FineTuneJob.js","jsx/components/Aikit/Repurpose.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\n// import { SelectPicker } from 'rsuite';\n\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\n\nimport { IMAGES, SVGICON } from \"../../../constants/theme\";\n\nconst options = [\n  { value: \"1\", label: \"Product\" },\n  { value: \"2\", label: \"Post\" },\n];\nconst options1 = [\n  { value: \"1\", label: \"Post\" },\n  { value: \"2\", label: \"Product\" },\n];\nconst options2 = [\n  { value: \"1\", label: \"Uncategorized\" },\n  { value: \"2\", label: \"Categorized\" },\n];\nconst options3 = [\n  { value: \"1\", label: \"Draft\" },\n  { value: \"2\", label: \"Categorized\" },\n];\n\nconst data = [\n  { icon: IMAGES.England, value: 1, label: \"England\" },\n  { icon: IMAGES.IndiaFlag, value: 2, label: \"India\" },\n  { icon: IMAGES.Arab, value: 3, label: \"UAE\" },\n];\n\nconst FineTuneJob = () => {\n  const [selectedOption, setSelectedOption] = useState(data[0]);\n  const handleChange = (e) => {\n    setSelectedOption(e);\n  };\n\n  // const renderMenuItem = (label, item) => {\n  //     return (\n  //       <div>\n  //         <img src={item.icon} alt={label} style={{ width: 20, marginRight: 10 }} />\n  //         {label}\n  //       </div>\n  //     );\n  //   };\n  return (\n    <div className=\"card overflow-hidden h-auto\">\n      <div className=\"card-header border-0 pb-0\">\n        <h4 className=\"heading mb-0\">Create Repurpose Job</h4>\n\n        <Select\n          className=\"custom-react-select img-select\"\n          isSearchable={false}\n          value={selectedOption}\n          options={data}\n          onChange={handleChange}\n          getOptionLabel={(e) => (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <img src={e.icon} alt=\"\" style={{ width: 20, marginRight: 5 }} />\n              <span style={{ marginLeft: 5 }}>{e.label}</span>\n            </div>\n          )}\n        />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"mb-3\">\n          <span>Choose content type:</span>\n          <OverlayTrigger\n            overlay={\n              <Tooltip id=\"tooltip-disabled\">\n                Enter your RapidAPI key for Subtitles for YouTube here.!\n              </Tooltip>\n            }\n          >\n            {SVGICON.HoverCircle}\n          </OverlayTrigger>\n          <div className=\"my-2 d-flex align-items-center flex-wrap\">\n            <Link to={\"#\"} className=\" btn btn-outline-primary me-3\">\n              {SVGICON.PostArticle} Post or article\n            </Link>\n            <Link to={\"#\"} className=\" btn btn-outline-primary\">\n              {SVGICON.YouTube} YouTube video\n            </Link>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n                URL of article, post or video\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleFormControlInput1\"\n                placeholder=\"Find My Device\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">\n                Posts to generate:\n              </label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"exampleFormControlInput2\"\n                placeholder=\"1\"\n              />\n            </div>\n            <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">\n              Post type\n            </label>\n            <div className=\"mb-3\">\n              <Select\n                options={options}\n                className=\"custom-react-select\"\n                defaultValue={options[0]}\n                isSearchable={false}\n              />\n            </div>\n            <label className=\"form-label\">Post type</label>\n            <div className=\"mb-3\">\n              <Select\n                options={options1}\n                className=\"custom-react-select\"\n                defaultValue={options1[0]}\n                isSearchable={false}\n              />\n            </div>\n            <label className=\"form-label\">Post category</label>\n            <div className=\"mb-3\">\n              <Select\n                options={options2}\n                className=\"custom-react-select\"\n                defaultValue={options2[0]}\n                isSearchable={false}\n              />\n            </div>\n            <label className=\"form-label\">Post status</label>\n            <div className=\"mb-3\">\n              <Select\n                options={options3}\n                className=\"custom-react-select\"\n                defaultValue={options3[0]}\n                isSearchable={false}\n              />\n            </div>\n            <hr style={{ marginLeft: \"-21px\", marginRight: \"-21px\" }} />\n            <div className=\"btn-group ai-tag-group\" role=\"group\">\n              <input type=\"checkbox\" className=\"btn-check\" id=\"btncheck1\" />\n              <label\n                className=\"btn btn-outline-primary btn-sm mb-0\"\n                htmlFor=\"btncheck1\"\n              >\n                Include featured image\n              </label>\n            </div>\n            <hr\n              style={{\n                marginLeft: \"-21px\",\n                marginRight: \"-21px\",\n                marginBottom: \"0\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"card-footer border-0\">\n        <div className=\"text-center\">\n          <Link to={\"#\"} className=\"btn btn-primary\">\n            {SVGICON.Refresh} Repurpose\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FineTuneJob;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Tab, Nav } from \"react-bootstrap\";\n\nimport PageTitle from \"../../layouts/PageTitle\";\nimport TopMenus from \"./TopMenus\";\nimport MainContent from \"./MainContent\";\nimport Prompts from \"./Prompts\";\nimport FineTuneJob from \"./FineTuneJob\";\n\nconst schedulerTable = [\n  { keyword: \"lion\" },\n  { keyword: \"Tegr\" },\n  { keyword: \"Fres\" },\n  { keyword: \"Tiney\" },\n  { keyword: \"lion\" },\n  { keyword: \"Tegr\" },\n  { keyword: \"Fres\" },\n  { keyword: \"Tiney\" },\n  { keyword: \"lion\" },\n  { keyword: \"Tegr\" },\n  { keyword: \"Fres\" },\n  { keyword: \"Tiney\" },\n  { keyword: \"Tegr\" },\n  { keyword: \"Fres\" },\n  { keyword: \"Tiney\" },\n  { keyword: \"lion\" },\n  { keyword: \"Tegr\" },\n  { keyword: \"Fres\" },\n];\n\nconst numb = [1, 2, 3];\n\nconst Repurpose = () => {\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        data[i].classList.remove(\"d-none\");\n      } else {\n        data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  return (\n    <>\n      <PageTitle activeMenu={\"Repurpose\"} motherMenu={\"AiKit\"} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <MainContent\n              detail=\"This is a demo of AIKit plugin made for you to test the experience of using the plugin. \"\n              subtitle=\"AIKit Auto Writer is a tool helps you write drafts quickly, but please review and edit before publishing for best results. This is not a substitute for human editing, but a drafting aid. Happy writing!\"\n            />\n            <TopMenus id={3} />\n\n            <Tab.Container defaultActiveKey={\"Create\"}>\n              <div className=\"card h-auto\">\n                <div className=\"card-body ai-tabs-1 py-2\">\n                  <Nav as=\"ul\" className=\"nav nav-tabs align-items-end\">\n                    <Nav.Item as=\"li\">\n                      <Nav.Link\n                        className=\"nav-link\"\n                        eventKey=\"Create\"\n                        type=\"button\"\n                      >\n                        Create Fine-tune Job\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\">\n                      <Nav.Link eventKey=\"Job\" type=\"button\">\n                        Jobs\n                        <span className=\"badge badge-circle badge-light light ms-2\">\n                          5\n                        </span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </div>\n              </div>\n              <Tab.Content>\n                <Tab.Pane eventKey={\"Create\"}>\n                  <div className=\"row\">\n                    <div className=\"col-xl-4\">\n                      <FineTuneJob />\n                    </div>\n                    <div className=\"col-xl-8\">\n                      <Prompts />\n                    </div>\n                  </div>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"Job\"}>\n                  <div className=\"card\">\n                    <div className=\"card-body p-0\">\n                      <div\n                        id=\"employee-tbl_wrapper\"\n                        className=\"table-responsive dataTables_wrapper active-projects style-1\"\n                      >\n                        <table\n                          id=\"empoloyees-tblwrapper\"\n                          className=\"table dataTable dataTables_wrapper no-footer mb-0\"\n                        >\n                          <thead>\n                            <tr>\n                              <th>URL</th>\n                              <th>Job Type</th>\n                              <th>Keywords</th>\n                              <th>Done</th>\n                              <th>Had errors</th>\n                              <th>Date created</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {schedulerTable.map((item, ind) => (\n                              <tr key={ind}>\n                                <td>\n                                  <Link to={\"#\"}>\n                                    www.wsj.com/articles/harvard-discriminates-against-middle-class-kids-legacy-admissions-court-85cf4503\n                                  </Link>\n                                </td>\n                                <td>URL</td>\n\n                                <td>-</td>\n                                <td>\n                                  {numb.includes(ind) ? (\n                                    <span className=\"badge badge-success\">\n                                      Yes\n                                    </span>\n                                  ) : (\n                                    <span className=\"badge badge-light\">\n                                      No\n                                    </span>\n                                  )}\n                                </td>\n                                <td>\n                                  <span className=\"badge badge-light\">No</span>\n                                </td>\n                                <td>5:50 am July 11, 2023</td>\n                                <td>\n                                  <Link\n                                    to={\"#\"}\n                                    className=\"btn btn-primary light btn-sharp\"\n                                  >\n                                    <svg\n                                      width=\"15\"\n                                      height=\"16\"\n                                      viewBox=\"0 0 15 16\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        d=\"M0.625 8C0.625 8 3.125 3 7.5 3C11.875 3 14.375 8 14.375 8C14.375 8 11.875 13 7.5 13C3.125 13 0.625 8 0.625 8Z\"\n                                        stroke=\"var(--primary)\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      ></path>\n                                      <path\n                                        d=\"M7.5 9.875C8.53553 9.875 9.375 9.03553 9.375 8C9.375 6.96447 8.53553 6.125 7.5 6.125C6.46447 6.125 5.625 6.96447 5.625 8C5.625 9.03553 6.46447 9.875 7.5 9.875Z\"\n                                        stroke=\"var(--primary)\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      ></path>\n                                    </svg>\n                                  </Link>{\" \"}\n                                  <Link\n                                    to={\"#\"}\n                                    className=\"btn btn-danger light btn-sharp\"\n                                  >\n                                    <svg\n                                      width=\"15\"\n                                      height=\"16\"\n                                      viewBox=\"0 0 15 16\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        d=\"M1.875 4.25H3.125H13.125\"\n                                        stroke=\"#FF5B5B\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      />\n                                      <path\n                                        d=\"M11.875 4.25V13C11.875 13.3315 11.7433 13.6495 11.5089 13.8839C11.2745 14.1183 10.9565 14.25 10.625 14.25H4.375C4.04348 14.25 3.72554 14.1183 3.49112 13.8839C3.2567 13.6495 3.125 13.3315 3.125 13V4.25M5 4.25V3C5 2.66848 5.1317 2.35054 5.36612 2.11612C5.60054 1.8817 5.91848 1.75 6.25 1.75H8.75C9.08152 1.75 9.39946 1.8817 9.63388 2.11612C9.8683 2.35054 10 2.66848 10 3V4.25\"\n                                        stroke=\"#FF5B5B\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      />\n                                      <path\n                                        d=\"M6.25 7.375V11.125\"\n                                        stroke=\"#FF5B5B\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      />\n                                      <path\n                                        d=\"M8.75 7.375V11.125\"\n                                        stroke=\"#FF5B5B\"\n                                        strokeWidth=\"1.2\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                      />\n                                    </svg>\n                                  </Link>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                        <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                          <div className=\"dataTables_info\">\n                            Showing {activePag.current * sort + 1} to{\" \"}\n                            {data.length > (activePag.current + 1) * sort\n                              ? (activePag.current + 1) * sort\n                              : data.length}{\" \"}\n                            of {data.length} entries\n                          </div>\n                          <div\n                            className=\"dataTables_paginate paging_simple_numbers\"\n                            id=\"example2_paginate\"\n                          >\n                            <Link\n                              className=\"paginate_button previous disabled\"\n                              to=\"#\"\n                              onClick={() =>\n                                activePag.current > 0 &&\n                                onClick(activePag.current - 1)\n                              }\n                            >\n                              <i className=\"fa-solid fa-angle-left\" />\n                            </Link>\n                            <span>\n                              {paggination.map((number, i) => (\n                                <Link\n                                  key={i}\n                                  to=\"#\"\n                                  className={`paginate_button  ${\n                                    activePag.current === i ? \"current\" : \"\"\n                                  } `}\n                                  onClick={() => onClick(i)}\n                                >\n                                  {number}\n                                </Link>\n                              ))}\n                            </span>\n                            <Link\n                              className=\"paginate_button next\"\n                              to=\"#\"\n                              onClick={() =>\n                                activePag.current + 1 < paggination.length &&\n                                onClick(activePag.current + 1)\n                              }\n                            >\n                              <i className=\"fa-solid fa-angle-right\" />\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Repurpose;\n"],"names":["options","value","label","options1","options2","options3","data","icon","IMAGES","England","IndiaFlag","Arab","FineTuneJob","selectedOption","setSelectedOption","useState","_jsxs","className","children","_jsx","Select","isSearchable","onChange","e","getOptionLabel","style","display","alignItems","src","alt","width","marginRight","marginLeft","OverlayTrigger","overlay","Tooltip","id","SVGICON","HoverCircle","Link","to","PostArticle","YouTube","htmlFor","type","placeholder","defaultValue","role","marginBottom","Refresh","schedulerTable","keyword","numb","Repurpose","setData","document","querySelectorAll","sort","activePag","useRef","test","settest","chageData","frist","sec","i","length","classList","remove","add","useEffect","current","paggination","Array","Math","ceil","fill","map","_","onClick","_Fragment","PageTitle","activeMenu","motherMenu","MainContent","detail","subtitle","TopMenus","Tab","Container","defaultActiveKey","Nav","as","Item","eventKey","Content","Pane","Prompts","item","ind","includes","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","number"],"sourceRoot":""}