{"version":3,"file":"static/js/1849.c1e854cf.chunk.js","mappings":"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","sources":["jsx/components/DriverDropdown/index.jsx","jsx/pages/ClassifyTrip/Trip.js","jsx/pages/ClassifyTrip/ClassifyTripForm.js","services/api/ClassifyTripServices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from \"react-select\";\nimport { getDrivers } from '../../../services/api/driverService';\nconst DriverDropdown = ({\n    onChange,\n    value,\n    customStyles,\n    ref,\n    isDisabled,\n    name\n}) => {\n    // console.log(value, \"this is isDisabled\")\n    const [dropDownOptions, setdropDownOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(value);\n    useEffect(() => {\n        const fetchDrivers = async () => {\n            const response = await getDrivers();\n            console.log(response.data,\"dsis\");\n            const driverOptions = response.data.map((item) => ({\n                label: item?.firstName,\n                value: item?._id,\n            }));\n            // console.log(response.data, \"this is groud data\")\n            // console.log(driverOptions, \"this is group options\")\n            setdropDownOptions(driverOptions);\n        };\n        fetchDrivers();\n    }\n    , []);\n    useEffect(() => {\n        const selected = dropDownOptions.find((option) => option.value === value);\n        setSelectedOption(selected);\n    }, [value, dropDownOptions]);\n\n    return (\n            <Select\n                options = {dropDownOptions}\n                value={selectedOption}\n                onChange={(newValue) => onChange(newValue)}\n                styles={customStyles}\n                ref={ref}\n                name={name}\n                />\n    );\n}\nexport default DriverDropdown;","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { tripStatusOptions } from \"../../components/TabComponent/VehicleTabs/Options\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport Error from \"../../components/Error/Error\";\nimport CustomInput from \"../../components/Input/CustomInput\";\nimport DriverDropdown from \"../../components/DriverDropdown\";\n\nconst Trip = ({\n  Title,\n  editData,\n  setEditData,\n  register,\n  setValue,\n  getValues,\n  handleSubmit,\n  onSubmit,\n  errors,\n  control,\n  clearErrors,\n}) => {\n  const [addEmploye, setAddEmploye] = useState(false);\n  const [tempValue, setTempValue] = useState();\n  const [dValues, setDvalues] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation()\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n  const { id } = useParams();\n  useEffect(() => {\n    if (id) {\n      const data = location.state[0];\n      setDvalues(data);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    console.log(dValues,\"mn\")\n    if (dValues && id) {\n    //   setValue(\"startTime\", dValues?.startTime);\n      setValue(\"startLocation\", dValues?.startLocation);\n      setValue(\"reachLocation\", dValues?.reachLocation);\n      setValue(\"distance\", dValues?.distance);\n      setValue(\"fuelConsumption\", dValues?.fuelConsumption);\n      setValue(\"tripStatus\", dValues?.tripStatus);\n      setValue('driver', dValues?.driver)\n    }\n    else{\n      setValue(\"startTime\", new Date());\n      setValue(\"reachTime\", new Date());\n    }\n  }, [dValues, id]);\n\n\n\n  return (\n    <>\n      <div className=\"p-4\">\n        <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Start Time <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"startTime\"\n              control={control}\n              render={({ value, name }) => (\n                <DatePicker\n                  selected={getValues(\"startTime\") || new Date()}\n                  className=\"form-control customDateHeight\"\n                  onChange={(newValue) => setValue(\"startTime\", newValue)}\n                />\n              )}\n            />\n            <Error errorName={errors.startTime} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Start Location <span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"Start Location\"\n              name=\"startLocation\"\n              placeholder=\"\"\n            />\n            <br />\n            <Error errorName={errors.startLocation} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Reach Time <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"reachTime\"\n              control={control}\n              render={({ value, name }) => (\n                <DatePicker\n                  selected={getValues(\"reachTime\") || new Date()}\n                  className=\"form-control customDateHeight\"\n                  onChange={(newValue) => setValue(\"reachTime\", newValue)}\n                />\n              )}\n            />\n            <br />\n            <Error errorName={errors.reachTime} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Reach Location <span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"Reach Location\"\n              name=\"reachLocation\"\n              placeholder=\"\"\n            />\n            <Error errorName={errors.reachLocation} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Distance\n            </label>\n            <CustomInput\n              type=\"number\"\n              register={register}\n              label=\"Distance\"\n              name=\"distance\"\n              placeholder=\"\"\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Fuel Consumption\n            </label>\n            <CustomInput\n              type=\"number\"\n              register={register}\n              label=\"Fuel Consumption\"\n              name=\"fuelConsumption\"\n              placeholder=\"\"\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              Driver <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"driver\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <DriverDropdown\n                  onChange={(newValue) => {\n                    setValue(\"driver\", newValue.value);\n                  }}\n                  value={value}\n                  customStyles={customStyles}\n                  ref={ref}\n                  name={name}\n                />\n              )}\n            />\n            <Error errorName={errors.driver} />\n          </div>\n          {/* <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Last Modified By\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Last Modified By\"\n                        name=\"lastModifiedBy\"\n                        placeholder=\"\"\n                      />\n                    </div> */}\n          {/* <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n                      <label className=\"form-label\">Last Modified Date</label>\n                      <Controller\n                        name=\"lastModifiedDate\"\n                        control={control}\n                        render={({ value, name }) => (\n                          <DatePicker\n                            selected={\n                              getValues(\"lastModifiedDate\") || new Date()\n                            }\n                            className=\"form-control customDateHeight\"\n                            onChange={(newValue) => {\n                              setTempValue(newValue.value);\n                              setValue(\"lastModifiedDate\", newValue);\n                            }}\n                          />\n                        )}\n                      />\n                    </div> */}\n          <div className=\"col-xl-6 mb-3\">\n            <label className=\"form-label\">Trip Status</label>\n            <Controller\n              name=\"tripStatus\"\n              control={control}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <Select\n                  onChange={(newValue) => {\n                    setTempValue(newValue.value);\n                    setValue(\"tripStatus\", newValue.value);\n                  }}\n                  options={tripStatusOptions}\n                  ref={ref}\n                  name={name}\n                  styles={customStyles}\n                  defaultValue={tripStatusOptions[0]}\n                />\n              )}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <button\n            type=\"submit\"\n            onClick={() => {\n              handleSubmit(onSubmit);\n            }}\n            className=\"btn btn-primary me-1\"\n          >\n            Submit\n          </button>\n          <Link\n            to={\"#\"}\n            onClick={() => setAddEmploye(false)}\n            className=\"btn btn-danger light ms-1\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Trip;\n","import React, { useState } from \"react\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Trip from \"./Trip\";\nimport { classifyTripsSchema } from \"../../../yup\";\nimport { createTrip, updateTrip } from \"../../../services/api/ClassifyTripServices\";\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ClassifyTripForm = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const navigate = useNavigate();\n  const tabHeading = [\"Trip\"]; // Change the tab heading to \"Trip\"\n  const component = [Trip]; // Use the Trip component for all tabs\n\n  const totalTabs = tabHeading.length;\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n\n  const { id } = useParams();\n  const { t } = useTranslation();\n  console.log(errors)\n  const onSubmit = async (data) => {\n    console.log(data)\n    if (id) {\n      try {\n        await updateTrip(id,data);\n        notifySuccess(\"Trip Updated!\");\n        navigate(\"/settings/classifyTrips\");\n        return;\n      } catch (e) {\n        console.log(e);\n        notifyError(\"Some error occured !!\");\n      }\n    } else {\n      try {\n        await createTrip(data);\n        notifySuccess(\"New Trip Created!\");\n        navigate(\"/settings/classifyTrips\");\n        console.log(\"Submit botn\", data);\n      } catch (error) {\n        console.log(\"Error\", error);\n        notifyError(\"Some error occured !!\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"Trip\")}\n        pageTitle={id ? t(\"edit\") : t(\"create\")}\n        parentTitle={t(\"ClassifyTrips\")}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\n\nexport default ClassifyTripForm;\n","import axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios();\n\nexport const getTrips = async (pageNo = 1, status, driverId, startDate, endDate) => {\n  console.log(\"driverIdhi\", driverId, startDate, endDate)\n  let url = `/trips?page=${pageNo}&limit=10`;\n  if (driverId && startDate && endDate) {\n    url += `&driverId=${driverId}&start=${startDate}&end=${endDate}`;\n  } else {\n    url += `&status=${status}`;\n  }\n  const response = await axios.get(url);\n  return { data: response.data.data.data, totalLength: response.data.data.count };\n};\n\n\nexport const createTrip = async (body) => {\n  return axios.post(\"/trips\", body);\n};\n\nexport const updateTrip = async (id,body) => {\n  return axios.patch(`/trips/${id}`, body);\n};\n\nexport const deleteTrip = async (id) => {\n  return axios.delete(`/trips/${id}`);\n};\n"],"names":["_ref","onChange","value","customStyles","ref","isDisabled","name","dropDownOptions","setdropDownOptions","useState","selectedOption","setSelectedOption","useEffect","async","response","getDrivers","console","log","data","driverOptions","map","item","label","firstName","_id","fetchDrivers","selected","find","option","_jsx","Select","options","newValue","styles","Title","editData","setEditData","register","setValue","getValues","handleSubmit","onSubmit","errors","control","clearErrors","addEmploye","setAddEmploye","tempValue","setTempValue","dValues","setDvalues","location","useNavigate","useLocation","base","padding","id","useParams","state","startLocation","reachLocation","distance","fuelConsumption","tripStatus","driver","Date","_Fragment","children","_jsxs","className","style","width","margin","htmlFor","Controller","render","_ref2","DatePicker","Error","errorName","startTime","CustomInput","type","placeholder","_ref3","reachTime","rules","required","_ref4","field","DriverDropdown","_ref5","tripStatusOptions","defaultValue","display","justifyContent","onClick","Link","to","ClassifyTripForm","activeIndex","setActiveIndex","navigate","tabHeading","component","Trip","formState","length","useForm","resolver","yupResolver","classifyTripsSchema","t","useTranslation","updateTrip","notifySuccess","e","notifyError","createTrip","error","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","eventKey","active","Content","Component","Pane","initAxios","getTrips","pageNo","arguments","undefined","status","driverId","startDate","endDate","url","concat","axios","get","totalLength","count","post","body","patch","deleteTrip","delete"],"sourceRoot":""}