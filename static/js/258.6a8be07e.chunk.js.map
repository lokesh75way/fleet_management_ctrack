{"version":3,"file":"static/js/258.6a8be07e.chunk.js","mappings":"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","sources":["jsx/components/table/FilteringTable/ColumnFilter.js","jsx/components/table/FilteringTable/Columns.js","jsx/components/table/FilteringTable/GlobalFilter.js","jsx/components/table/FilteringTable/FilteringTable.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport const ColumnFilter = ( { column } ) => {\r\n\t\r\n\tconst {filterValue, setFilter} = column\r\n\treturn(\r\n\t\t<div>\r\n\t\t\r\n\t\t\t<input className=\"form-control input-search\"\r\n\t\t\t\tvalue={filterValue || ''}  onChange={e => setFilter(e.target.value)} />\r\n\t\t</div>\r\n\t)\r\n} ","\r\nimport { ColumnFilter } from './ColumnFilter';\r\n\r\n\r\n\r\nfunction dateFormat(value){\r\n\tlet objectDate = new Date(value);\r\n\tlet day = (\"0\" + (objectDate.getDate() + 1)).slice(-2);\r\n\tlet month = (\"0\" + (objectDate.getMonth() + 1)).slice(-2);\r\n\tlet year = objectDate.getFullYear();\r\n\t\r\n\treturn  day + \"/\" + month + \"/\" + year;\t \r\n\t\r\n}\r\n\r\n\r\n\r\nexport const COLUMNS = [\r\n\t{\r\n\t\tHeader : 'Id',\r\n\t\tFooter : 'Id',\r\n\t\taccessor: 'id',\r\n\t\tFilter: ColumnFilter,\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tHeader : 'First Name',\r\n\t\tFooter : 'First Name',\r\n\t\taccessor: 'first_name',\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n\t{\r\n\t\tHeader : 'Last Name',\r\n\t\tFooter : 'Last Name',\r\n\t\taccessor: 'last_name',\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n\t{\r\n\t\tHeader : 'Email Id',\r\n\t\tFooter : 'Email Id',\r\n\t\taccessor: 'email',\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n\t{\r\n\t\tHeader : 'Date of  Birth',\r\n\t\tFooter : 'Date of  Birth',\r\n\t\taccessor: 'date_of_birth',\r\n\t\tCell: ({ value }) => {return dateFormat(value)},\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n\t{\r\n\t\tHeader : 'Country',\r\n\t\tFooter : 'Country',\r\n\t\taccessor: 'country',\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n\t{\r\n\t\tHeader : 'Phone',\r\n\t\tFooter : 'Phone',\r\n\t\taccessor: 'phone',\r\n\t\tFilter: ColumnFilter,\r\n\t},\r\n]\r\n\r\nexport const GROUPED_COLUMNS = [\r\n\t{\r\n\t\tHeader : 'Id',\r\n\t\tFooter : 'Id',\r\n\t\taccessor: 'id'\r\n\t},\r\n\t{\r\n\t\tHeader : 'Name',\r\n\t\tFooter : 'Name',\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader : 'First Name',\r\n\t\t\t\tFooter : 'First Name',\r\n\t\t\t\taccessor: 'first_name'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader : 'Last Name',\r\n\t\t\t\tFooter : 'Last Name',\r\n\t\t\t\taccessor: 'last_name'\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tHeader: 'Info',\r\n\t\tFooter: 'Info',\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tHeader : 'Date of  Birth',\r\n\t\t\t\tFooter : 'Date of  Birth',\r\n\t\t\t\taccessor: 'date_of_birth'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader : 'Country',\r\n\t\t\t\tFooter : 'Country',\r\n\t\t\t\taccessor: 'country',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader : 'Phone',\r\n\t\t\t\tFooter : 'Phone',\r\n\t\t\t\taccessor: 'phone'\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n]","import React from 'react';\r\n\r\nexport const GlobalFilter = ( {filter, setFilter} ) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\tSearch : {' '}\r\n\t\t\t<input className=\"ml-2 input-search form-control\"\r\n\t\t\t\tvalue={filter || ''}  onChange={e => setFilter(e.target.value)} style={{width: \"20%\"}}\r\n            />\r\n\t\t</div>\r\n\t)\r\n} ","import React,{ useMemo } from 'react';\r\nimport PageTitle from \"../../../layouts/PageTitle\";\r\nimport { useTable, useGlobalFilter, useFilters, usePagination } from 'react-table';\r\nimport MOCK_DATA from './MOCK_DATA_2.json';\r\nimport { COLUMNS } from './Columns';\r\nimport { GlobalFilter } from './GlobalFilter'; \r\n//import './table.css';\r\nimport './filtering.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\n\r\nexport const FilteringTable = () => {\r\n\tconst columns = useMemo( () => COLUMNS, [] )\r\n\tconst data = useMemo( () => MOCK_DATA, [] )\r\n\tconst tableInstance = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\t\r\n\t\tinitialState : {pageIndex : 0}\r\n\t}, useFilters, useGlobalFilter, usePagination)\r\n\t\r\n\tconst { \r\n\t\tgetTableProps, \r\n\t\tgetTableBodyProps, \r\n\t\theaderGroups, \r\n\t\tprepareRow,\r\n\t\tstate,\r\n\t\tpage,\r\n\t\tgotoPage,\r\n\t\tpageCount,\r\n\t\tpageOptions,\r\n\t\tnextPage,\r\n\t\tpreviousPage,\r\n\t\tcanNextPage,\r\n\t\tcanPreviousPage,\r\n\t\tsetGlobalFilter,\r\n\t} = tableInstance\r\n\t\r\n\t\r\n\tconst {globalFilter, pageIndex} = state\r\n\t\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<PageTitle activeMenu=\"Filtering\" motherMenu=\"Table\" />\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Table Filtering</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t\t\t<GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n\t\t\t\t\t\t\t\t\t<table {...getTableProps()} className=\"table dataTable display\">\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t{headerGroups.map(headerGroup => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{headerGroup.headers.map(column => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{column.render('Header')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{column.canFilter ? column.render('Filter') : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</thead> \r\n\t\t\t\t\t\t\t\t\t\t<tbody {...getTableBodyProps()} className=\"\" >\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{page.map((row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tprepareRow(row)\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\tPage{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{pageIndex + 1} of {pageOptions.length}\r\n\t\t\t\t\t\t\t\t\t\t\t</strong>{''}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"table-index\">\r\n\t\t\t\t\t\t\t\t\t\t\tGo to page : {' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pageIndex + 1} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = {e => { \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst pageNumber = e.target.value ? Number(e.target.value) - 1 : 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgotoPage(pageNumber)\r\n\t\t\t\t\t\t\t\t\t\t\t\t} } \r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center mb-3\">\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"filter-pagination  mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\" previous-button\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"previous-button\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"next-button\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\" next-button\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n\t\r\n}\r\nexport default FilteringTable;"],"names":["ColumnFilter","_ref","column","filterValue","setFilter","_jsx","children","className","value","onChange","e","target","COLUMNS","Header","Footer","accessor","Filter","Cell","objectDate","Date","getDate","slice","getMonth","getFullYear","dateFormat","GlobalFilter","filter","_jsxs","style","width","FilteringTable","columns","useMemo","data","MOCK_DATA","tableInstance","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","page","gotoPage","pageCount","pageOptions","nextPage","previousPage","canNextPage","canPreviousPage","setGlobalFilter","globalFilter","_Fragment","PageTitle","activeMenu","motherMenu","Row","Col","lg","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","length","type","defaultValue","pageNumber","Number","onClick","disabled"],"sourceRoot":""}