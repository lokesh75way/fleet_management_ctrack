{"version":3,"file":"static/js/831.be355eeb.chunk.js","mappings":"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","sources":["jsx/components/Tables/DriverTable.jsx","jsx/pages/Driver.js"],"sourcesContent":["import React from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from \"../Modal/DeleteModal\";\n\nconst DriverTable = ({ tableData, onConfirmDelete, editDrawerOpen }) => {\n  return (\n    <>\n      {tableData.map((item, index) => (\n        <tr key={item.id}>\n          <td>\n            <span>{item._id}</span>\n          </td>\n          <td>\n            <div className=\"products\">\n              <div>\n                <h6>\n                  {item.firstName} {item.lastName}\n                </h6>\n                <span>{item.employeeDesignation}</span>\n              </div>\n            </div>\n          </td>\n          <td>\n            <span>{item.age}</span>\n          </td>\n          <td>\n            <span>{item.contact1}</span>\n          </td>\n          <td>\n            <span className=\"text-primary \">{item.drivingExperience}</span>\n          </td>\n          <td>\n            <span>{item.city}</span>\n          </td>\n          <td>\n            <span\n              className={`badge light border-0 ${\n                item.active ? \"badge-success\" : \"badge-danger\"\n              } d-inline-block text-center`}\n              style={{ width: \"5rem\" }}\n            >\n              {item.active ? \"Active\" : \"InActive\"}\n            </span>\n          </td>\n          <td>\n            <span className=\"d-flex justify-content-center\">\n              <span\n                className=\"cursor-pointer\"\n                onClick={() => editDrawerOpen(item)}\n              >\n                <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n              </span>\n              <DeleteModal\n                className=\"cursor-pointer \"\n                onConfirmDelete={onConfirmDelete}\n                id={item._id}\n              >\n                <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n              </DeleteModal>\n            </span>\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default DriverTable;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport MainPagetitle from \"../layouts/MainPagetitle\";\r\nimport DriverTable from \"../components/Tables/DriverTable\";\r\nimport { clsx } from \"clsx\";\r\n\r\nimport { ThemeContext } from \"../../context/ThemeContext\";\r\nimport useStorage from \"../../hooks/useStorage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { deleteDrivers, getDrivers } from \"../../services/api/driverService\";\r\nimport { notifyError } from \"../../utils/toast\";\r\nimport usePagination from \"../../hooks/usePagination\";\r\n\r\nconst Driver = () => {\r\n  const { isRtl } = useContext(ThemeContext);\r\n  const arrowleft = clsx({\r\n    \"fa-solid fa-angle-right\": isRtl,\r\n    \"fa-solid fa-angle-left\": !isRtl,\r\n  });\r\n  const arrowright = clsx({\r\n    \"fa-solid fa-angle-left\": isRtl,\r\n    \"fa-solid fa-angle-right\": !isRtl,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\r\n    usePagination();\r\n\r\n  async function getDriversData(page) {\r\n    try {\r\n      const { data, totalLength } = await getDrivers(page);\r\n      console.log(data,totalCount,'ji')\r\n      setTableData(data);\r\n      setCount(totalLength);\r\n    } catch (error) {\r\n      notifyError(\"Some error occured !!\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDriversData(page);\r\n  }, [page]);\r\n\r\n  const [editData, setEditData] = useState({\r\n    id: 0,\r\n    status: \"\",\r\n    title: \"\",\r\n    contact: 0,\r\n    age: 0,\r\n    drivingExperience: 0,\r\n    gender: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onConfirmDelete = async (id) => {\r\n    try {\r\n      await deleteDrivers({ driverIds: [id] });\r\n      const updatedData = tableData.filter((item) => item._id !== id);\r\n      setTableData(updatedData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const editDrawerOpen = (item) => {\r\n    // navigate(`/driver/edit/${item._id}`);\r\n    setEditData(item);\r\n    const filteredData = tableData.filter((data) => data._id === item._id);\r\n    console.log(\"filtered\", filteredData, item);\r\n    navigate(`/driver/edit/${item._id}`, { state: filteredData });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainPagetitle\r\n        mainTitle={t(\"drivers\")}\r\n        pageTitle={t(\"drivers\")}\r\n        parentTitle={t(\"home\")}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body p-0\">\r\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\r\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\r\n                    <h4 className=\"heading mb-0\">{t(\"drivers\")}</h4>\r\n                    <div>\r\n                      <Link\r\n                        to={\"/driver/create\"}\r\n                        className=\"btn btn-primary btn-sm ms-1\"\r\n                        data-bs-toggle=\"offcanvas\"\r\n                        // onClick={() => employe.current.showModal()}\r\n                      >\r\n                        + {t(\"addDriver\")}\r\n                      </Link>{\" \"}\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    id=\"employee-tbl_wrapper\"\r\n                    className=\"dataTables_wrapper no-footer\"\r\n                  >\r\n                    <table\r\n                      id=\"empoloyees-tblwrapper\"\r\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{t(\"id\")}</th>\r\n                          <th>{t(\"employeeName\")}</th>\r\n                          <th>{t(\"age\")}</th>\r\n                          <th>{t(\"contactNumber\")}</th>\r\n                          <th>{t(\"drivingExperienceSince\")}</th>\r\n                          <th>{t(\"city\")}</th>\r\n                          <th>{t(\"status\")}</th>\r\n                          <th>{t(\"action\")}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <DriverTable\r\n                          editData={editData}\r\n                          tableData={tableData}\r\n                          onConfirmDelete={onConfirmDelete}\r\n                          editDrawerOpen={editDrawerOpen}\r\n                          setEditData={setEditData}\r\n                        />\r\n                      </tbody>\r\n                    </table>\r\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\r\n                      <div className=\"dataTables_info\">\r\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\r\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\r\n                        {t(\"entries\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"dataTables_paginate paging_simple_numbers\"\r\n                        id=\"example2_paginate\"\r\n                      >\r\n                        <Link\r\n                          className={`paginate_button ${\r\n                            page === 1 ? \"previous disabled\" : \"previous\"\r\n                          }`}\r\n                          to=\"/driver\"\r\n                          onClick={() => prevPage(page - 1)}\r\n                        >\r\n                          <i className={arrowleft} />\r\n                        </Link>\r\n                        <span>\r\n                          {[...Array(Math.ceil(totalCount / 10)).keys()].map(\r\n                            (number) => (\r\n                              <Link\r\n                                key={number}\r\n                                className={`paginate_button ${\r\n                                  page === number + 1 ? \"current\" : \"\"\r\n                                }`}\r\n                                onClick={() => goToPage(number + 1)}\r\n                              >\r\n                                {number + 1}\r\n                              </Link>\r\n                            )\r\n                          )}\r\n                        </span>\r\n                        <Link\r\n                          className={`paginate_button ${\r\n                            page * 10 >= totalCount ? \"next disabled\" : \"next\"\r\n                          }`}\r\n                          to=\"/driver\"\r\n                          onClick={() => nextPage(page + 1)}\r\n                        >\r\n                          <i className={arrowright} />\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Driver;\r\n"],"names":["_ref","tableData","onConfirmDelete","editDrawerOpen","_jsx","_Fragment","children","map","item","index","_jsxs","_id","className","firstName","lastName","employeeDesignation","age","contact1","drivingExperience","city","concat","active","style","width","onClick","FaEdit","color","fontSize","DeleteModal","id","MdDelete","Driver","isRtl","useContext","ThemeContext","arrowleft","clsx","arrowright","navigate","useNavigate","setTableData","useState","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","usePagination","useEffect","async","data","totalLength","getDrivers","console","log","error","notifyError","getDriversData","editData","setEditData","status","title","contact","gender","location","t","useTranslation","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","DriverTable","deleteDrivers","driverIds","updatedData","filter","filteredData","state","Math","min","Array","ceil","keys","number"],"sourceRoot":""}