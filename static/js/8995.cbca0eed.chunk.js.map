{"version":3,"file":"static/js/8995.cbca0eed.chunk.js","mappings":"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","sources":["jsx/components/Tables/SubCompanyTable.jsx","jsx/pages/company/Branch.js"],"sourcesContent":["import React from 'react'\nimport { MdDelete } from 'react-icons/md'\nimport { FaEdit } from 'react-icons/fa'\nimport DeleteModal from '../Modal/DeleteModal'\nimport { Link } from 'react-router-dom'\nimport { IMAGES,SVGICON} from '../../constant/theme'; \nimport useStorage from '../../../hooks/useStorage'\n\nconst SubCompanyTable = ({onConfirmDelete,params, tempValue,tempValue2,tableData,editDrawerOpen, setDataLength}) => {\n  var filterData = tableData;\n\n  console.log(\"this is data\",filterData,tempValue,tempValue2);\n  if(tempValue!=='All Companies'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentCompany === tempValue)\n  }\n  if(tempValue2!=='All Branches'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentBranch === tempValue2)\n  }\n  console.log(\"this is data after filter\",filterData,tempValue,tempValue2);\n  var branchCount = []\n  for(var i=0;i<filterData.length;i++){\n    const branchName = filterData[i].userName\n    branchCount[i] = filterData.filter((item)=> item.parentBranch === branchName).length\n  }\n  setDataLength(filterData.length)\n    return (\n      <>\n        {filterData.map((item, index) => (\n          <tr key={index}>\n            <td>\n              <span>{item.id}</span>\n            </td>\n\n            {/* <td><span>{item.application}</span></td> */}\n            <td>\n              <span className=\"text-primary\">{item.userName}</span>\n            </td>\n            <td>\n              <span >{item.parentBranch !== 'none' ? item.parentBranch: <span className='ps-4'>-</span> }</span>\n            </td>\n            <td>\n              <span >{item.parentCompany}</span>\n            </td>\n            <td>\n              <span >{item.parentBusinessGroup}</span>\n            </td>\n            <td>\n              <span>{item.mobileNumber}</span>\n            </td>\n            <td>\n              <span>{item.city}</span>\n            </td>\n\n            <td>\n            <Link\n              to={`/branch/bid/${item.id}`}\n              className=\"text-primary badge light border-0 badge-count\"\n            >\n              {branchCount[index]}\n            </Link>\n          </td>\n            <td>\n              <span className=\"d-flex justify-content-center\">\n                <span\n                  className=\"cursor-pointer\"\n                  onClick={() => editDrawerOpen(item.id)}\n                >\n                  <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n                </span>\n                <DeleteModal\n                  className=\"cursor-pointer \"\n                  onConfirmDelete={onConfirmDelete}\n                  id={item.id}\n                >\n                  <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n                </DeleteModal>\n              </span>\n            </td>\n          </tr>\n        ))}\n      </>\n    );\n}\n\nexport default SubCompanyTable","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport SubCompanyTable from \"../../components/Tables/SubCompanyTable\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport useStorage from \"../../../hooks/useStorage\";\n// import { SubCompanyData } from '../../components/Tables/Tables';\n\nconst Branch = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const { getAllCompany } = useStorage();\n  const [selectFilter, setFilter] = useState({\n    value: \"All Companies\",\n    label: \"All Companies\",\n  });\n  const [selectFilter2, setFilter2] = useState({\n    value: \"All Branches\",\n    label: \"All Branches\",\n  });\n  const [tempValue, setTempValue] = useState(\"All Companies\");\n  const [tempValue2, setTempValue2] = useState(\"All Branches\");\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      marginRight: \"1rem\",\n      marginLeft: \"1rem\",\n      width: \"15rem\",\n      height:\"0.6rem\",\n      menuPortal: (provided) => ({ ...provided, zIndex: 9999 }),\n      menu: (provided) => ({ ...provided, zIndex: 9999 }),\n    }),\n  };\n\n  useEffect(() => {\n    const str = window.location.pathname;\n    \n    if (str.includes('cid')) {\n      const user = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      const username = user.filter((data) => data.id == params.id)[0].userName;\n\n      setFilter({\n        value: username,\n        label: username,\n      });\n      setTempValue(username)\n\n      setValue('parent',username);\n    }\n    if (str.includes('bid')) {\n      const user = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      const username = user.filter((data) => data.id == params.id)[0].userName;\n\n      setFilter2({\n        value: username,\n        label: username,\n      });\n      setTempValue2(username)\n\n      setValue('parent',username);\n    }\n  }, [params.id]);\n\n  const loggedinUser = localStorage.getItem(\"loginDetails-name\");\n  // const SubCompanyData = JSON.parse( localStorage.getItem('branchData'));\n  const role = localStorage.getItem(\"role\");\n  const { control, setValue, getValues, watch } = useForm();\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const SubCompanyData = userData.filter((item) => item.role === \"branch\");\n\n  const [tableData, setTableData] = useState(SubCompanyData);\n  const [dataLength, setDataLength] = useState(SubCompanyData.length);\n  const [editData, setEditData] = useState({\n    id: 0,\n    reseller: \"\",\n    contact: 0,\n    username: \"\",\n    status: \"\",\n    location: \"\",\n    usergroup: \"\",\n    branches: 0,\n  });\n\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        data[i].classList.remove(\"d-none\");\n      } else {\n        data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n\n    // Remove item from local storage\n    const updatedLocalStorageData = SubCompanyData.filter(\n      (item) => item.id !== id\n    );\n    localStorage.setItem(\"branchData\", JSON.stringify(updatedLocalStorageData));\n  };\n\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n    navigate(`edit/${item}`);\n    // company.current.showModal();\n  };\n\n  const invite = useRef();\n  const subCompany = useRef();\n  const d = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  \n  let companyOptions = d\n    .filter((item) => item.role === \"company\")\n    .map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n\n\n  let allbranchOptions  = d\n    .filter((item) => item.role === \"branch\")\n    .map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n    allbranchOptions = [...allbranchOptions, { label: \"All Branches\", value: \"All Branches\" }];\n    const [branchOptions,setBranchOptions] = useState(allbranchOptions)\n\n  useEffect(()=>{\n    \n    let tempoptions = d\n    .filter((item) => item.role === \"branch\" && tempValue !== 'All Companies' && item.parentCompany === tempValue)\n    .map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n\n    if(tempValue !== 'All Companies') setBranchOptions(tempoptions)\n    else setBranchOptions(allbranchOptions);\n\n  },[tempValue])\n\n\n  companyOptions = [...companyOptions, { label: \"All Companies\", value: \"All Companies\" }];\n  \n\n  useEffect(() => {\n    if (role === \"admin\") return;\n    else if (role === \"businessgroup\") {\n      const filteredData = SubCompanyData.filter(\n        (item) => item.parentBusinessGroup === loggedinUser\n      );\n      setTableData(filteredData);\n    } else if (role === \"company\") {\n      const filteredData = SubCompanyData.filter(\n        (item) => item.parentCompany === loggedinUser\n      );\n      setTableData(filteredData);\n    }\n  }, [loggedinUser, role, SubCompanyData]);\n  \n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={\"Branch\"}\n        parentTitle={\"Home\"}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">Branches</h4>\n                    <div className=\"d-flex align-items-center\">\n                    <Controller\n                        name=\"parent\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <Select\n                            onChange={(newValue) => {\n                              setTempValue(newValue.label);\n                              setTempValue2(\"All Branches\");\n                              setValue(\"parent\", newValue.label);\n                              setFilter({value:newValue.value,label:newValue.label})\n                              setFilter2({value:'All Branches',label:\"All Branches\"})\n                            }}\n                            ref={ref}\n                            name={name}\n                            menuPortalTarget={document.body}\n                            menuPosition={\"fixed\"}\n                            styles={customStyles}\n                            options={companyOptions}\n                            value= {selectFilter}\n                            \n                            // defaultValue={{value:getValues(\"parent\"),label:getValues(\"parent\")}}\n                          />\n                        )}\n                      />\n                      <Controller\n                        name=\"parent\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <Select\n                            onChange={(newValue) => {\n                              setTempValue2(newValue.label);\n                              setTempValue('All Companies');\n                              setValue(\"parentBranch\", newValue.label);\n                              setFilter2({value:newValue.value,label:newValue.label})\n                            }}\n                            ref={ref}\n                            name={name}\n                            menuPortalTarget={document.body}\n                            menuPosition={\"fixed\"}\n                            styles={customStyles}\n                            options={branchOptions}\n                            value={selectFilter2}\n                          />\n                        )}\n                      />\n                      <Link\n                        to={\"/branch/create\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        style={{paddingBlock : '9px'}}\n                        data-bs-toggle=\"offcanvas\"\n                        // onClick={()=>subCompany.current.showModal()}\n                      >\n                        + Add Branch\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>ID</th>\n                          <th>Branch Name</th>\n                          <th>Parent Branch</th>\n                          <th>Company Name</th>\n                          <th>Business Group</th>\n                          <th>Mobile Number</th>\n                          <th>Location</th>\n                          <th>Child Branches</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <SubCompanyTable\n                          tempValue={tempValue}\n                          setDataLength={setDataLength}\n                          tempValue2={tempValue2}\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        Showing {activePag.current * sort + 1} to{\" \"}\n                        {dataLength.length > (activePag.current + 1) * sort\n                          ? (activePag.current + 1) * sort\n                          : dataLength}{\" \"}\n                        of {dataLength} entries\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Link\n                          className=\"paginate_button previous disabled\"\n                          to=\"/branch\"\n                          onClick={() =>\n                            activePag.current > 0 &&\n                            onClick(activePag.current - 1)\n                          }\n                        >\n                          <i className=\"fa-solid fa-angle-left\" />\n                        </Link>\n                        <span>\n                          {paggination.map((number, i) => (\n                            <Link\n                              key={i}\n                              to=\"/branch\"\n                              className={`paginate_button  ${\n                                activePag.current === i ? \"current\" : \"\"\n                              } `}\n                              onClick={() => onClick(i)}\n                            >\n                              {number}\n                            </Link>\n                          ))}\n                        </span>\n                        <Link\n                          className=\"paginate_button next\"\n                          to=\"/branch\"\n                          onClick={() =>\n                            activePag.current + 1 < paggination.length &&\n                            onClick(activePag.current + 1)\n                          }\n                        >\n                          <i className=\"fa-solid fa-angle-right\" />\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <SubCompanyOffcanvas\n                ref={subCompany}\n                editData={editData}\n                setEditData={setEditData}\n                handleSubmit={handleSubmit}\n                Title={ editData.id === 0 ? \"Add Branch\" : \"Edit Branch\"}\n            /> */}\n    </>\n  );\n};\nexport default Branch;\n"],"names":["_ref","onConfirmDelete","params","tempValue","tempValue2","tableData","editDrawerOpen","setDataLength","filterData","console","log","filter","item","role","parentCompany","parentBranch","branchCount","i","length","branchName","userName","_jsx","_Fragment","children","map","index","_jsxs","id","className","parentBusinessGroup","mobileNumber","city","Link","to","concat","onClick","FaEdit","style","color","fontSize","DeleteModal","MdDelete","Branch","navigate","useNavigate","useParams","getAllCompany","useStorage","selectFilter","setFilter","useState","value","label","selectFilter2","setFilter2","setTempValue","setTempValue2","data","setData","document","querySelectorAll","customStyles","control","base","marginRight","marginLeft","width","height","menuPortal","provided","zIndex","menu","useEffect","str","window","location","pathname","includes","username","JSON","parse","localStorage","getItem","setValue","loggedinUser","getValues","watch","useForm","SubCompanyData","setTableData","dataLength","editData","setEditData","reseller","contact","status","usergroup","branches","sort","activePag","useRef","test","settest","chageData","frist","sec","classList","remove","add","current","paggination","Array","Math","ceil","fill","_","d","companyOptions","allbranchOptions","branchOptions","setBranchOptions","tempoptions","filteredData","MainPagetitle","mainTitle","pageTitle","parentTitle","Controller","name","rules","required","render","field","onChange","ref","Select","newValue","menuPortalTarget","body","menuPosition","styles","options","_ref2","paddingBlock","SubCompanyTable","updatedData","updatedLocalStorageData","setItem","stringify","table","number"],"sourceRoot":""}