{"version":3,"file":"static/js/3415.4e8c58e5.chunk.js","mappings":"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","sources":["jsx/components/Dashboard/elements/Column.js","jsx/components/Dashboard/TaskSummaryBlog.js","jsx/components/Dashboard/TaskSummary.js"],"sourcesContent":["// import { Flex, Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { Draggable } from \"@hello-pangea/dnd\";\nimport { Droppable } from \"@hello-pangea/dnd\";\nimport { IMAGES } from \"../../../../constants/theme\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst Column = ({ column, tasks }) => {\n  const [priority, setPriority] = useState(tasks);\n\n  const handleSelect = (id, value) => {\n    let temp = priority.map((data) => {\n      if (id === data.emplid) {\n        return { ...data, select: value };\n      }\n      return data;\n    });\n    setPriority(temp);\n  };\n  const handleAction = (id, value) => {\n    let temp = priority.map((data) => {\n      if (id === data.emplid) {\n        return { ...data, status: value };\n      }\n      return data;\n    });\n    setPriority(temp);\n  };\n  return (\n    <>\n      <div className=\"col\">\n        <div className=\"card kanbanPreview-bx\">\n          <div className=\"card-body draggable-zone dropzoneContainer\">\n            {column.title}\n            <Droppable droppableId={column.id}>\n              {(droppableProvided, droppableSnapshot) => (\n                <div\n                  className=\"h-100\"\n                  ref={droppableProvided.innerRef}\n                  {...droppableProvided.droppableProps}\n                >\n                  {tasks.map((task, index) => (\n                    <Draggable\n                      key={task.id}\n                      draggableId={`${task.id}`}\n                      index={index}\n                    >\n                      {(draggableProvided, draggableSnapshot) => (\n                        <div\n                          className=\"sub-card draggable-handle draggable p-0\"\n                          ref={draggableProvided.innerRef}\n                          {...draggableProvided.draggableProps}\n                          {...draggableProvided.dragHandleProps}\n                        >\n                          <div className=\"task-card-data\">\n                            <div className=\"products\">\n                              <div>\n                                <h6>{task.content}</h6>\n                                <span>INV-100023456</span>\n                              </div>\n                            </div>\n                            {index % 2 === 0 ? (\n                              <div className=\"avatar-list avatar-list-stacked my-2\">\n                                <img\n                                  src={IMAGES.contact6}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avar1\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact5}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avat2\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact1}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avat3\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact2}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"ava4\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact5}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"ava5\"\n                                />\n                              </div>\n                            ) : (\n                              <div className=\"avatar-list avatar-list-stacked my-2\">\n                                <img\n                                  src={IMAGES.contact6}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avar1\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact5}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avat2\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact1}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"avat3\"\n                                />{\" \"}\n                                <img\n                                  src={IMAGES.contact2}\n                                  className=\"avatar rounded-circle\"\n                                  alt=\"ava4\"\n                                />{\" \"}\n                              </div>\n                            )}\n                            <div className=\"my-2\">\n                              <span className=\"badge badge-primary light border-0 me-1\">\n                                Issue\n                              </span>\n                              <span className=\"badge badge-primary light border-0 ms-1\">\n                                HTML\n                              </span>\n                            </div>\n                            <div className=\"d-flex align-items-center\">\n                              <p className=\"mb-0 font-w500 text-secondary me-2\">\n                                Status\n                              </p>\n                              <Dropdown className=\"task-dropdown-2\">\n                                <Dropdown.Toggle\n                                  as=\"div\"\n                                  className={task.status}\n                                >\n                                  {task.status}\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"task-drop-menu\">\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleAction(task.dropid, \"In Progress\")\n                                    }\n                                  >\n                                    In Progress\n                                  </Dropdown.Item>\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleAction(task.dropid, \"Pending\")\n                                    }\n                                  >\n                                    Pending\n                                  </Dropdown.Item>\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleAction(task.dropid, \"Testing\")\n                                    }\n                                  >\n                                    Testing\n                                  </Dropdown.Item>\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleAction(task.dropid, \"Complete\")\n                                    }\n                                  >\n                                    Complete\n                                  </Dropdown.Item>\n                                </Dropdown.Menu>\n                              </Dropdown>\n                            </div>\n                          </div>\n                          <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                            <div className=\"footer-data\">\n                              <span>Start Date</span>\n                              <p>06 Feb 2023</p>\n                            </div>\n                            <div className=\"footer-data\">\n                              <span>End Date</span>\n                              <p>06 Feb 2023</p>\n                            </div>\n                            <div className=\"footer-data\">\n                              <span className=\"d-block\">Priority</span>\n                              <Dropdown className=\"task-dropdown-2\">\n                                <Dropdown.Toggle\n                                  as=\"div\"\n                                  className={task.select}\n                                >\n                                  {task.select}\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"task-drop-menu\">\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleSelect(task.dropid, \"High\")\n                                    }\n                                  >\n                                    High\n                                  </Dropdown.Item>\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleSelect(task.dropid, \"Medium\")\n                                    }\n                                  >\n                                    Medium\n                                  </Dropdown.Item>\n                                  <Dropdown.Item\n                                    onClick={() =>\n                                      handleSelect(task.dropid, \"Low\")\n                                    }\n                                  >\n                                    Low\n                                  </Dropdown.Item>\n                                </Dropdown.Menu>\n                              </Dropdown>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Column;\n","import React, { useState } from \"react\";\nimport { DragDropContext } from \"@hello-pangea/dnd\";\nimport Column from \"./elements/Column\";\n\nfunction HeadOne({ theme }) {\n  return (\n    <div className={`sub-card border-${theme}`}>\n      <div className=\"sub-card-2\">\n        <div>\n          <h5 className=\"mb-0\">Not Started</h5>\n          <span>Tasks assigned to me: 18</span>\n        </div>\n        <div className={`icon-box bg-${theme}-light rounded-circle`}>\n          <h5 className={`text-${theme} totalCount`}>18</h5>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst reorderColumnList = (sourceCol, startIndex, endIndex) => {\n  const newTaskIds = Array.from(sourceCol.taskIds);\n  const [removed] = newTaskIds.splice(startIndex, 1);\n  newTaskIds.splice(endIndex, 0, removed);\n\n  const newColumn = {\n    ...sourceCol,\n    taskIds: newTaskIds,\n  };\n\n  return newColumn;\n};\n\nconst initialData = {\n  tasks: {\n    1: {\n      id: 1,\n      dropid: \"101\",\n      content: \"HTML template Issue Complete\",\n      status: \"Complete\",\n      select: \"High\",\n    },\n    2: {\n      id: 2,\n      dropid: \"102\",\n      content: \"React template Issue Complete \",\n      status: \"Testing\",\n      select: \"Low\",\n    },\n    3: {\n      id: 3,\n      dropid: \"103\",\n      content: \"Angular Issue Complete\",\n      status: \"Pending\",\n      select: \"Medium\",\n    },\n    4: {\n      id: 4,\n      dropid: \"104\",\n      content: \"HTML template Issue Complete\",\n      status: \"Complete\",\n      select: \"High\",\n    },\n    5: {\n      id: 5,\n      dropid: \"105\",\n      content: \"React Dashboard Issue Complete\",\n      status: \"In Progress\",\n      select: \"Low\",\n    },\n    6: {\n      id: 6,\n      dropid: \"106\",\n      content: \"Laravel template Issue Complete\",\n      status: \"Testing\",\n      select: \"Medium\",\n    },\n    7: {\n      id: 7,\n      dropid: \"107\",\n      content: \"WordPress Issue Complete\",\n      status: \"Pending\",\n      select: \"High\",\n    },\n    8: {\n      id: 8,\n      dropid: \"108\",\n      content: \"HTML template Issue Complete\",\n      status: \"Complete\",\n      select: \"Low\",\n    },\n    9: {\n      id: 9,\n      dropid: \"109\",\n      content: \"React template Issue Complete\",\n      status: \"In Progress\",\n      select: \"Medium\",\n    },\n    10: {\n      id: 10,\n      dropid: \"110\",\n      content: \"WordPress Issue Complete\",\n      status: \"Testing\",\n      select: \"High\",\n    },\n    11: {\n      id: 11,\n      dropid: \"111\",\n      content: \"Laravel Dashboard Issue Complete\",\n      status: \"Pending\",\n      select: \"Low\",\n    },\n    12: {\n      id: 12,\n      dropid: \"112\",\n      content: \"Angular template Issue Complete\",\n      status: \"In Progress\",\n      select: \"Medium\",\n    },\n    13: {\n      id: 13,\n      dropid: \"113\",\n      content: \"HTML Admin Issue Complete\",\n      status: \"Testing\",\n      select: \"High\",\n    },\n    14: {\n      id: 14,\n      dropid: \"114\",\n      content: \" Codeigniter Admin Issue Complete\",\n      status: \"Complete\",\n      select: \"Low\",\n    },\n    15: {\n      id: 15,\n      dropid: \"115\",\n      content: \"Angular template Issue Complete\",\n      status: \"In Progress\",\n      select: \"Medium\",\n    },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: <HeadOne theme=\"primary\" />,\n      taskIds: [1, 2, 3],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: <HeadOne theme=\"purple\" />,\n      taskIds: [4, 5, 6],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: <HeadOne theme=\"warning\" />,\n      taskIds: [7, 8, 9],\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: <HeadOne theme=\"danger\" />,\n      taskIds: [10, 11, 12],\n    },\n    \"column-5\": {\n      id: \"column-5\",\n      title: <HeadOne theme=\"success\" />,\n      taskIds: [13, 14, 15],\n    },\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\", \"column-5\"],\n};\n\nexport default function TaskSummaryBlog() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = (result) => {\n    const { destination, source } = result;\n\n    // If user tries to drop in an unknown destination\n    if (!destination) return;\n\n    const sourceCol = state.columns[source.droppableId];\n    const destinationCol = state.columns[destination.droppableId];\n\n    if (sourceCol.id === destinationCol.id) {\n      const newColumn = reorderColumnList(\n        sourceCol,\n        source.index,\n        destination.index\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n      setState(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(sourceCol.taskIds);\n    const [removed] = startTaskIds.splice(source.index, 1);\n    const newStartCol = {\n      ...sourceCol,\n      taskIds: startTaskIds,\n    };\n\n    const endTaskIds = Array.from(destinationCol.taskIds);\n    endTaskIds.splice(destination.index, 0, removed);\n    const newEndCol = {\n      ...destinationCol,\n      taskIds: endTaskIds,\n    };\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newStartCol.id]: newStartCol,\n        [newEndCol.id]: newEndCol,\n      },\n    };\n\n    setState(newState);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {state.columnOrder.map((columnId, index) => {\n        const column = state.columns[columnId];\n        const tasks = column.taskIds.map((taskId) => state.tasks[taskId]);\n        return <Column key={column.id} column={column} tasks={tasks} />;\n      })}\n    </DragDropContext>\n  );\n}\n","import React, { useRef } from \"react\";\nimport MainPagetitle from \"../../../components/MainPagetitle\";\nimport { Link } from \"react-router-dom\";\nimport { SVGICON } from \"../../../constants/theme\";\nimport TaskSummaryBlog from \"./TaskSummaryBlog\";\nimport EmployeeOffcanvas from \"../../constant/EmployeeOffcanvas\";\n\n// import MainPage from './elements/TaskSummary/MainPage';\n\nconst TaskSummary = () => {\n  const task = useRef();\n  return (\n    <>\n      <MainPagetitle mainTitle=\"Task\" pageTitle=\"Task\" parentTitle=\"Home\" />\n      <div className=\"container-fluid\">\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n          <h5 className=\"mb-0\">Tasks Summary</h5>\n          <div className=\"d-flex align-items-center\">\n            <div className=\"icon-box  icon-box-sm task-tab me-2\">\n              <Link to={\"/task\"}>{SVGICON.TaskList}</Link>\n            </div>\n            <Link\n              to={\"#\"}\n              className=\"btn btn-primary btn-sm ms-2\"\n              onClick={() => task.current.showModal()}\n            >\n              + Add Task\n            </Link>\n          </div>\n        </div>\n        <div className=\"row kanban-bx\">\n          <TaskSummaryBlog />\n        </div>\n      </div>\n      <EmployeeOffcanvas ref={task} Title=\"New Task\" />\n    </>\n  );\n};\n\nexport default TaskSummary;\n"],"names":["_ref","column","tasks","priority","setPriority","useState","handleSelect","id","value","temp","map","data","emplid","select","handleAction","status","_jsx","_Fragment","children","className","_jsxs","title","Droppable","droppableId","droppableProvided","droppableSnapshot","ref","innerRef","droppableProps","task","index","Draggable","draggableId","concat","draggableProvided","draggableSnapshot","draggableProps","dragHandleProps","content","src","IMAGES","contact6","alt","contact5","contact1","contact2","Dropdown","Toggle","as","Menu","Item","onClick","dropid","HeadOne","theme","initialData","columns","taskIds","columnOrder","TaskSummaryBlog","state","setState","DragDropContext","onDragEnd","result","destination","source","sourceCol","destinationCol","newColumn","reorderColumnList","startIndex","endIndex","newTaskIds","Array","from","removed","splice","newState","startTaskIds","newStartCol","endTaskIds","newEndCol","columnId","taskId","Column","TaskSummary","useRef","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","SVGICON","TaskList","current","showModal","EmployeeOffcanvas","Title"],"sourceRoot":""}