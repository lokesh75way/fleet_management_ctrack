{"version":3,"file":"static/js/5110.82d6a6c7.chunk.js","mappings":"0VAkBA,MAuKA,EAvKmBA,KAAO,IAADC,EAAAC,EACvB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,OACPC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzC,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,EAAa,CAAMP,EAALK,EAAO,aAAkB,cACvCG,EAAY,CAACC,EAAAA,GACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,OAGlBC,KAAMC,EAAU,UAChBC,EAAS,QACTC,IACEC,EAAAA,EAAAA,GAAS,CACXC,SAAU,CAAC,SAAUd,GACrBe,QAASA,KAAMC,EAAAA,EAAAA,IAAchB,GAC7BiB,UAAWjB,EACXkB,UAAWC,OAGbC,EAAAA,EAAAA,YAAU,KACJR,GAAaZ,KACfqB,EAAAA,EAAAA,GAAY,iCACZhB,EAAS,cACX,GACC,CAACO,GAAWZ,IAEf,MAAMsB,GAAmBC,EAAAA,EAAAA,UAAQ,KAAO,IAADC,EAAAC,EACrC,MAAO,IACFf,EACHgB,gBAA2B,OAAVhB,QAAU,IAAVA,GAA2B,QAAjBc,EAAVd,EAAYgB,uBAAe,IAAAF,OAAjB,EAAVA,EAA6BG,IAC9CC,UAAqB,OAAVlB,QAAU,IAAVA,GAAqB,QAAXe,EAAVf,EAAYkB,iBAAS,IAAAH,OAAX,EAAVA,EAAuBE,IACnC,GACA,CAACjB,KAEE,SACJmB,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,UACRC,EAAS,QACTC,EAAO,aACPC,EAAY,MACZC,IACEC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbV,UAAW,GACXF,gBAAiB,GACjBa,SAAU,CACR,CACEC,KAAM,GACNC,YAAa,GACbC,aAAc,KACdC,MAAO,KAGXC,WAAgC,QAAtBnD,EAAEoD,EAAAA,GAAkB,UAAE,IAAApD,OAAA,EAApBA,EAAsBqD,MAClCC,WAAgC,QAAtBrD,EAAEsD,EAAAA,GAAkB,UAAE,IAAAtD,OAAA,EAApBA,EAAsBoD,OAEpCG,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,IACtBC,OAAQ9B,KAKF+B,OAAQC,EAAsBC,UAAWC,IAC/CC,EAAAA,EAAAA,GAAY,CACVC,WAAYC,EAAAA,GACZC,UAAWA,MACTC,EAAAA,EAAAA,GAAc,2BACdtD,EAAYuD,kBAAkB,CAAC,aAC/BzD,EAAS,UAAU,EAErB0D,QAVaC,IAAQ3C,EAAAA,EAAAA,IAAY4C,EAAAA,EAAAA,IAAmBD,OAahDX,OAAQa,EAAoBX,UAAWY,IAAgBV,EAAAA,EAAAA,GAAY,CACzEC,WAAYU,IAAA,IAAC,KAAE3D,EAAI,GAAET,GAAIoE,EAAA,OAAKC,EAAAA,EAAAA,IAAWrE,EAAIS,EAAK,EAClDmD,UAAWA,MACTC,EAAAA,EAAAA,GAAc,4BACdtD,EAAYuD,kBAAkB,CAAC,aAC/BzD,EAAS,UAAU,EAErB0D,QAAUO,KACRjD,EAAAA,EAAAA,GAAYiD,EAAMC,QAAQ,IAIxBC,EAAWC,UACK,IAAhB5E,IACe,MAAbY,EAAKiE,MAAqC,IAArBjE,EAAKiE,KAAKC,eAC1BlE,EAAKiE,KAEVjE,EAAKmE,MAA6B,IAArBnE,EAAKmE,KAAKD,eAClBlE,EAAKmE,KAEV5E,EACFkE,EAAmB,CAAEzD,OAAMT,OAE3BsD,EAAqB7C,GAEzB,EAGF,OACEoE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,UAAU,SACVC,UAAWnF,EAAK,OAAS,SACzBoF,YAAa,YAEfJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASN,UACtBC,EAAAA,EAAAA,KAACM,EAAAA,GAAY,CAAAP,UACXC,EAAAA,EAAAA,KAAA,QAAMR,SAAUrC,EAAaqC,GAAUO,UACrCC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaN,UAC1BF,EAAAA,EAAAA,MAACU,EAAAA,EAAIC,UAAS,CAACC,iBAAkBvF,EAAW,GAAGwF,cAAcX,SAAA,EAC3DC,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAACC,GAAG,KAAKP,UAAU,WAAUN,SAC9B7E,EAAW2F,KAAI,CAACpF,EAAMqF,KACrBd,EAAAA,EAAAA,KAACW,EAAAA,EAAII,KAAI,CAACH,GAAG,KAAIb,UACfC,EAAAA,EAAAA,KAACW,EAAAA,EAAIK,KAAI,CACPC,MAAO,CAAEC,QAAS,cAClBC,SAAU1F,EAAKiF,cACfU,OAAQN,IAAMjG,EACdwG,QAASA,IAAMvG,EAAegG,GAAGf,SAEhCtE,KAPkBqF,QAY3Bd,EAAAA,EAAAA,KAACO,EAAAA,EAAIe,QAAO,CAACjB,UAAU,OAAMN,SAC1BpE,GACCqE,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAACC,OAAQ,MAEhBtG,EAAW2F,KAAI,CAACpF,EAAMqF,KACpB,MAAMW,EAAYtG,EAAU2F,GAC5B,OACEd,EAAAA,EAAAA,KAACO,EAAAA,EAAImB,KAAI,CACPP,SAAU1F,EAAKiF,cAEfU,OAAQN,IAAMjG,EAAYkF,UAE1BC,EAAAA,EAAAA,KAACyB,EAAS,CACRhG,KAAMP,EACNgC,QAASA,EACTF,SAAUA,EACVH,SAAUA,EACVI,UAAWA,EACXF,OAAQA,EACRI,aAAcA,EACdqC,SAAUA,EACVpC,MAAOA,EACPuE,iBAAkBnD,GAAiBW,KAbhC2B,EAeI,mBAW5B,C","sources":["features/branch/pages/Create.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport { branchAccountSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport { createNewBranch, editBranch, getBranchById } from \"../api\";\nimport CreateForm from \"../components/Form\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport Loader from \"@/components/Loader\";\n\nconst BranchForm = () => {\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { id } = useParams();\n  const tabHeading = [id ? t(\"editBranch\") : t(\"newBranch\")];\n  const component = [CreateForm];\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const {\n    data: branchData,\n    isLoading,\n    isError,\n  } = useQuery({\n    queryKey: [\"branch\", id],\n    queryFn: () => getBranchById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch branch data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const parsedBranchData = useMemo(() => {\n    return {\n      ...branchData,\n      businessGroupId: branchData?.businessGroupId?._id,\n      companyId: branchData?.companyId?._id,\n    };\n  }, [branchData]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n    watch,\n  } = useForm({\n    defaultValues: {\n      companyId: \"\",\n      businessGroupId: \"\",\n      userInfo: [\n        {\n          name: \"\",\n          designation: \"\",\n          mobileNumber: null,\n          email: \"\",\n        },\n      ],\n      timeFormat: timeFormatOptions[1]?.value,\n      dateFormat: dateFormatOptions[1]?.value,\n    },\n    resolver: yupResolver(branchAccountSchema),\n    values: parsedBranchData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: createBranchMutation, isPending: createPending } =\n    useMutation({\n      mutationFn: createNewBranch,\n      onSuccess: () => {\n        notifySuccess(\"Branch has been created\");\n        queryClient.invalidateQueries([\"branches\"]);\n        navigate(\"/branch\");\n      },\n      onError,\n    });\n\n  const { mutate: editBranchMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => editBranch(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Branch has been updated!\");\n      queryClient.invalidateQueries([\"branches\"]);\n      navigate(\"/branch\");\n    },\n    onError: (error) => {\n      notifyError(error.message);\n    },\n  });\n\n  const onSubmit = async (data) => {\n    if (activeIndex === 0) {\n      if (data.logo == null || data.logo.length === 0) {\n        delete data.logo;\n      }\n      if (data.file && data.file.length === 0) {\n        delete data.file;\n      }\n      if (id) {\n        editBranchMutation({ data, id });\n      } else {\n        createBranchMutation(data);\n      }\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"Branch\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            handleSubmit={handleSubmit}\n                            onSubmit={onSubmit}\n                            watch={watch}\n                            isFormSubmitting={createPending || editPending}\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                  {}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BranchForm;\n"],"names":["BranchForm","_timeFormatOptions$","_dateFormatOptions$","t","useTranslation","activeIndex","setActiveIndex","useState","id","useParams","tabHeading","component","CreateForm","navigate","useNavigate","queryClient","useQueryClient","data","branchData","isLoading","isError","useQuery","queryKey","queryFn","getBranchById","enabled","staleTime","Infinity","useEffect","notifyError","parsedBranchData","useMemo","_branchData$businessG","_branchData$companyId","businessGroupId","_id","companyId","register","formState","errors","setValue","getValues","control","handleSubmit","watch","useForm","defaultValues","userInfo","name","designation","mobileNumber","email","timeFormat","timeFormatOptions","value","dateFormat","dateFormatOptions","resolver","yupResolver","branchAccountSchema","values","mutate","createBranchMutation","isPending","createPending","useMutation","mutationFn","createNewBranch","onSuccess","notifySuccess","invalidateQueries","onError","err","getApiErrorMessage","editBranchMutation","editPending","_ref","editBranch","error","message","onSubmit","async","logo","length","file","_jsxs","_Fragment","children","_jsx","MainPagetitle","mainTitle","pageTitle","parentTitle","className","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","style","padding","eventKey","active","onClick","Content","Loader","height","Component","Pane","isFormSubmitting"],"sourceRoot":""}