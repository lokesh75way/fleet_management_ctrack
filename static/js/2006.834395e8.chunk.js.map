{"version":3,"file":"static/js/2006.834395e8.chunk.js","mappings":"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","sources":["hooks/useDriverSubmit.jsx","jsx/components/Error/Error.jsx","jsx/components/TabComponent/VehicleTabs/Options.js","jsx/components/TabComponent/CompanyTabs/Email.jsx","jsx/components/TabComponent/CompanyTabs/MyAccount.jsx","jsx/components/TabComponent/CompanyTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/CompanyForm.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-country-state-city/src/utils/index.ts","../node_modules/react-country-state-city/src/components/Dropdown.tsx","../node_modules/react-country-state-city/src/components/LanguageDropdown.tsx","../node_modules/react-country-state-city/src/components/CitySelect.tsx","../node_modules/react-country-state-city/src/components/CountrySelect.tsx","../node_modules/react-country-state-city/src/components/LanguageSelect.tsx","../node_modules/react-country-state-city/src/components/StateSelect.tsx"],"sourcesContent":["import {useEffect, useState, useContext} from 'react'\nimport { useForm } from \"react-hook-form\";\nconst useDriverSubmit = () => {\nconst {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    control,\n    getValues,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async(data) =>{\n    try{\n      console.log(data);\n      \n    }\n    catch(err){\n        console.log(err)\n    }\n  }\n    \n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    }\n}\n\nexport default useDriverSubmit","import React from \"react\";\n\nconst Error = ({ errorName }) => {\n  return (\n    <>\n      {errorName && (\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\n      )}\n    </>\n  );\n};\n\nexport default Error;","export const branchOptions = [\n  { value: \"West Minister Company\", label: \"West Minister Company\" },\n];\nexport const deviceTypeOptions = [\n  { value: \"2G Camera Howen 5632\", label: \"2G Camera Howen 5632\" },\n  { value: \"2G Camera Howen 5633\", label: \"2G Camera Howen 5633\" },\n  { value: \"2G Camera Howen 5634\", label: \"2G Camera Howen 5634\" },\n  { value: \"2G Camera Howen 5635\", label: \"2G Camera Howen 5635\" },\n  { value: \"2G Camera Howen 5636\", label: \"2G Camera Howen 5636\" },\n];\nexport const copyFromOptions = [\n  { value: \"Test\", label: \"Test\" },\n];\nexport const distanceCounterOptions = [\n  { value: \"GPS\", label: \"GPS\" },\n  { value: \"OBD\", label: \"OBD\" },\n  { value: \"CAN Odometer\", label: \"CAN Odometer\" },\n  { value: \"Relative Odometer\", label: \"Relative Odometer\" },\n  { value: \"Tachograph\", label: \"Tachograph\" },\n];\nexport const unitOfDistanceOptions = [\n  { value: \"Kilometer\", label: \"Kilometer\" },\n  { value: \"Mile\", label: \"Mile\" },\n  { value: \"Nautical mile\", label: \"Nautical mile\" }\n];\nexport const speedDetectionOptions = [\n  { value: \"From Device\", label: \"From Device\" },\n  { value: \"From Lating\", label: \"From Lating\" },\n];\nexport const permitOptions = [\n  { value: \"ITC Permit\", label: \"ITC Permit\" },\n  { value: \"Normal\", label: \"Normal\" },\n  { value: \"Rent A Car\", label: \"Rent A Car\" },\n  { value: \"Fuel Sensor\", label: \"Fuel Sensor\" },\n  { value: \"Medical\", label: \"Medical\" },\n  { value: \"Other\", label: \"Other\" },\n];\nexport const fuelTypeOptions = [\n  { value: \"Petrol\", label: \"Petrol\" },\n  { value: \"Diesel\", label: \"Diesel\" },\n  { value: \"Gas\", label: \"Gas\" },\n  { value: \"Electric\", label: \"Electric\" }\n];\nexport const distanceQuantitySelectOptions = [\n  { value: \"Litre\", label: \"Litre\" },\n  { value: \"Gallon\", label: \"Gallon\" }\n];\nexport const durationSelectOptions = [\n  { value: \"MM\", label: \"MM\" },\n  { value: \"HH:MM\", label: \"HH:MM\" }\n];\nexport const durationCostSelectOptions = [\n  { value: \"Day\", label: \"Day\" },\n  { value: \"Hour\", label: \"Hour\" }\n];\nexport const employeeDesignationOptions = [\n  { value: \"Driver\", label: \"Driver\" },\n  { value: \"Employee\", label: \"Employee\" },\n  { value: \"Engineer\", label: \"Engineer\" },\n  { value: \"Mechanic\", label: \"Mechanic\" },\n  { value: \"Supervisor\", label: \"Supervisor\" },\n];\nexport const tagViaOptions = [\n  { value: \"Beacon\", label: \"Beacon\" },\n  { value: \"RFID/Ibutton\", label: \"RFID/Ibutton\" }\n];\nexport const defaultObjectNumberOptions = [\n  { value: \"Test\", label: \"Test\" },\n];\nexport const adminOptions = [\n  { value: \"Timeline\", label: \"Timeline\" },\n];\nexport const resellerOptions = [\n  { value: \"Test Timeline\", label: \"Test Timeline\" },\n];\nexport const licenseToDriveOptions = [\n  { value: \"CAT1\", label: \"CAT1\" },\n  { value: \"CAT2\", label: \"CAT2\" },\n  { value: \"CAT3\", label: \"CAT3\" },\n  { value: \"CAT4\", label: \"CAT4\" },\n  { value: \"CAT5\", label: \"CAT5\" },\n];\nexport const alertTypeOptions = [\n  { value: \"911\", label: \"911\" },\n  { value: \"Crash Detection\", label: \"Crash Detection\" },\n  { value: \"BLE Battery Sensor1\", label: \"BLE Battery Sensor1\" },\n  { value: \"BLE Battery Sensor2\", label: \"BLE Battery Sensor2\" },\n  { value: \"BLE Battery Sensor3\", label: \"BLE Battery Sensor3\" },\n];\n\nexport const leaveTimeOptions = [\n  { value: \"CL\", label: \"CL\" },\n  { value: \"PL\", label: \"PL\" },\n  { value: \"SL\", label: \"SL\" },\n];\nexport const ObjectOptions = [\n  { value: \"Test1\", label: \"Test1\" },\n  { value: \"Test2\", label: \"Test2\" },\n];\nexport const TypeOptions = [\n  { value: \"Accidents\", label: \"Accidents\" },\n  { value: \"Bonuses\", label: \"Bonuses\" },\n  { value: \"BreakDown\", label: \"BreakDown\" },\n  { value: \"Fines\", label: \"Fines\" },\n  { value: \"Maintainance\", label: \"Maintainance\" },\n  { value: \"Fuel\", label: \"Fuel\" },\n];\nexport const jobOptions = [\n  { value: \"Job1\", label: \"Job1\" },\n];\nexport const dateFormatOptions = [\n  { value: \"dd-MM-yyyy\", label: \"dd-MM-yyyy\" },\n  { value: \"MM-dd-yyyy\", label: \"MM-dd-yyyy\" },\n];\nexport const timeFormatOptions = [\n  { value: \"12 Hour\", label: \"12 Hour\" },\n  { value: \"24 Hour\", label: \"24 Hour\" },\n];\nexport const weekStartDayOptions = [\n  { value: \"Sunday\", label: \"Sunday\" },\n  { value: \"Monday\", label: \"Monday\" },\n  { value: \"Tuesday\", label: \"Tuesday\" },\n  { value: \"Wednesday\", label: \"Wednesday\" },\n  { value: \"Thursday\", label: \"Thursday\" },\n  { value: \"Friday\", label: \"Friday\" },\n  { value: \"Saturday\", label: \"Saturday\" },\n];\nexport const subCompanyOptions = [\n  { value: \"All\", label: \"All\" },\n  { value: \"75 way\", label: \"75 way\" },\n];\nexport const options = [{ value: \"West Company\", label: \"West Company\" }];\n","import React from 'react'\n\nconst Email = () => {\n  return (\n    <div>Email</div>\n  )\n}\n\nexport default Email","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  branchOptions,\n  employeeDesignationOptions,\n  tagViaOptions,\n  defaultObjectNumberOptions,\n} from \"../VehicleTabs/Options\";\n\nconst MyAccount = ({ setValue, register, handleNext }) => {\n  const { formState: errors, control } = useForm();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isCheckCP, setIsCheckCP] = useState(false);\n  const [isCheckESP, setIsCheckEsP] = useState(false);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country</label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.id);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">State</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.id);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Short Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"shortName\", {\n              required: \"Short Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"shortName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"userName\", {\n              required: \"User Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"userName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Change Password</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckCP(!isCheckCP)}\n            />\n          </div>\n        </div>\n        {isCheckCP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Old Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"oldPassword\")}\n                className=\"form-control\"\n                name=\"oldPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                New Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"newPassword\")}\n                className=\"form-control\"\n                name=\"newPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"retypePassword\")}\n                className=\"form-control\"\n                name=\"retypePassword\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Enable Security Pin</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckEsP(!isCheckESP)}\n            />\n          </div>\n        </div>\n        {isCheckESP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Security Pin\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"securityPin\")}\n                className=\"form-control\"\n                name=\"securityPin\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Security Pin\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"retypeSecurityPin\")}\n                className=\"form-control\"\n                name=\"retypeSecurityPin\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Password Recovery Email</label>\n          <input\n            type=\"email\"\n            {...register(\"passwordRecoveryEmail\")}\n            className=\"form-control\"\n            name=\"passwordRecoveryEmail\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Email</label>\n          <input\n            type=\"email\"\n            {...register(\"helpDeskEmail\")}\n            className=\"form-control\"\n            name=\"helpDeskEmail\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Telephone Number</label>\n          <input\n            type=\"number\"\n            {...register(\"helpDeskTelephoneNumber\")}\n            className=\"form-control\"\n            name=\"helpDeskTelephoneNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mobile Number</label>\n          <input\n            type=\"number\"\n            {...register(\"mobileNumber\")}\n            className=\"form-control\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Whatsapp Contact Number</label>\n          <input\n            type=\"number\"\n            {...register(\"whatsappContactNumber\")}\n            className=\"form-control\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            City\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"city\")}\n            className=\"form-control\"\n            name=\"city\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Zip Code\n          </label>\n          <input\n            type=\"number\"\n            {...register(\"zipCode\")}\n            className=\"form-control\"\n            name=\"zipCode\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street1\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street1\")}\n            className=\"form-control\"\n            name=\"street1\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street2\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street2\")}\n            className=\"form-control\"\n            name=\"street2\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Contact Person</label>\n          <input\n            type=\"text\"\n            {...register(\"contactPerson\")}\n            className=\"form-control\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Fax Number\n          </label>\n          <input\n            type=\"number\"\n            {...register(\"faxNumber\")}\n            className=\"form-control\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}>\n          {\" \"}\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, register, handleNext }) => {\n  const { formState: errors, control } = useForm();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isCheckCP, setIsCheckCP] = useState(false);\n  const [isCheckESP, setIsCheckEsP] = useState(false);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Date Format\n          </label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Time Format\n          </label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          Week Start Day\n          </label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"weekStartDay\", newValue.value)}\n                options={weekStartDayOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={weekStartDayOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          Unit of Distance\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfDistance\", newValue.value)}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfDistanceOptions[0]}\n              />\n            )}\n          />\n        </div>\n        \n        {/* <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Change Password</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckCP(!isCheckCP)}\n            />\n          </div>\n        </div>\n        {isCheckCP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Old Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"oldPassword\")}\n                className=\"form-control\"\n                name=\"oldPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                New Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"newPassword\")}\n                className=\"form-control\"\n                name=\"newPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"retypePassword\")}\n                className=\"form-control\"\n                name=\"retypePassword\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )} */}\n        \n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}>\n          {\" \"}\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport useDriverSubmit from \"../../../../../hooks/useDriverSubmit\";\nimport Email from \"../../../../components/TabComponent/CompanyTabs/Email\";\nimport MyAccount from \"../../../../components/TabComponent/CompanyTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/CompanyTabs/UserSetting\";\n\nconst CompanyForm = ({ Title, editData, setEditData }) => {\n  const {\n    register,\n    onSubmit,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useDriverSubmit();\n\n  // const nav = useNavigate();\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setEditData({ ...editData, [name]: value });\n  // };\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"My Account\", \"User Setting\", \"Email\"];\n  const component = [MyAccount, UserSetting, Email];\n  const totalTabs = tabHeading.length;\n  const handleNext = () => {\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1)); // Increment active tab index\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Company\"\n        pageTitle={\"Create\"}\n        parentTitle={\"Company\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleNext={handleNext}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CompanyForm;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import {\n  City,\n  Country,\n  CountryState,\n  CountryStateCity,\n  Language,\n  State,\n} from \"../types\";\n\nexport const GetCountries = async (): Promise<Country[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/countriesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Country>;\n};\n\nexport const GetLanguages = async (): Promise<Language[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/languagesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Language>;\n};\n\nexport const GetState = async (id: number): Promise<Array<State> | []> => {\n  const states = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/statesminified.json\"\n  ).then((res) => res.json());\n  const record = states as Array<CountryState>;\n  const statesone = record.find((e: CountryState) => e.id === id);\n  const state = statesone && statesone.states ? statesone.states : [];\n  return state;\n};\n\nexport const GetCity = async (\n  countryid: number,\n  stateid: number\n): Promise<Array<City> | []> => {\n  const cities = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/citiesminified.json\"\n  ).then((res) => res.json());\n  const record = cities as Array<CountryStateCity>;\n  const countries = record.find((e: CountryStateCity) => e.id === countryid);\n  if (countries) {\n    const states = countries && countries.states ? countries.states : [];\n    const city = states.find((e) => e.id === stateid);\n    return city && city.cities ? city.cities : [];\n  } else {\n    return [];\n  }\n};\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { City, Country, State } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Country | State | City>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Country | State | City;\n  onChange: (e: Country | State | City) => void;\n  showFlag?: boolean;\n};\nconst Dropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  showFlag = true,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Country | State | City>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${\n      showFlag && \"emoji\" in selectedValue ? selectedValue.emoji : \"\"\n    } ${selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Country | State | City) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Country | State | City) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.id === option.id;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.id}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {showFlag && <span>{\"emoji\" in option ? option.emoji : \"\"}</span>}{\" \"}\n              {option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { Language } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Language>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Language;\n  onChange: (e: Language) => void;\n  displayNative?: boolean;\n};\nconst LanguageDropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  displayNative,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Language>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${displayNative ? selectedValue.native : selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Language) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Language) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.code === option.code;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.code}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {displayNative ? option.native : option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageDropdown;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { City } from \"../types\";\nimport { GetCity } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\ntype PageProps = {\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: City) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: City;\n  countryid: number;\n  stateid: number;\n  placeHolder?: string;\n};\n\nconst CitySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  countryid,\n  stateid,\n  placeHolder,\n}: PageProps) => {\n  const [cities, setCities] = useState<City[]>([]);\n  useEffect(() => {\n    if (countryid) {\n      GetCity(countryid, stateid).then((data) => {\n        setCities(data);\n      });\n    }\n  }, [countryid, stateid]);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={cities}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as City);\n            }\n          }}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CitySelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Country } from \"../types\";\nimport { GetCountries } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\n\ntype PageProps = {\n  defaultValue?: Country;\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: Country) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  placeHolder?: string;\n  showFlag?: boolean;\n};\nconst CountrySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  placeHolder,\n  showFlag,\n}: PageProps) => {\n  const [countriesunfiltered, setCountries] = useState<Country[]>([]);\n  useEffect(() => {\n    GetCountries().then((data) => {\n      setCountries(data);\n    });\n  }, []);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={countriesunfiltered}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as Country);\n            }\n          }}\n          showFlag={showFlag}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CountrySelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Language } from \"../types\";\nimport { GetLanguages } from \"../utils\";\nimport LanguageDropdown from \"./LanguageDropdown\";\n\ntype PageProps = {\n  defaultValue?: Language;\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: Language) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  placeHolder?: string;\n  displayNative?: boolean;\n};\nconst LanguageSelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  placeHolder,\n  displayNative,\n}: PageProps) => {\n  const [languagesunfiltered, setLanguages] = useState<Language[]>([]);\n  useEffect(() => {\n    GetLanguages().then((data) => {\n      setLanguages(data);\n    });\n  }, []);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <LanguageDropdown\n          placeHolder={placeHolder}\n          options={languagesunfiltered}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as Language);\n            }\n          }}\n          displayNative={displayNative}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LanguageSelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { State } from \"../types\";\nimport { GetState } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\ntype PageProps = {\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: State) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: State;\n  countryid: number;\n  placeHolder?: string;\n};\n\nconst StateSelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  countryid,\n  placeHolder,\n}: PageProps) => {\n  const [states, setStates] = useState<State[]>([]);\n  useEffect(() => {\n    if (countryid) {\n      GetState(countryid).then((data) => {\n        setStates(data);\n      });\n    }\n  }, [countryid]);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={states}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as State);\n            }\n          }}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default StateSelect;\n"],"names":["useDriverSubmit","register","handleSubmit","setValue","clearErrors","control","getValues","formState","errors","useForm","onSubmit","async","console","log","data","err","_ref","errorName","_jsx","_Fragment","children","className","message","branchOptions","value","label","deviceTypeOptions","copyFromOptions","distanceCounterOptions","unitOfDistanceOptions","speedDetectionOptions","permitOptions","fuelTypeOptions","distanceQuantitySelectOptions","durationSelectOptions","durationCostSelectOptions","employeeDesignationOptions","tagViaOptions","defaultObjectNumberOptions","adminOptions","resellerOptions","licenseToDriveOptions","alertTypeOptions","leaveTimeOptions","ObjectOptions","TypeOptions","jobOptions","dateFormatOptions","timeFormatOptions","weekStartDayOptions","subCompanyOptions","Email","handleNext","countryid","setCountryid","useState","stateid","setstateid","isCheckCP","setIsCheckCP","isCheckESP","setIsCheckEsP","_jsxs","style","width","margin","CountrySelect","onChange","e","id","containerClassName","inputClassName","placeHolder","background","StateSelect","type","required","name","placeholder","onClick","htmlFor","display","justifyContent","Button","customStyles","base","padding","Controller","render","_ref2","field","ref","Select","newValue","options","styles","defaultValue","_ref3","_ref4","_ref5","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","totalTabs","length","prevIndex","Math","min","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","defaultActiveKey","toLowerCase","Nav","as","map","i","eventKey","active","Component","React","bsPrefix","variant","size","props","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","classNames","concat","href","disabled","displayName","defaultProps","a","t","n","fetch","then","json","sent","o","r","find","states","c","cities","createElement","height","viewBox","d","u","onTextChange","s","showFlag","l","f","m","p","h","v","g","C","E","w","useRef","y","useEffect","current","focus","contains","target","window","addEventListener","removeEventListener","N","emoji","filter","indexOf","key","displayNative","code","native","exports","Fragment","position"],"sourceRoot":""}