{"version":3,"file":"static/js/8080.40b9e73a.chunk.js","mappings":"22FAAaA,EAAU,CACrB,CACEC,OAAQ,KACRC,OAAQ,KACRC,SAAU,MAEZ,CACEF,OAAQ,aACRC,OAAQ,aACRC,SAAU,cAEZ,CACEF,OAAQ,YACRC,OAAQ,YACRC,SAAU,aAEZ,CACEF,OAAQ,iBACRC,OAAQ,iBACRC,SAAU,iBAEZ,CACEF,OAAQ,UACRC,OAAQ,UACRC,SAAU,WAEZ,CACEF,OAAQ,QACRC,OAAQ,QACRC,SAAU,SAEZ,CACEF,OAAQ,MACRC,OAAQ,QACRC,SAAU,Q,qCC1BP,MAAMC,EAAeA,KAC1B,MAAMC,GAAUC,EAAAA,EAAAA,UAAQ,IAAMN,GAAS,IACjCO,GAAOD,EAAAA,EAAAA,UAAQ,IAAME,GAAW,IAEhCC,GAAgBC,EAAAA,EAAAA,UAAS,CAAEL,UAASE,QAAQI,EAAAA,YAE5C,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,KAEZC,EAAI,WACJC,GACEP,EAEJ,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,WAAW,UAAUC,WAAW,WAC3CH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBL,UAC9BC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAAN,UACFC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAG,KAAIR,UACVF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,OAAML,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaL,UAC1BC,EAAAA,EAAAA,KAAA,MAAII,UAAU,aAAYL,SAAC,qBAE7BC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWL,UACxBC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBL,UAC/BC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBL,UACjCF,EAAAA,EAAAA,MAAA,YACML,IACJY,UAAU,0BAAyBL,SAAA,EAEnCC,EAAAA,EAAAA,KAAA,SAAAD,SACGL,EAAac,KAAKC,IACjBT,EAAAA,EAAAA,KAAA,SAAQS,EAAYC,sBAAqBX,SACtCU,EAAYE,QAAQH,KAAKI,IACxBf,EAAAA,EAAAA,MAAA,SACMe,EAAOC,eACTD,EAAOE,wBACRf,SAAA,CAEAa,EAAOG,OAAO,WACff,EAAAA,EAAAA,KAAA,QAAMI,UAAU,OAAML,SACnBa,EAAOI,SACNJ,EAAOK,cACLjB,EAAAA,EAAAA,KAAA,KACEI,UAAU,8BACVc,MAAO,CAAEC,QAAS,UAGpBnB,EAAAA,EAAAA,KAAA,KACEI,UAAU,4BACVc,MAAO,CAAEC,QAAS,UAItBnB,EAAAA,EAAAA,KAAA,KACEI,UAAU,wBACVc,MAAO,CAAEC,QAAS,uBASlCnB,EAAAA,EAAAA,KAAA,YAAWP,IAAmBM,SAC3BJ,EAAKa,KAAKY,IACTxB,EAAWwB,IAETpB,EAAAA,EAAAA,KAAA,SAAQoB,EAAIC,cAAatB,SACtBqB,EAAIE,MAAMd,KAAKe,IAEZ1B,EAAAA,EAAAA,MAAA,SAAQ0B,EAAKC,eAAczB,SAAA,CACxB,IACAwB,EAAKR,OAAO,QAAS,oCAiBnD,EAGP,G","sources":["jsx/components/table/SortingTable/Columns.js","jsx/components/table/SortingTable/SortingTable.js"],"sourcesContent":["export const COLUMNS = [\n  {\n    Header: \"Id\",\n    Footer: \"Id\",\n    accessor: \"id\",\n  },\n  {\n    Header: \"First Name\",\n    Footer: \"First Name\",\n    accessor: \"first_name\",\n  },\n  {\n    Header: \"Last Name\",\n    Footer: \"Last Name\",\n    accessor: \"last_name\",\n  },\n  {\n    Header: \"Date of  Birth\",\n    Footer: \"Date of  Birth\",\n    accessor: \"date_of_birth\",\n  },\n  {\n    Header: \"Country\",\n    Footer: \"Country\",\n    accessor: \"country\",\n  },\n  {\n    Header: \"Phone\",\n    Footer: \"Phone\",\n    accessor: \"phone\",\n  },\n  {\n    Header: \"Age\",\n    Footer: \"Phone\",\n    accessor: \"age\",\n  },\n];\n\nexport const GROUPED_COLUMNS = [\n  {\n    Header: \"Id\",\n    Footer: \"Id\",\n    accessor: \"id\",\n  },\n  {\n    Header: \"Name\",\n    Footer: \"Name\",\n    columns: [\n      {\n        Header: \"First Name\",\n        Footer: \"First Name\",\n        accessor: \"first_name\",\n      },\n      {\n        Header: \"Last Name\",\n        Footer: \"Last Name\",\n        accessor: \"last_name\",\n      },\n    ],\n  },\n  {\n    Header: \"Info\",\n    Footer: \"Info\",\n    columns: [\n      {\n        Header: \"Date of  Birth\",\n        Footer: \"Date of  Birth\",\n        accessor: \"date_of_birth\",\n      },\n      {\n        Header: \"Country\",\n        Footer: \"Country\",\n        accessor: \"country\",\n      },\n      {\n        Header: \"Phone\",\n        Footer: \"Phone\",\n        accessor: \"phone\",\n      },\n    ],\n  },\n];\n","import React, { useMemo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport PageTitle from \"../../../layouts/PageTitle\";\nimport MOCK_DATA from \"./MOCK_DATA_3.json\";\nimport { COLUMNS } from \"./Columns\";\nimport { Col, Row } from \"react-bootstrap\";\n//import './table.css';\n\nexport const SortingTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n\n  const tableInstance = useTable({ columns, data }, useSortBy);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    //footerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  return (\n    <>\n      <PageTitle activeMenu=\"Sorting\" motherMenu=\"Table\" />\n      <div className=\"container-fluid\">\n        <Row>\n          <Col lg=\"12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">Table Sorting</h4>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  <div className=\"dataTables_wrapper\">\n                    <table\n                      {...getTableProps()}\n                      className=\"table dataTable display\"\n                    >\n                      <thead>\n                        {headerGroups.map((headerGroup) => (\n                          <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                              <th\n                                {...column.getHeaderProps(\n                                  column.getSortByToggleProps()\n                                )}\n                              >\n                                {column.render(\"Header\")}\n                                <span className=\"ml-1\">\n                                  {column.isSorted ? (\n                                    column.isSortedDesc ? (\n                                      <i\n                                        className=\"fa fa-arrow-down ms-2 fs-14\"\n                                        style={{ opacity: \"0.7\" }}\n                                      />\n                                    ) : (\n                                      <i\n                                        className=\"fa fa-arrow-up ms-2 fs-14\"\n                                        style={{ opacity: \"0.7\" }}\n                                      />\n                                    )\n                                  ) : (\n                                    <i\n                                      className=\"fa fa-sort ms-2 fs-14\"\n                                      style={{ opacity: \"0.3\" }}\n                                    />\n                                  )}\n                                </span>\n                              </th>\n                            ))}\n                          </tr>\n                        ))}\n                      </thead>\n                      <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                          prepareRow(row);\n                          return (\n                            <tr {...row.getRowProps()}>\n                              {row.cells.map((cell) => {\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                    {\" \"}\n                                    {cell.render(\"Cell\")}{\" \"}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                      {/* This is only for footer if u require */}\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\nexport default SortingTable;\n"],"names":["COLUMNS","Header","Footer","accessor","SortingTable","columns","useMemo","data","MOCK_DATA","tableInstance","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","_jsxs","_Fragment","children","_jsx","PageTitle","activeMenu","motherMenu","className","Row","Col","lg","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","style","opacity","row","getRowProps","cells","cell","getCellProps"],"sourceRoot":""}