{"version":3,"file":"static/js/2799.c6871376.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\nimport { getTemplates } from \"../../../../services/api/TemplateServices\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError } from \"../../../../utils/toast\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { getGroups } from \"../../../../services/api/BusinessGroup\";\nimport { getCompany } from \"../../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../BranchDropdown\";\nimport CompanyDropdown from \"../../CompanyDropdown\";\nimport GroupDropdown from \"../../GroupDropdown\";\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n}) => {\n  console.log(errors);\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const { checkRole, checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEdit, setIsEdit] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const [companyId, setCompanyId] = useState(null);\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const { t } = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  async function onGroupChange(groupId) {\n    console.log(\"groupId\", groupId);\n    console.log(\"allCompanies\", allCompanies);\n    const companies = allCompanies\n      .filter((item) => item?.companyId?.businessGroupId?._id == groupId)\n      .map((item) => ({\n        value: item?.companyId?._id,\n        label: item?.companyId?.companyName,\n      }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\n\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter((item) => item?.companyId?._id == companyId)\n      .map((item) => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error);\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error);\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    fetchOptions();\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const role = checkRole();\n  const { id } = useParams();\n  const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if (role === \"SUPER_ADMIN\") {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  } else {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  }\n\n  let parentbgname;\n  if (role === \"COMPANY\") {\n    const parentbgnamefilter = User.filter(\n      (user) => user.parentCompany === loggedinemail\n    );\n    parentbgname = parentbgnamefilter[0]?.parentBusinessGroup;\n  }\n\n  const branchData = User.filter(\n    (item) => item.role === \"branch\" && item._id == id\n  );\n\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const newData = userData.filter((data) => data._id == id);\n\n  // const defaultValues = getSelectValues();\n\n  const [filteredUserData, setFilteredUserData] = useState(newData);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n  const [businessDisabled, setBusinessDisabled] = useState(false);\n  const [companyDisabled, setCompanyDisabled] = useState(false);\n\n  useEffect(() => {\n    let tempcompanyOptions;\n    if (role === \"BUSINESS_GROUP\") {\n      tempcompanyOptions = DummyData.filter((item) => item.role === \"company\")\n        .filter((cp) => cp.parent === checkUser())\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    } else {\n      tempcompanyOptions = DummyData.filter((item) => item.role === \"company\")\n        .filter((cp) => cp.parent === businessUserValue)\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    }\n\n    let tempparentOptions;\n\n    if (role === \"COMPANY\") {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === checkUser())\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    } else {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === companyValue)\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    }\n\n    let tempvehicleOptions;\n    if (role === \"COMPANY\") {\n      tempvehicleOptions = DummyData.filter(\n        (item) => item.vehicleName && item.company === checkUser()\n      ).map((item) => ({\n        label: item.vehicleName,\n        value: item._id,\n      }));\n    } else {\n      tempvehicleOptions = DummyData.filter(\n        (item) => item.vehicleName && item.company === companyValue\n      ).map((item) => ({\n        label: item.vehicleName,\n        value: item._id,\n      }));\n    }\n\n    tempcompanyOptions.push({ label: \"None\", value: 0 });\n\n    // setBusinessUserOptions(tempbusinessUserOptions);\n    if (businessUserValue) {\n      // setCompanyOptions(tempcompanyOptions);\n    } else {\n      // setCompanyOptions([...defaultCompanyOptions, { label: \"None\", value: 0 }]);\n    }\n    setVehiclesOptions(tempvehicleOptions);\n\n    setParentOptions(tempparentOptions);\n  }, [businessUserValue, companyValue, parentValue]);\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState(branchData);\n  useEffect(() => {\n    if (userDetails.user.role === \"COMPANY\") {\n      setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId);\n      setBusinessDisabled(true);\n\n      setValue(\"parentCompany\", userDetails?.user.companyId);\n      setCompanyId(userDetails?.user.companyId);\n      setCompanyDisabled(true);\n      console.log(\"parentCompany\", userDetails?.user.businessGroupId);\n    }\n    if (userDetails.user.role === \"BUSINESS_GROUP\") {\n      // setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId);\n      console.log(userDetails?.user.businessGroupId, \"dsggsgs\");\n      setBusinessDisabled(true);\n    }\n  }, []);\n  useEffect(() => {\n    const id = filteredUserData[0]?._id;\n    id ? setIsEdit(true) : setIsEdit(false);\n    if (id) {\n      const selectedTemplateId = filteredUserData[0]?.featureTemplateId;\n      const selectedGroupId = filteredUserData[0]?.businessGroupId;\n      const selectedCompanyId = filteredUserData[0]?.companyId;\n      const selectedBranchId = filteredUserData[0]?.branchIds;\n      setValue(\"featureTemplateId\", selectedTemplateId);\n      setValue(\"businessUser\", selectedGroupId);\n      console.log(\"selectedGroupId\", selectedGroupId);\n      loadDatainDropdowns();\n      setValue(\"parentCompany\", selectedCompanyId);\n      setValue(\"Branch\", selectedBranchId);\n      setValue(\"branchIds\", selectedBranchId);\n\n      setValue(\n        \"parentBusinessGroup\",\n        filteredCompanyData[0] ? filteredCompanyData[0].parentBusinessGroup : \"\"\n      );\n      setValue(\n        \"parentBranch\",\n        filteredCompanyData[0] ? filteredCompanyData[0].parentBranch : \"\"\n      );\n      if (id) {\n        setValue(\n          \"country\",\n          filteredUserData[0] ? filteredUserData[0]?.country : \"\"\n        );\n\n        setDefaultValue({ name: filteredUserData[0]?.country });\n        setValue(\n          \"state\",\n          filteredUserData[0] ? filteredUserData[0]?.state : \"\"\n        );\n        setSelectStateName({ name: filteredUserData[0]?.state || \"\" });\n      }\n\n      setValue(\"_id\", filteredUserData[0] ? filteredUserData[0]?._id : id);\n      async function loadDatainDropdowns() {\n        await onGroupChange(selectedGroupId);\n        await onCompanyChange(selectedCompanyId);\n      }\n    }\n    setValue(\"isEdit\", isEdit);\n  }, [TemplateOptions, allBranches, allCompanies, allGroups]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n              //     await onGroupChange(newValue.value);\n              //     setBusinessUserValue(newValue.label);\n              //     setValue(\"parentBusinessGroup\", newValue.value);\n              //     setValue(\"businessUser\", newValue.value);\n              //   }}\n              //   options={businessUserOptions}\n              //   ref={ref}\n              //   isDisabled={defaultValues?.business?.disabled}\n              //   name={name}\n              //   value={businessUserOptions.find(option => option.value === value)}\n              //   styles={customStyles}\n              // />\n              <GroupDropdown\n                key={groupId}\n                onChange={async (newValue) => {\n                  setValue(\"businessUser\", newValue.value);\n                  setGroupId(newValue.value);\n                  setCompanyId(null);\n                }}\n                value={value}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={businessDisabled}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n\n          <Controller\n            name=\"parentCompany\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n              //     await onCompanyChange(newValue.value);\n              //     setCompanyValue(newValue.label);\n              //     setValue(\"parentCompany\", newValue.value);\n              //   }}\n              //   isDisabled={defaultValues?.company?.disabled}\n              //   options={companyOptions}\n              //   ref={ref}\n              //   name={name}\n              //   styles={customStyles}\n              //   value={companyOptions.find(option => option.value === value)}\n\n              // />\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  setValue(\"parentCompany\", newValue.value);\n                  setCompanyId(newValue.value);\n                }}\n                key={groupId}\n                groupId={groupId}\n                value={value}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={companyDisabled}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"Branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n\n              //     const selectedValues = newValue.map(option => option.value);\n              //     setValue(\"Branch\", selectedValues);\n              //     setValue(\"branchIds\", selectedValues);\n              //   }}\n              //   options={branchOptions}\n              //   ref={ref}\n              //   name={name}\n              //   styles={customStyles}\n              //   isMulti={true}\n              //   value={Array.isArray(value) ? value.map(val => branchOptions.find(option => option.value === val)) : []}\n              // />\n              <BranchDropdown\n                onChange={(newValue) => {\n                  console.log(\"newValue\", newValue);\n                  const valuesArray = newValue.map((item) => item.value);\n                  setValue(\"Branch\", valuesArray);\n                  setValue(\"branchIds\", valuesArray);\n                }}\n                key={companyId}\n                companyId={companyId}\n                value={value}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={false}\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        {/* <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('vehicle')}</label>\n          <Controller\n            name=\"accessibleVehicles\"\n            control={control}\n            \n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"vehicle\", newValue);\n                }}\n                options={vehiclesOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].vehicle : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"vehicle\") && <Error errorName={errors.parent} />}\n        </div> */}\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t(\"country\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setSelectStateName({ name: \"\" });\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n            // value={getValues(\"country\")}\n            defaultValue={defaultValue}\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">{t(\"state\")}</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n              defaultValue={selectStateName}\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        {!isEdit && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0] ? filteredUserData[0].password : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0]\n                      ? filteredUserData[0].confirmPassword\n                      : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setTempValue(e);\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(\n                  (option) => option.value === field.value\n                )}\n                // defaultValue={filteredUserData[0] ? TemplateOptions.find(option => option._id === filteredUserData[0].featureTemplateId) : \"\"}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-6 mb-3 \"></div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema } from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from 'react-i18next'\nimport { createUser, updateUser } from '../../../services/api/UserServices'\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { checkRole, checkUserName } = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [t('account')];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = async (data) => {\n    console.log(data, 'this is data')\n    //if data.businessUser exists create new field named businessGroupId in data with value of businessUser\n    if (data.businessUser) {\n      data.businessGroupId = data.businessUser;\n    }\n    if(data.parentCompany){\n      data.companyId = data.parentCompany;\n    }\n    if(data.Branch){\n      console.log(data.Branch)\n      data.branchId = data.Branch;\n    }\n    console.log(data, 'this is data')\n    if (data.hasOwnProperty('_id') && data._id) {\n\n      try {\n        const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n        const index = existingData.findIndex((item) => item._id === data._id);\n\n        existingData[index] = { ...existingData[index], ...data };\n        const response = await updateUser(data, data._id)\n        console.log('this is updateResponse', response)\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          notifySuccess(\"User updated successfully !!\");\n          navigate('/subUser')\n        }\n          // UserServices.updateuser(data, data._id)\n          // .then(response => {\n          //   if(response?.data?.success === true){\n          //     localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          //     notifySuccess(\"User updated successfully !!\");\n          //     navigate('/subUser')\n          //   }else{\n          //     notifyError(response?.message?.message)\n          //   }\n          // }).catch(error => {\n          //   notifyError(error?.message?.message);\n          // })\n        } catch (error) {\n          notifyError(\"Error Occured !!\");\n        }\n      }else {\n        try {\n          const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n          // data.id = existingData.length + 1;\n          data.role = \"USER\";\n          data.parent = userName;\n          data.type = \"STAFF\";\n          const response = await createUser(data)\n          console.log('this is response', response)\n          if (response.error) {\n            notifyError(response.error);\n          } else {\n            data._id = response._id\n            existingData.unshift(data);\n            localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n            notifySuccess(\"User created successfully !!\");\n            navigate('/subUser')\n          }\n\n          // UserServices.createUser(data)\n          // .then(response => {\n          //   if(response?.data?.success === true){\n          //   console.log('this is response',response)\n          //   data._id = response.data.data._id\n          //   existingData.push(data);\n          //   localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          //   notifySuccess(\"User created successfully !!\");\n          //   navigate('/subUser')\n          //   }else{\n          //     notifyError(response?.message?.message)\n          //   }\n          // }).catch(error => {\n          //   notifyError(error?.message?.message);\n          // })\n\n        } catch (error) {\n          notifyError(\"Something Went Wrong\");\n        }\n      }\n    }\n    const { id } = useParams();\n    return (\n      <>\n        <MainPagetitle\n          mainTitle=\"User\"\n          pageTitle={id ? \"Edit\" : \"Create\"}\n          parentTitle={\"User\"}\n        />\n        <div className=\"m-2 p-2\">\n          <FormProvider>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"default-tab\">\n                <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                  <Nav as=\"ul\" className=\"nav-tabs\">\n                    {tabHeading.map((data, i) => (\n                      <Nav.Item as=\"li\" key={i}>\n                        <Nav.Link\n                          style={{ padding: \".5rem 2rem\" }}\n                          eventKey={data.toLowerCase()}\n                          active={i === activeIndex}\n                          onClick={() => setActiveIndex(i)}\n                        >\n                          {data}\n                        </Nav.Link>\n                      </Nav.Item>\n                    ))}\n                  </Nav>\n                  <Tab.Content className=\"pt-4\">\n                    {tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            onSubmit={onSubmit}\n                            handleSubmit={handleSubmit}\n                          />\n                        </Tab.Pane>\n                      );\n                    })}\n                  </Tab.Content>\n                </Tab.Container>\n              </div>\n            </form>\n          </FormProvider>\n        </div>\n      </>\n    );\n  };\n  export default SubUserForm;\n","import { get } from \"react-scroll/modules/mixins/scroller\";\nimport requests from \"./Axios\";\nimport axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios()\n\n\nexport const getTemplates = async (page) => {\n  try {\n    console.log(\"page is here \", page)\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n    const response = await axios.get(url);\n      return response.data;\n  } catch(error){\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" }\n  }\n}\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  \n//   getStaffById: async (id, body) => {\n//     return requests.post(`/admin/${id}`, body);\n//   },\n\n\n  createTemplate: async (body) => {\n\n    try {\n      console.log(body)\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  }\n};\n\nexport default TemplateServices;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","console","log","selectStateName","setSelectStateName","useState","defaultValue","setDefaultValue","allGroups","setAllGroups","allCompanies","setAllCompanies","allBranches","setAllBranches","checkRole","checkUser","useStorage","tempValue","setTempValue","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","isEdit","setIsEdit","groupId","setGroupId","companyId","setCompanyId","userDetails","JSON","parse","localStorage","getItem","t","useTranslation","customStyles","base","padding","useEffect","async","response","getGroups","companyResponse","getCompany","branchResponse","getAllBranch","error","notifyError","groups","data","groupOptions","map","item","_item$businessGroupId","_item$businessGroupId2","label","businessGroupId","groupName","value","_id","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyName","branches","branchOptions","branchName","setParentOptions","fetchOptions","getTemplates","tempOptions","name","role","id","useParams","User","loggedinemail","defaultCompanyOptions","parentbgname","DummyData","filter","userName","parent","_parentbgnamefilter$","user","parentCompany","parentBusinessGroup","branchData","newData","filteredUserData","setFilteredUserData","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","businessDisabled","setBusinessDisabled","companyDisabled","setCompanyDisabled","tempcompanyOptions","tempparentOptions","tempvehicleOptions","cp","br","vehicleName","company","push","filteredCompanyData","setFilteredCompanyData","_filteredUserData$","_filteredUserData$2","_filteredUserData$3","_filteredUserData$4","_filteredUserData$5","_filteredUserData$10","selectedTemplateId","featureTemplateId","selectedGroupId","selectedCompanyId","selectedBranchId","branchIds","_filteredUserData$6","_filteredUserData$7","_filteredUserData$8","_filteredUserData$9","loadDatainDropdowns","parentBranch","country","state","_item$companyId","_item$companyId$busin","_item$companyId2","_item$companyId3","onGroupChange","_item$companyId4","onCompanyChange","_jsx","children","_jsxs","className","style","width","margin","Controller","rules","required","render","_ref2","field","onChange","ref","GroupDropdown","newValue","isDisabled","_ref3","CompanyDropdown","_ref4","BranchDropdown","valuesArray","Error","errorName","htmlFor","CustomInput","type","email","placeholder","min","onInput","e","temp","Math","max","target","mobileNumber","CountrySelect","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref5","Select","options","styles","find","option","display","justifyContent","Button","Title","editData","setEditData","activeIndex","setActiveIndex","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","businessUser","Branch","branchId","hasOwnProperty","existingData","index","findIndex","updateUser","setItem","stringify","notifySuccess","createUser","unshift","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane","initAxios","page","url","undefined","axios","get","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}