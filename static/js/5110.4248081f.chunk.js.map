{"version":3,"file":"static/js/5110.4248081f.chunk.js","mappings":"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","sources":["jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","components/Input/UserDetailsForm.jsx","features/branch/components/Form.jsx","features/branch/pages/Create.jsx","hooks/useUserLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) setValue(\"city\", dValues.city);\n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value == dValues?.country\n        );\n        console.log({ option });\n        if (option) handleCountryChange(option);\n      }\n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n      }\n    } else {\n      setSelectedCountry({\n        value: locationData?.country?.isoAlpha3,\n        label: locationData?.country?.isoName,\n      });\n      setValue(\"country\", locationData?.country?.isoAlpha3);\n      setCountryCode(locationData?.country?.isoAlpha2);\n      setSelectedState({\n        value: locationData?.location?.principalSubdivision,\n        label: locationData?.location?.principalSubdivision || \"\",\n      });\n      setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n      const selectedCountryId = isoToCountryId(\n        locationData?.country?.isoAlpha3\n      );\n      GetState(selectedCountryId).then((result) => {\n        setStateList(result);\n      });\n    }\n  }, [locationData, id, dValues]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n\n    const selectedCountry = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountry.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountry.name });\n    setStateList([]);\n    setSelectedState({\n      value: \"\",\n      label: \"\",\n    });\n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = (selectedOption) => {\n    const selectedStateId = selectedOption.value;\n    const selectedState = stateList.find(\n      (state) => state.name === selectedStateId\n    );\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      selectedState?.name.endsWith(\" Emirate\")\n    ) {\n      selectedState.name = selectedState.name.replace(\" Emirate\", \"\");\n    }\n    setValue(\"state\", selectedState.name);\n    setSelectedState({ value: selectedState.name, label: selectedState.name });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={selectedCountry}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        {/* <label className=\"form-label\"> State</label> */}\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={selectedState}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\nimport { SVGICON } from \"../../constants/theme\";\nimport { t } from \"i18next\";\n\nconst UserDetailsForm = ({\n  field,\n  fields,\n  index,\n  register,\n  getValues,\n  errors,\n  remove,\n  id,\n}) => {\n  const handleRemoveForm = (index) => {\n    remove(index);\n  };\n\n  return (\n    <div key={field.id} className=\"row\">\n      <div className=\"d-flex align-items-center\">\n        {fields.length > 1 && (\n          <div className=\"flex-grow-1 mb-3\">\n            <h5>User {index + 1}</h5>\n          </div>\n        )}\n        {fields.length > 1 && (\n          <div className=\"mr-5\" onClick={() => handleRemoveForm(index)}>\n            {SVGICON.Delete}\n          </div>\n        )}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"name\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"name\"\n          name={`userInfo.${index}.name`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.name`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.name} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"designation\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"designation\"\n          name={`userInfo.${index}.designation`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.designation`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.designation} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"mobileNumber\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"number\"\n          register={register}\n          name={`userInfo.${index}.mobileNumber`}\n          label=\"Mobile Number\"\n          placeholder=\"\"\n          min=\"0\"\n          onInput={(e) => {\n            const temp = Math.max(0, e.target.value);\n            e.target.value = temp < 1 ? \"\" : temp;\n          }}\n          defaultValue={getValues(`userInfo.${index}.mobileNumber`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.mobileNumber} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"email\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"email\"\n          register={register}\n          name={`userInfo.${index}.email`}\n          label=\"email\"\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.email`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.email} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetailsForm;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport FormField from \"@/components/Input/UserDetailsForm\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst BranchForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n  watch,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [company, setCompany] = useState();\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const { location: locationData, error: locationError } = useUserLocation();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\", margin: \"auto\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <span className=\"text-danger\">*</span>\n\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                onChange={(newValue) => {\n                  if (getValues(\"businessGroupId\") != newValue.value) {\n                    setValue(\"businessGroupId\", newValue.value);\n                    setValue(\"companyName\", \"\");\n                    setValue(\"companyId\", \"\");\n                    setCompany(null);\n                  }\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n\n          {!getValues(\"businessGroupId\") && (\n            <Error errorName={errors.businessGroupId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"company\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                groupId={watch(\"businessGroupId\")}\n                onChange={(newValue) => {\n                  setValue(\"companyId\", newValue.value);\n                  setValue(\"companyName\", newValue.label);\n                  setCompany(newValue);\n                }}\n                defaultValue={value}\n                value={company}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n\n          {!getValues(\"companyId\") && <Error errorName={errors.companyId} />}\n        </div>\n\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"branchName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"Branch Name\"\n            name=\"branchName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"branchName\")}\n          />\n          <Error errorName={errors.branchName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {\" \"}\n            ADD\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <FormField\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BranchForm;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport { branchAccountSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport { createNewBranch, editBranch, getBranchById } from \"../api\";\nimport CreateForm from \"../components/Form\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport Loader from \"@/components/Loader\";\n\nconst BranchForm = () => {\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { id } = useParams();\n  const tabHeading = [id ? t(\"editBranch\") : t(\"newBranch\")];\n  const component = [CreateForm];\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const {\n    data: branchData,\n    isLoading,\n    isError,\n  } = useQuery({\n    queryKey: [\"branch\", id],\n    queryFn: () => getBranchById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch branch data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const parsedBranchData = useMemo(() => {\n    return {\n      ...branchData,\n      businessGroupId: branchData?.businessGroupId?._id,\n      companyId: branchData?.companyId?._id,\n    };\n  }, [branchData]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n    watch,\n  } = useForm({\n    defaultValues: {\n      companyId: \"\",\n      businessGroupId: \"\",\n      userInfo: [\n        {\n          name: \"\",\n          designation: \"\",\n          mobileNumber: null,\n          email: \"\",\n        },\n      ],\n      timeFormat: timeFormatOptions[1]?.value,\n      dateFormat: dateFormatOptions[1]?.value,\n    },\n    resolver: yupResolver(branchAccountSchema),\n    values: parsedBranchData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: createBranchMutation, isPending: createPending } =\n    useMutation({\n      mutationFn: createNewBranch,\n      onSuccess: () => {\n        notifySuccess(\"Branch has been created\");\n        queryClient.invalidateQueries([\"branches\"]);\n        navigate(\"/branch\");\n      },\n      onError,\n    });\n\n  const { mutate: editBranchMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => editBranch(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Branch has been updated!\");\n      queryClient.invalidateQueries([\"branches\"]);\n      navigate(\"/branch\");\n    },\n    onError: (error) => {\n      notifyError(error.message);\n    },\n  });\n\n  const onSubmit = async (data) => {\n    if (activeIndex === 0) {\n      if (data.logo == null || data.logo.length === 0) {\n        delete data.logo;\n      }\n      if (data.file && data.file.length === 0) {\n        delete data.file;\n      }\n      if (id) {\n        editBranchMutation({ data, id });\n      } else {\n        createBranchMutation(data);\n      }\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"Branch\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            handleSubmit={handleSubmit}\n                            onSubmit={onSubmit}\n                            watch={watch}\n                            isFormSubmitting={createPending || editPending}\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                  {}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BranchForm;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n"],"names":["_ref","countryCode","customStyle","setValue","id","dValues","Comptype","t","useTranslation","timezones","setTimezones","useState","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","label","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","_jsxs","className","children","htmlFor","_jsx","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","register","errors","getValues","locationData","showCity","selectedCountry","setSelectedCountry","selectedState","setSelectedState","countriesList","setCountriesList","stateList","setStateList","setCountryCode","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","_locationData$country","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$locatio","_locationData$locatio2","_locationData$locatio3","_locationData$country5","isoAlpha3","isoName","isoAlpha2","location","principalSubdivision","selectedCountryId","isoToCountryId","GetState","isoCode","iso3","async","selectedIsoCode","iso2","name","getStateName","endsWith","replace","stateOptions","_Fragment","Error","errorName","selectedStateId","CustomInput","type","placeholder","defaultValue","TimeZoneSelector","_errors$userInfo","_errors$userInfo$inde","_errors$userInfo2","_errors$userInfo2$ind","_errors$userInfo3","_errors$userInfo3$ind","_errors$userInfo4","_errors$userInfo4$ind","field","fields","index","remove","onClick","handleRemoveForm","SVGICON","Delete","userInfo","designation","min","onInput","e","temp","max","target","mobileNumber","email","onSubmit","handleSubmit","isFormSubmitting","watch","append","useFieldArray","company","setCompany","useParams","error","locationError","useUserLocation","style","width","margin","Controller","rules","required","render","_ref2","ref","GroupDropdown","newValue","_ref3","CompanyDropdown","groupId","branchName","tradeLicenseNumber","officeNumber","disabled","LocationSelector","_ref4","dateFormatOptions","dateFormat","_ref5","timeFormatOptions","display","justifyContent","Button","handleAddForm","FormField","BranchForm","_timeFormatOptions$","_dateFormatOptions$","activeIndex","setActiveIndex","tabHeading","component","CreateForm","navigate","useNavigate","queryClient","useQueryClient","data","branchData","isLoading","isError","useQuery","queryKey","queryFn","getBranchById","enabled","staleTime","Infinity","notifyError","parsedBranchData","useMemo","_branchData$businessG","_branchData$companyId","_id","formState","useForm","defaultValues","timeFormat","resolver","yupResolver","branchAccountSchema","values","mutate","createBranchMutation","isPending","createPending","useMutation","mutationFn","createNewBranch","onSuccess","notifySuccess","invalidateQueries","onError","err","getApiErrorMessage","editBranchMutation","editPending","editBranch","message","logo","file","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Loader","height","Component","Pane","lat","setLat","lng","setLng","setError","setLocation","setIsLoading","API_KEY","process","response","axios","get","latitude","longitude","getLocation"],"sourceRoot":""}