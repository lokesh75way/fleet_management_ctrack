{"version":3,"file":"static/js/3415.542eff13.chunk.js","mappings":"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","sources":["jsx/components/Dashboard/elements/Column.js","jsx/components/Dashboard/TaskSummaryBlog.js","jsx/components/Dashboard/TaskSummary.js"],"sourcesContent":["// import { Flex, Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { Draggable } from \"@hello-pangea/dnd\";\nimport { Droppable } from \"@hello-pangea/dnd\";\nimport { IMAGES } from \"../../../constant/theme\";\nimport { Dropdown } from \"react-bootstrap\";\n\n\n\nconst Column = ({ column, tasks }) => {\n \n  const [priority, setPriority] = useState(tasks); \n\n  const handleSelect = (id, value)\t=> {\n\t\tlet temp = priority.map((data) => {\n\t\t\tif (id === data.emplid) {\n\t\t\t\treturn { ...data, select: value };\n\t\t\t}\n\t\t\treturn data;\n\t\t});\n\t\tsetPriority(temp);\n\t};\n\tconst handleAction = (id, value)\t=> {\n\t\tlet temp = priority.map((data) => {\n\t\t\tif (id === data.emplid) {\n\t\t\t\treturn { ...data, status: value };\n\t\t\t}\n\t\t\treturn data;\n\t\t});\n\t\tsetPriority(temp);\n\t};\n  return (\n    <>\n        <div className=\"col\">\n            <div className=\"card kanbanPreview-bx\">\n               <div className=\"card-body draggable-zone dropzoneContainer\">  \n                    {column.title}\n                    <Droppable droppableId={column.id}>\n                        {(droppableProvided, droppableSnapshot) => (\n                          <div     \n                            className=\"h-100\"                    \n                              ref={droppableProvided.innerRef}\n                              {...droppableProvided.droppableProps}\n                          >\n                            {tasks.map((task, index) => (\n                                <Draggable key={task.id} draggableId={`${task.id}`} index={index}>\n                                  {(draggableProvided, draggableSnapshot) => (\n                                    <div className=\"sub-card draggable-handle draggable p-0\"\n                                        ref={draggableProvided.innerRef}\n                                        {...draggableProvided.draggableProps}\n                                        {...draggableProvided.dragHandleProps}\n                                    >\n                                    \n                                          <div className=\"task-card-data\">\n                                              <div className=\"products\">\n                                                <div>\n                                                  <h6>{task.content}</h6>\n                                                  <span>INV-100023456</span>\n                                                </div>\t\n                                              </div>\n                                              {index % 2 === 0 ?\n                                                <div className=\"avatar-list avatar-list-stacked my-2\">\n                                                    <img src={IMAGES.contact6} className=\"avatar rounded-circle\" alt=\"avar1\"/>{\" \"}\n                                                    <img src={IMAGES.contact5} className=\"avatar rounded-circle\" alt=\"avat2\"/>{\" \"}\n                                                    <img src={IMAGES.contact1} className=\"avatar rounded-circle\" alt=\"avat3\"/>{\" \"}\n                                                    <img src={IMAGES.contact2} className=\"avatar rounded-circle\" alt=\"ava4\"/>{\" \"}\n                                                    <img src={IMAGES.contact5} className=\"avatar rounded-circle\" alt=\"ava5\"/>\n                                                </div>\n                                                :\n\n                                                <div className=\"avatar-list avatar-list-stacked my-2\">\n                                                    <img src={IMAGES.contact6} className=\"avatar rounded-circle\" alt=\"avar1\"/>{\" \"}\n                                                    <img src={IMAGES.contact5} className=\"avatar rounded-circle\" alt=\"avat2\"/>{\" \"}\n                                                    <img src={IMAGES.contact1} className=\"avatar rounded-circle\" alt=\"avat3\"/>{\" \"}\n                                                    <img src={IMAGES.contact2} className=\"avatar rounded-circle\" alt=\"ava4\"/>{\" \"}\n                                                </div>\n                                              }\n                                              <div className=\"my-2\">\n                                                <span className=\"badge badge-primary light border-0 me-1\">Issue</span>\n                                                <span className=\"badge badge-primary light border-0 ms-1\">HTML</span>\n                                              </div>\n                                              <div className=\"d-flex align-items-center\">\n                                                <p className=\"mb-0 font-w500 text-secondary me-2\">Status</p>                                                \n                                                <Dropdown className=\"task-dropdown-2\">\n                                                   <Dropdown.Toggle as=\"div\" className={task.status}>{task.status}</Dropdown.Toggle>\n                                                    <Dropdown.Menu className='task-drop-menu'>\n                                                      <Dropdown.Item  onClick={()=>handleAction(task.dropid,'In Progress')}>In Progress</Dropdown.Item>\n                                                      <Dropdown.Item onClick={()=>handleAction(task.dropid,'Pending')}>Pending</Dropdown.Item>\n                                                      <Dropdown.Item onClick={()=>handleAction(task.dropid,'Testing')}>Testing</Dropdown.Item>\n                                                      <Dropdown.Item onClick={()=>handleAction(task.dropid,'Complete')}>Complete</Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                              </div>                                              \n                                          </div>\t\n                                          <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                                              <div className=\"footer-data\">\n                                                  <span>Start Date</span>\n                                                  <p>06 Feb 2023</p>\n                                              </div>\n                                              <div className=\"footer-data\">\n                                                  <span>End Date</span>\n                                                  <p>06 Feb 2023</p>\n                                              </div>\n                                              <div className=\"footer-data\">\n                                                  <span className=\"d-block\">Priority</span>\n                                                  <Dropdown className=\"task-dropdown-2\">\n                                                    <Dropdown.Toggle as=\"div\" className={task.select}>{task.select}</Dropdown.Toggle>\n                                                    <Dropdown.Menu className='task-drop-menu'>\n                                                      <Dropdown.Item onClick={()=>handleSelect(task.dropid,'High')}>High</Dropdown.Item>\n                                                      <Dropdown.Item onClick={()=>handleSelect(task.dropid,'Medium')}>Medium</Dropdown.Item>\n                                                      <Dropdown.Item onClick={()=>handleSelect(task.dropid,'Low')}>Low</Dropdown.Item>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                    </Dropdown.Menu>\n                                                  </Dropdown>\n                                              </div>\n                                          </div>\n                                      \n                                    </div>\n                                  )}\n                                </Draggable>\n                            ))}\n                          </div>\n                        )}\n                    </Droppable>\n                </div>\n            </div>\n        </div>\n          \n    </>\n  );\n};\n\nexport default Column;\n","\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext } from \"@hello-pangea/dnd\";\r\nimport  Column  from \"./elements/Column\";\r\n\r\n\r\nfunction HeadOne({theme}){\r\n    return(\r\n        <div className={`sub-card border-${theme}`}>\r\n            <div className=\"sub-card-2\">\r\n                <div>\r\n                    <h5 className=\"mb-0\">Not Started</h5>\r\n                    <span>Tasks assigned to me: 18</span>\r\n                </div>\r\n                <div className={`icon-box bg-${theme}-light rounded-circle`}>\r\n                    <h5 className={`text-${theme} totalCount`}>18</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst reorderColumnList = (sourceCol, startIndex, endIndex) => {\r\n  const newTaskIds = Array.from(sourceCol.taskIds);\r\n  const [removed] = newTaskIds.splice(startIndex, 1);\r\n  newTaskIds.splice(endIndex, 0, removed);\r\n\r\n  const newColumn = {\r\n    ...sourceCol,\r\n    taskIds: newTaskIds,\r\n  };\r\n\r\n  return newColumn;\r\n};\r\n\r\n\r\nconst initialData = {\r\n    tasks: {\r\n      1: { id: 1, dropid:'101', content: \"HTML template Issue Complete\",status:'Complete',  select:'High'},\r\n      2: { id: 2, dropid:'102', content: \"React template Issue Complete \",status:'Testing',  select:'Low' },\r\n      3: { id: 3, dropid:'103', content: \"Angular Issue Complete\",status:'Pending',  select:'Medium' },\r\n      4: { id: 4, dropid:'104', content: \"HTML template Issue Complete\" ,status:'Complete',  select:'High'},\r\n      5: { id: 5, dropid:'105', content: \"React Dashboard Issue Complete\",status:'In Progress',  select:'Low' },\r\n      6: { id: 6, dropid:'106', content: \"Laravel template Issue Complete\",status:'Testing',  select:'Medium' },\r\n      7: { id: 7, dropid:'107', content: \"WordPress Issue Complete\",status:'Pending',  select:'High' },\r\n      8: { id: 8, dropid:'108', content: \"HTML template Issue Complete\",status:'Complete',  select:'Low' },\r\n      9: { id: 9, dropid:'109', content: \"React template Issue Complete\",status:'In Progress',  select:'Medium' },\r\n      10: { id: 10, dropid:'110', content: \"WordPress Issue Complete\",status:'Testing',  select:'High' },\r\n      11: { id: 11, dropid:'111', content: \"Laravel Dashboard Issue Complete\",status:'Pending',  select:'Low' },\r\n      12: { id: 12, dropid:'112', content: \"Angular template Issue Complete\",status:'In Progress',  select:'Medium' },\r\n      13: { id: 13, dropid:'113', content: \"HTML Admin Issue Complete\",status:'Testing',  select:'High' },\r\n      14: { id: 14, dropid:'114', content: \" Codeigniter Admin Issue Complete\",status:'Complete',  select:'Low' },\r\n      15: { id: 15, dropid:'115', content: \"Angular template Issue Complete\",status:'In Progress',  select:'Medium' },\r\n    },\r\n    columns: {\r\n      \"column-1\": {\r\n        id: \"column-1\",\r\n        title: <HeadOne theme=\"primary\"/>,\r\n        taskIds: [1, 2, 3],\r\n      },\r\n      \"column-2\": {\r\n        id: \"column-2\",\r\n        title: <HeadOne theme=\"purple\"/>,\r\n        taskIds: [4, 5, 6],\r\n      },\r\n      \"column-3\": {\r\n        id: \"column-3\",\r\n        title: <HeadOne theme=\"warning\"/>,\r\n        taskIds: [7,8,9],\r\n      },\r\n      \"column-4\": {\r\n        id: \"column-4\",\r\n        title: <HeadOne theme=\"danger\"/>,\r\n        taskIds: [10,11,12],\r\n      },\r\n      \"column-5\": {\r\n        id: \"column-5\",\r\n        title: <HeadOne theme=\"success\"/>,\r\n        taskIds: [13,14,15],\r\n      },\r\n    },  \r\n    columnOrder: [\"column-1\", \"column-2\", \"column-3\",\"column-4\",\"column-5\"],\r\n  };\r\n  \r\n\r\n\r\nexport default function TaskSummaryBlog() {\r\n  const [state, setState] = useState(initialData);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source } = result;\r\n\r\n    // If user tries to drop in an unknown destination\r\n    if (!destination) return;\r\n   \r\n    const sourceCol = state.columns[source.droppableId];\r\n    const destinationCol = state.columns[destination.droppableId];\r\n\r\n    if (sourceCol.id === destinationCol.id) {\r\n      const newColumn = reorderColumnList(\r\n        sourceCol,\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      const newState = {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setState(newState);\r\n      return;\r\n    }\r\n\r\n    const startTaskIds = Array.from(sourceCol.taskIds);\r\n    const [removed] = startTaskIds.splice(source.index, 1);\r\n    const newStartCol = {\r\n      ...sourceCol,\r\n      taskIds: startTaskIds,\r\n    };\r\n\r\n    const endTaskIds = Array.from(destinationCol.taskIds);\r\n    endTaskIds.splice(destination.index, 0, removed);\r\n    const newEndCol = {\r\n      ...destinationCol,\r\n      taskIds: endTaskIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...state,\r\n      columns: {\r\n        ...state.columns,\r\n        [newStartCol.id]: newStartCol,\r\n        [newEndCol.id]: newEndCol,\r\n      },\r\n    };\r\n\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>        \r\n        {state.columnOrder.map((columnId, index) => {\r\n            const column = state.columns[columnId];\r\n            const tasks = column.taskIds.map((taskId) => state.tasks[taskId]);\r\n            return(\r\n                <Column key={column.id} column={column} tasks={tasks}/>  \r\n            )\r\n        })}        \r\n               \r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport MainPagetitle from '../../layouts/MainPagetitle';\r\nimport { Link } from 'react-router-dom';\r\nimport { SVGICON } from '../../constant/theme';\r\nimport TaskSummaryBlog from './TaskSummaryBlog';\r\nimport EmployeeOffcanvas from '../../constant/EmployeeOffcanvas';\r\n\r\n// import MainPage from './elements/TaskSummary/MainPage';\r\n\r\nconst TaskSummary = () => {\r\n\tconst task = useRef();\r\n    return (\r\n        <>\r\n            <MainPagetitle mainTitle=\"Task\" pageTitle=\"Task\" parentTitle=\"Home\" />\r\n            <div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n\t\t\t\t\t<h5 className=\"mb-0\">Tasks Summary</h5>\r\n\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<div className=\"icon-box  icon-box-sm task-tab me-2\">\r\n\t\t\t\t\t\t\t<Link to={\"/task\"}>\r\n\t\t\t\t\t\t\t\t{SVGICON.TaskList}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary btn-sm ms-2\"\r\n\t\t\t\t\t\t\tonClick={()=>task.current.showModal()}\r\n\t\t\t\t\t\t>+ Add Task</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                <div className=\"row kanban-bx\">\r\n\t\t\t\t\t<TaskSummaryBlog />\r\n                </div>\r\n            </div>\r\n\t\t\t<EmployeeOffcanvas \r\n                ref={task}\r\n                Title=\"New Task\"\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TaskSummary;"],"names":["_ref","column","tasks","priority","setPriority","useState","handleSelect","id","value","temp","map","data","emplid","select","handleAction","status","_jsx","_Fragment","children","className","_jsxs","title","Droppable","droppableId","droppableProvided","droppableSnapshot","ref","innerRef","droppableProps","task","index","Draggable","draggableId","concat","draggableProvided","draggableSnapshot","draggableProps","dragHandleProps","content","src","IMAGES","contact6","alt","contact5","contact1","contact2","Dropdown","Toggle","as","Menu","Item","onClick","dropid","HeadOne","theme","initialData","columns","taskIds","columnOrder","TaskSummaryBlog","state","setState","DragDropContext","onDragEnd","result","destination","source","sourceCol","destinationCol","newColumn","reorderColumnList","startIndex","endIndex","newTaskIds","Array","from","removed","splice","newState","startTaskIds","newStartCol","endTaskIds","newEndCol","columnId","taskId","Column","TaskSummary","useRef","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","SVGICON","TaskList","current","showModal","EmployeeOffcanvas","Title"],"sourceRoot":""}