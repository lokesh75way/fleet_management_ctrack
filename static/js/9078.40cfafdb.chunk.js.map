{"version":3,"file":"static/js/9078.40cfafdb.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/BusinessGroupTabs/MyAccount.jsx","jsx/components/TabComponent/BusinessGroupTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/BusinessForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport DummyData from \"../../../../users.json\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport { useParams } from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport { storageCapacityOptions } from \"../VehicleTabs/Options\";\n\nconst MyAccount = ({\n  data,\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n}) => {\n\n  const {t} = useTranslation();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [tempValue, setTempValue] = useState();\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const { id } = useParams();\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \",\n    }),\n  };\n  // useEffect(()=>{\n  //   console.log(\"outside\");\n  //   console.log(stateid);\n  //   if(stateid !== 0){\n  //     console.log(\"inside\");\n  //     setstateid(0);\n  //     setValue(\"state\", '');\n  //   }\n  // },[countryid])\n\n  const user = localStorage.getItem(\"loginDetails-email\");\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('businessGroupName')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"userName\")}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('username')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name2\"\n            name=\"userName2\"\n            placeholder=\"\"\n            defaultValue={getValues(\"userName2\")}\n          />\n          <Error errorName={errors.userName2} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('email')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"email\"\n            label=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        {!id && (\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n            {t('password')}<span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"password\"\n              register={register}\n              name=\"password\"\n              label=\"password\"\n              placeholder=\"\"\n              defaultValue={getValues(\"password\")}\n            />\n            <Error errorName={errors.password} />\n          </div>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('helpDeskEmail')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"helpDeskEmail\"\n            label=\"Help Desk Email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"helpDeskEmail\")}\n          />\n          <Error errorName={errors.helpDeskEmail} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('helpDeskTelephoneNumber')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Help Desk Telephone Number\"\n            name=\"helpDeskTelephoneNumber\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"helpDeskTelephoneNumber\")}\n          />\n          <Error errorName={errors.helpDeskTelephoneNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('mobileNumber')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            name=\"mobileNumber\"\n            label=\"Mobile Number\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"mobileNumber\")}\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('whatsappContactNumber')}</label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Whatsapp Contact Number\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"whatsappContactNumber\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n          {t('country')}<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">{t('state')}</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={isStateDisabled ? 0: countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('city')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n          {t('zipCode')}\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Zip Code\"\n            name=\"zipCode\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"zipCode\")}\n          />\n          <Error errorName={errors.zipCode} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('storageCapacity')}</label>\n          <Controller\n            name=\"storageCapacity\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"storageCapacity\", newValue.value)}\n                options={storageCapacityOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={storageCapacityOptions[1]}\n              />\n            )}\n          />\n\n            <p style={{fontStyle: \"italic\"}}>\n              For more than 120 days, please <a href=\"#\" class=\"link-primary\">contact</a> your account manager.\n            </p>\n\n        </div>\n\n\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('street1')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street1\"\n            name=\"street1\"\n            placeholder=\"\"\n            defaultValue={getValues(\"street1\")}\n          />\n          <Error errorName={errors.street1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('street2')}\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street2\"\n            name=\"street2\"\n            placeholder=\"\"\n            defaultValue={getValues(\"street2\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('contactPerson')}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Contact Person\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n            defaultValue={getValues(\"contactPerson\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n          {t('faxNumber')}\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Fax Number\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"faxNumber\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">{t('uploadLogo')}</label>\n          <input\n            type=\"file\"\n            {...register('businessGroupLogo')}\n            label=\"Business Group Logo\"\n            name=\"businessGroupLogo\"\n            className=\"form-control\"\n          />\n          <Error errorName={errors.businessGroupLogo} />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t('submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport TimezoneSelect from 'react-timezone-select'\nimport { currencyOptions } from \"../VehicleTabs/Options\";\nimport { dayOptions } from \"../VehicleTabs/Options\";\nimport { statusOptions } from \"../VehicleTabs/Options\";\nimport { languageOptions } from \"../VehicleTabs/Options\";\nimport {useTranslation} from 'react-i18next'\n\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n  preferredCurrencyUnitOptions,\n  unitOfFuelOptions,\n  fuelEconomyScalingOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, handleSubmit, onSubmit,errors, control, register }) => {\nconst {t} = useTranslation();\n  const [selectedTimezone, setSelectedTimezone] = useState(Intl.DateTimeFormat().resolvedOptions().timeZone)\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('dateFormat')}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('timeFormat')}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('unitOfDistance')}</label>\n          <Controller\n            name=\"fuelEconomyScaling\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) =>\n                  setValue(\"unitOfDistance\", newValue.value)\n                }\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={fuelEconomyScalingOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('unitOfFuel')}</label>\n          <Controller\n            name=\"unitOfFuel\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                options={unitOfFuelOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('language')}</label>\n          <Controller\n            name=\"language\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"language\", newValue.value)}\n                options={languageOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={languageOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('status')}</label>\n          <Controller\n            name=\"status\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"status\", newValue.value)}\n                options={statusOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={statusOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('worksStartDay')}</label>\n          <Controller\n            name=\"worksstartday\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"worksstartday\", newValue.value)}\n                options={dayOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dayOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('currency')}</label>\n          <Controller\n            name=\"currency\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"currency\", newValue.value)}\n                options={currencyOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={currencyOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n        <label className=\"form-label\">{t('timeZone')} </label>\n          <Controller\n            name=\"timezone\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <TimezoneSelect\n                // onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                onChange={setSelectedTimezone}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n                value={selectedTimezone}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">{t('uploadFile')}</label>\n          <input\n            type=\"file\"\n            {...register('businessGroupLogo')}\n            label=\"Business Group Logo\"\n            name=\"businessGroupLogo\"\n            className=\"form-control\"\n          />\n          <Error errorName={errors.businessGroupLogo} />\n        </div>\n\n\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t('submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport MyAccount from \"../../../../components/TabComponent/BusinessGroupTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/BusinessGroupTabs/UserSetting\";\nimport ManagePassword from \"../../../../components/TabComponent/AdminProfileTabs/ManagePassword\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { businessGroupAccountSchema, businessGroupSettingSchema } from \"../../../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../../../utils/toast\";\nimport {useTranslation} from 'react-i18next'\n\nconst BusinessForm = ({ Title, editData, setEditData }) => {\n  const {t} = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [t('newBusinessGroup'), t('settings'),t('changePassword')];\n  const component = [MyAccount, UserSetting,ManagePassword];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n  const { id } = useParams(); \n\n  if(!id){\n    component.pop();\n    tabHeading.pop();\n  }\n\n  // Fetch data from local storage when the id changes\n  useEffect(() => {\n    const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n    console.log(existingData, id)\n    const businessData = existingData.find((item) => item.id === parseInt(id, 10));\n    if (businessData) {\n      reset(businessData);\n    }\n  }, [id]);\n\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    reset,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(\n      activeIndex === 1 ?  businessGroupSettingSchema : businessGroupAccountSchema\n  ),\n    });\n\n  const onSubmit = (data) => {\n    if (activeIndex === totalTabs - 1) {\n      try {\n        const existingUserData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n        data.id = `${existingUserData.length + 1}`;\n        data.role = 'businessgroup';\n        data.parent = 'admin';\n        existingUserData.push(data);\n        localStorage.setItem(\"userJsonData\", JSON.stringify(existingUserData));\n        notifySuccess(\"New Business Group Created !\");\n        navigate(\"/business\");\n        return;\n      } catch (error) {\n        notifyError(\"Some error occured !!\");\n      }\n    }\n    \n    if(!id){\n      const existingUserData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = `${existingUserData.length + 1}`;\n      data.role = 'businessgroup';\n      data.parent = 'admin';\n      existingUserData.push(data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingUserData));\n      notifySuccess(\"New Business Group Created !\");\n      navigate('/business')\n    }\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle= {t('businessGroup')}\n        pageTitle={id?t('edit'):t('create')}\n        parentTitle={t('businessGroup')}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BusinessForm;\n"],"names":["_ref","data","setValue","getValues","register","onSubmit","handleSubmit","errors","control","t","useTranslation","countryid","setCountryid","useState","stateid","setstateid","tempValue","setTempValue","isStateDisabled","setIsStateDisabled","id","useParams","customStyles","base","padding","localStorage","getItem","_jsxs","className","children","style","width","margin","_jsx","CustomInput","type","label","name","placeholder","defaultValue","Error","errorName","userName","userName2","email","password","helpDeskEmail","min","onInput","e","temp","Math","max","target","value","helpDeskTelephoneNumber","mobileNumber","CountrySelect","onChange","containerClassName","inputClassName","placeHolder","country","concat","background","StateSelect","htmlFor","city","zipCode","Controller","render","_ref2","field","ref","Select","newValue","options","storageCapacityOptions","styles","fontStyle","href","class","street1","businessGroupLogo","display","justifyContent","Button","onClick","selectedTimezone","setSelectedTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","dateFormatOptions","dateFormat","_ref3","timeFormatOptions","_ref4","unitOfDistanceOptions","fuelEconomyScalingOptions","_ref5","unitOfFuelOptions","_ref6","languageOptions","_ref7","statusOptions","_ref8","dayOptions","_ref9","currencyOptions","_ref10","TimezoneSelect","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","ManagePassword","totalTabs","length","navigate","useNavigate","pop","useEffect","existingData","JSON","parse","console","log","businessData","find","item","parseInt","reset","formState","useForm","resolver","yupResolver","businessGroupSettingSchema","businessGroupAccountSchema","existingUserData","role","parent","push","setItem","stringify","notifySuccess","error","notifyError","prevIndex","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}