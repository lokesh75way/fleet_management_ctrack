{"version":3,"file":"static/js/1730.9ac5584e.chunk.js","mappings":"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","sources":["jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","features/driver/components/Forms/Profile.jsx","features/driver/components/Forms/AdditionalInfo.jsx","features/driver/components/Forms/Document.jsx","features/driver/pages/Create.jsx","hooks/useUserLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState, GetCity } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n  showtimeZone = true,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n  const [countryId, setCountryId] = useState(null);\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) {\n        setValue(\"city\", dValues.city);\n        setSelectedCity({\n          value: dValues.city,\n          label: dValues.city,\n        });\n      }\n      \n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value === dValues?.country\n        );\n        if (option) handleCountryChange(option);\n      }\n      \n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n        \n        // If we have both country and state, we can load cities\n        if (dValues?.country && dValues?.state && countryId) {\n          const stateObj = stateList.find(state => getStateName(state) === dValues.state);\n          if (stateObj) {\n            loadCities(countryId, stateObj.id);\n          }\n        }\n      }\n    } else {\n      if (locationData?.country?.isoAlpha3) {\n        setSelectedCountry({\n          value: locationData?.country?.isoAlpha3,\n          label: locationData?.country?.isoName,\n        });\n        setValue(\"country\", locationData?.country?.isoAlpha3);\n        setCountryCode(locationData?.country?.isoAlpha2);\n        \n        const selectedCountryId = isoToCountryId(locationData?.country?.isoAlpha3);\n        setCountryId(selectedCountryId);\n        \n        if (locationData?.location?.principalSubdivision) {\n          setSelectedState({\n            value: locationData?.location?.principalSubdivision,\n            label: locationData?.location?.principalSubdivision || \"\",\n          });\n          setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n          \n          GetState(selectedCountryId).then((result) => {\n            setStateList(result);\n            // Find state ID to load cities\n            const stateObj = result.find(state => \n              getStateName(state) === locationData?.location?.principalSubdivision);\n            if (stateObj) {\n              loadCities(selectedCountryId, stateObj.id);\n            }\n          });\n        } else {\n          GetState(selectedCountryId).then((result) => {\n            setStateList(result);\n          });\n        }\n        \n        if (locationData?.location?.city) {\n          setValue(\"city\", locationData?.location?.city);\n          setSelectedCity({\n            value: locationData?.location?.city,\n            label: locationData?.location?.city,\n          });\n        }\n      }\n    }\n  }, [locationData, id, dValues, countriesList]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const loadCities = async (countryId, stateId) => {\n    if (countryId && stateId) {\n      try {\n        const cities = await GetCity(countryId, stateId);\n        setCityList(cities);\n      } catch (error) {\n        console.error(\"Error loading cities:\", error);\n        setCityList([]);\n      }\n    } else {\n      setCityList([]);\n    }\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n    setCountryId(selectedCountryId);\n\n    const selectedCountryObj = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountryObj.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountryObj.name });\n    setStateList([]);\n    setCityList([]);\n    setSelectedState(null);\n    setSelectedCity(null);\n    setValue(\"state\", \"\");\n    setValue(\"city\", \"\");\n    \n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = async (selectedOption) => {\n    const selectedStateName = selectedOption.value;\n    const selectedStateObj = stateList.find(\n      (state) => state.name === selectedStateName\n    );\n    \n    const stateName = getStateName(selectedStateObj);\n    setValue(\"state\", stateName);\n    setSelectedState({ value: stateName, label: stateName });\n    \n    // Reset city selection\n    setCityList([]);\n    setSelectedCity(null);\n    setValue(\"city\", \"\");\n    \n    // Load cities for the selected state\n    await loadCities(countryId, selectedStateObj.id);\n  };\n\n  const handleCityChange = (selectedOption) => {\n    const selectedCityName = selectedOption.value;\n    setValue(\"city\", selectedCityName);\n    setSelectedCity({ value: selectedCityName, label: selectedCityName });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  const cityOptions = cityList.map((city) => ({\n    value: city.name,\n    label: city.name,\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={`country-${selectedCountry?.value}`}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={`state-${selectedState?.value}`}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n          isDisabled={!selectedCountry}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          {cityList.length > 0 ? (\n            <Select\n              options={cityOptions}\n              key={`city-${selectedCity?.value}`}\n              value={selectedCity}\n              styles={customStyles}\n              onChange={handleCityChange}\n              isDisabled={!selectedState}\n            />\n          ) : (\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"City\"\n              name=\"city\"\n              placeholder=\"\"\n              defaultValue={getValues(\"city\")}\n            />\n          )}\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && showtimeZone && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport BranchDropdown from \"@/features/branch/components/DropDownList\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst Profile = ({\n  setValue,\n  register,\n  handleSubmit,\n  onSubmit,\n  getValues,\n  errors,\n  control,\n  isFormSubmitting,\n  watch,\n}) => {\n  const [selectStateName, setSelectStateName] = useState({\n    name: \"\",\n  });\n  const [countryid, setCountryid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const { t } = useTranslation();\n  const [company, setCompany] = useState();\n  const [branch, setBranch] = useState();\n  const { location: locationData, error: locationError } = useUserLocation();\n  const { id } = useParams();\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"businessGroup\")} <span className=\"text-danger\">*</span>\n          </label>\n\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                onChange={(newValue) => {\n                  if (newValue.value != getValues(\"businessGroupId\")) {\n                    setValue(\"businessGroupId\", newValue.value);\n                    setCompany(null);\n                    setBranch(null);\n                    setValue(\"companyId\", \"\");\n                    setValue(\"branchId\", \"\");\n                  }\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n\n          <Error errorName={errors.businessGroupId} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"company\")} <span className=\"text-danger\">*</span>\n          </label>\n\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                groupId={watch(\"businessGroupId\")}\n                onChange={(newValue) => {\n                  if (newValue.value != getValues(\"companyId\")) {\n                    setValue(\"companyId\", newValue.value);\n                    setCompany(newValue);\n                    setBranch(null);\n                    setValue(\"branchId\", \"\");\n                  }\n                }}\n                defaultValue={value}\n                value={company}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n          <Error errorName={errors.companyId} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"branchId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <BranchDropdown\n                companyId={watch(\"companyId\")}\n                groupId={watch(\"businessGroupId\")}\n                onChange={(newValue) => {\n                  if (newValue?.value != getValues(\"branchId\")) {\n                    setValue(\"branchId\", newValue?.value);\n                    setBranch(newValue);\n                  }\n                }}\n                defaultValue={value}\n                value={branch}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={false}\n                name={name}\n              />\n            )}\n          />\n          <Error errorName={errors.branchId} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"firstName\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"First Name\"\n            name=\"firstName\"\n            placeholder={t(\"firstName\")}\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.firstName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"lastName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Last Name\"\n            name=\"lastName\"\n            placeholder={t(\"lastName\")}\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.lastName} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"employeeNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Employee Number\"\n            name=\"employeeNumber\"\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.employeeNumber} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          dValues={{\n            country: getValues(\"country\"),\n            state: getValues(\"state\"),\n            city: getValues(\"city\"),\n          }}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          showtimeZone={false}\n          Comptype={\"\"}\n        />\n\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            {t(\"zipCode\")}\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"zipCode\"\n            name=\"zipCode\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.zipCode} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"street1\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street1\"\n            name=\"street1\"\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.street1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"street2\")}\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street2\"\n            name=\"street2\"\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            {t(\"contactNumber1\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Contact Number1\"\n            name=\"contact1\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.contact1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            {t(\"contactNumber2\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Contact Number2\"\n            name=\"contact2\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\"\"}\n          />\n          <Error errorName={errors.contact2} />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n          disabled={isFormSubmitting}\n        >\n          {\" \"}\n          {t(\"next\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Controller } from \"react-hook-form\";\nimport { Button } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\n\nimport { licenseToDriveOptions } from \"@/constants/options\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport Error from \"@/components/Error/Error\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \", // Adjust the height as needed\n  }),\n};\n\nconst AdditionalInfo = ({\n  setValue,\n  register,\n  handleSubmit,\n  onSubmit,\n  getValues,\n  control,\n  errors,\n  isFormSubmitting,\n  watch,\n}) => {\n  const { t } = useTranslation();\n  const [ageError, setAgeError] = useState(\"\");\n\n  const handleChange = (e) => {\n    const value = e.target.value === \"yes\" ? true : false;\n    setValue(\"licenseAvailable\", value);\n  };\n\n  const minDate = new Date();\n  minDate.setFullYear(minDate.getFullYear() - 100);\n  const maxDate = new Date();\n\n  const calculateAge = (dateOfBirth) => {\n    if (!dateOfBirth) return null;\n    const today = dayjs();\n    const birthDate = dayjs(dateOfBirth);\n    const age = today.diff(birthDate, \"year\");\n    return age;\n  };\n\n  const handleDateOfBirthChange = (date) => {\n    const age = calculateAge(date);\n    setValue(\"age\", age);\n    \n    if (age < 16) {\n      setAgeError(t(\"Driver must be above 16\"));\n      setValue(\"ageValid\", false);\n    } else {\n      setAgeError(\"\");\n      setValue(\"ageValid\", true);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n          <label className=\"form-label\">\n            {t(\"dateOfBirth\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"dateOfBirth\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={\n                  getValues(\"dateOfBirth\")\n                    ? new Date(getValues(\"dateOfBirth\"))\n                    : null\n                }\n                minDate={minDate}\n                maxDate={maxDate}\n                className=\"form-control customDateHeight\"\n                onChange={(newValue) => {\n                  setValue(\"dateOfBirth\", newValue);\n                  handleDateOfBirthChange(newValue);\n                }}\n                showYearDropdown\n                scrollableYearDropdown={true}\n                popperClassName=\"date-picker-reports\"\n                yearDropdownItemNumber={50}\n                placeholderText={t(\"selectDateOfBirth\")}\n              />\n            )}\n          />\n          <Error errorName={errors.dateOfBirth} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"age\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Age\"\n            name=\"age\"\n            placeholder=\"\"\n            value={getValues(\"age\")}\n            disabled={true}\n          />\n          {ageError && <div className=\"text-danger mt-1\">{ageError}</div>}\n          <Error errorName={errors.age} />\n        </div>\n        <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n          <label className=\"form-label\">{t(\"dateOfJoining\")}</label>\n          <Controller\n            name=\"dateOfJoining\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={\n                  getValues(\"dateOfJoining\")\n                    ? new Date(getValues(\"dateOfJoining\"))\n                    : new Date()\n                }\n                className=\"form-control customDateHeight\"\n                onChange={(newValue) => {\n                  setValue(\"dateOfJoining\", newValue);\n                }}\n                maxDate={getValues(\"dateOfLeaving\")}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n          <label className=\"form-label\">{t(\"dateOfLeaving\")}</label>\n          <Controller\n            name=\"dateOfLeaving\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={\n                  getValues(\"dateOfLeaving\")\n                    ? new Date(getValues(\"dateOfLeaving\"))\n                    : new Date()\n                }\n                className=\"form-control customDateHeight\"\n                onChange={(newValue) => {\n                  setValue(\"dateOfLeaving\", newValue);\n                }}\n                minDate={getValues(\"dateOfJoining\")}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"drivingExperienceSince\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Driving Experience Since\"\n            name=\"drivingExperience\"\n            placeholder=\"\"\n            // defaultValue={filteredUserData[0]?.drivingExperience || \"\"}\n          />\n          <Error errorName={errors.drivingExperience} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t(\"licenseAvailable\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"basic-form\" style={{ marginTop: \".5rem\" }}>\n            <div className=\"form-check custom-checkbox form-check-inline\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                // style={{backgroundColor : 'white'}}\n                id=\"customRadioBox987\"\n                name=\"optradioCustom1\"\n                value=\"yes\"\n                checked={watch(\"licenseAvailable\")}\n                onChange={handleChange}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"customRadioBox987\"\n                style={{ marginBottom: \"0\" }}\n              >\n                {t(\"yes\")}\n              </label>\n            </div>\n            <div className=\"form-check custom-checkbox form-check-inline\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                // style={{backgroundColor : 'white'}}\n                id=\"customRadioBox988\"\n                value=\"no\"\n                checked={!watch(\"licenseAvailable\")}\n                onChange={handleChange}\n                name=\"optradioCustom1\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"customRadioBox988\"\n                style={{ marginBottom: \"0\" }}\n              >\n                {t(\"no\")}\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">{t(\"licenseNumber\")}</label>\n            <div\n              className={`${!getValues(\"licenseAvailable\") ? \"d-flex align-items-center pe-none\" : \"d-flex align-items-center\"}`}\n            >\n              <CustomInput\n                type=\"number\"\n                register={register}\n                label=\"License Number\"\n                style={{ marginRight: \".5rem\" }}\n                name=\"licenseNumber\"\n                placeholder=\"\"\n              />\n              <Error errorName={errors.licenseNumber} />\n            </div>\n          </div>\n          <div\n            className={`${!getValues(\"licenseAvailable\") ? \"col-xl-6 mb-3  pe-none\" : \"col-xl-6 mb-3 \"}`}\n          >\n            <label className=\"form-label\">{t(\"licenseToDrive\")}</label>\n            <Controller\n              name=\"licenseToDrive\"\n              control={control}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <Select\n                  onChange={(newValue) =>\n                    setValue(\"licenseToDrive\", newValue.value)\n                  }\n                  options={licenseToDriveOptions}\n                  ref={ref}\n                  name={name}\n                  styles={customStyles}\n                  defaultValue={{\n                    value: getValues(\"licenseToDrive\"),\n                    label: getValues(\"licenseToDrive\"),\n                  }}\n                />\n              )}\n            />\n            {!getValues(\"licenseToDrive\") && (\n              <Error errorName={errors.licenseToDrive} />\n            )}\n          </div>\n          <div\n            className={`${!getValues(\"licenseAvailable\") ? \"col-xl-6 mb-3 d-flex flex-column  pe-none\" : \"col-xl-6 mb-3 d-flex flex-column\"}`}\n          >\n            <label className=\"form-label\">\n              {t(\"licenseIssueDate\")}\n              <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"licenseIssueDate\"\n              control={control}\n              render={({ value, name }) => (\n                <DatePicker\n                  selected={\n                    getValues(\"licenseIssueDate\")\n                      ? new Date(getValues(\"licenseIssueDate\"))\n                      : new Date()\n                  }\n                  className=\"form-control customDateHeight\"\n                  onChange={(newValue) => {\n                    setValue(\"licenseIssueDate\", newValue);\n                  }}\n                  // maxDate={getValues(\"licenseExpiryDate\")}\n                />\n              )}\n            />\n            <Error errorName={errors.licenseNumber} />\n          </div>\n          <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n            <label className=\"form-label\">\n              {t(\"licenseExpiryDate\")}\n              <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"licenseExpiryDate\"\n              control={control}\n              render={({ value, name }) => (\n                <DatePicker\n                  selected={\n                    getValues(\"licenseExpiryDate\")\n                      ? new Date(getValues(\"licenseExpiryDate\"))\n                      : new Date()\n                  }\n                  className=\"form-control customDateHeight\"\n                  onChange={(newValue) => {\n                    setValue(\"licenseExpiryDate\", newValue);\n                  }}\n                  // minDate={getValues(\"licenseIssueDate\")}\n                />\n              )}\n            />\n          </div>\n        </>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t(\"lifeInsuranceNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Life Insurance Number\"\n            name=\"lifeInsuranceNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n          <label className=\"form-label\">{t(\"lifeInsuranceExpiry\")}</label>\n          <Controller\n            name=\"lifeInsuranceExpiry\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={\n                  getValues(\"lifeInsuranceExpiry\")\n                    ? new Date(getValues(\"lifeInsuranceExpiry\"))\n                    : new Date()\n                }\n                className=\"form-control customDateHeight\"\n                onChange={(newValue) => {\n                  setValue(\"lifeInsuranceExpiry\", newValue);\n                }}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t(\"mediclaimNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mediclaim Number\"\n            name=\"mediclaimNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n          <label className=\"form-label\">{t(\"mediclaimExpiryDate\")}</label>\n          <Controller\n            name=\"mediclaimExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={\n                  getValues(\"mediclaimExpiryDate\")\n                    ? new Date(getValues(\"mediclaimExpiryDate\"))\n                    : new Date()\n                }\n                className=\"form-control customDateHeight\"\n                onChange={(newValue) => {\n                  setValue(\"mediclaimExpiryDate\", newValue);\n                }}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"active\")}</label>\n          <div className=\"d-flex align-items-center\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              // style={{backgroundColor : 'white'}}\n              id=\"customCheckBox1\"\n              name=\"active\"\n              checked={watch(\"active\")}\n              onClick={() => {\n                setValue(\"active\", !getValues(\"active\"));\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n          disabled={isFormSubmitting}\n        >\n          {\" \"}\n          {t(\"next\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport FileUploader from \"@/components/FileUploader\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst Document = ({\n  setValue,\n  handleSubmit,\n  onSubmit,\n  getValues,\n  control,\n  errors,\n  register,\n  isFormSubmitting,\n}) => {\n  const { fields, append } = useFieldArray({\n    control,\n    name: \"documents\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [documents, setDocuments] = useState([]);\n\n  const { t } = useTranslation();\n\n  const driverDocumentOptions = [\n    { value: \"DRIVING_LICENSE\", label: \"DRIVING_LICENSE\" },\n    { value: \"AADHAR_CARD\", label: \"AADHAR_CARD\" },\n    { value: \"PAN_CARD\", label: \"PAN_CARD\" },\n    { value: \"BANK_ACCOUNT\", label: \"BANK_ACCOUNT\" },\n    { value: \"MEDICLAIM\", label: \"MEDICLAIM\" },\n  ];\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-12 d-flex align-items-center mb-4\">\n          <Button\n            onClick={() => {\n              append({\n                documentType: \"\",\n                file: null,\n                issueDate: new Date(),\n                expireDate: new Date(),\n              });\n            }}\n            className=\"ms-auto\"\n          >\n            + {t(\"addDocument\")}\n          </Button>\n        </div>\n        {fields.map((item, index) => {\n          return (\n            <>\n              <div key={item.id} className=\"row mb-4 \">\n                <div className=\"col-xl-3 mb-2\">\n                  <label className=\"form-label\">\n                    {t(\"selectDocument\")}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n\n                  <Controller\n                    name={`documents.${index}.documentType`}\n                    control={control}\n                    render={({ field: { value, name, ref } }) => (\n                      <Select\n                        onChange={(newValue) => {\n                          setValue(\n                            `documents[${index}].documentType`,\n                            newValue.value\n                          );\n                        }}\n                        options={driverDocumentOptions}\n                        ref={ref}\n                        name={name}\n                        styles={customStyles}\n                        defaultValue={{\n                          value:\n                            getValues(`documents.${index}.documentType`) ??\n                            driverDocumentOptions[1].value,\n                          label:\n                            getValues(`documents.${index}.documentType`) ??\n                            driverDocumentOptions[1].label,\n                        }}\n                      />\n                    )}\n                  />\n                  {!getValues(`documents.${index}.documentType`) && (\n                    <Error\n                      errorName={errors?.documents?.[index]?.documentType}\n                    />\n                  )}\n                </div>\n                <div className=\"col-xl-3 mb-2\">\n                  <label className=\"form-label\">\n                    {t(\"uploadFile\")}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                  <FileUploader\n                    getValue={getValues}\n                    link={getValues(`documents.${index}.file`) ?? false}\n                    register={register}\n                    name={`documents.${index}.file`}\n                    label=\"Select File\"\n                    defaultValue=\"\"\n                    setValue={setValue}\n                    setLoading={setLoading}\n                    loading={loading}\n                  />\n\n                  <Error\n                    errorName={\n                      errors?.documents?.[index]?.file ? \"File is required\" : \"\"\n                    }\n                  />\n                </div>\n                <div className=\"col-xl-3 d-flex flex-column mb-2 \">\n                  <label className=\"form-label\">{t(\"issueDate\")}</label>\n                  <Controller\n                    name={`documents.${index}.issueDate`}\n                    control={control}\n                    render={({ value, name }) => (\n                      <DatePicker\n                        selected={\n                          new Date(getValues(`documents.${index}.issueDate`))\n                        }\n                        className=\"form-control customDateHeight\"\n                        onChange={(newValue) => {\n                          setValue(`documents.${index}.issueDate`, newValue);\n                          if (documents[index]) {\n                            let temp = [...documents];\n                            temp[index].issueDate = newValue;\n                            setDocuments(temp);\n                          } else {\n                            let temp = [...documents];\n                            temp[index] = {\n                              documentType: getValues(\n                                `documents.${index}.fieldName`\n                              ),\n                              file: getValues(`documents.${index}.file`),\n                              issueDate: newValue,\n                              expireDate: getValues(\n                                `documents.${index}.expireDate`\n                              ),\n                            };\n                            setDocuments(temp);\n                          }\n                        }}\n                      />\n                    )}\n                  />\n                  {!getValues(`documents.${index}.issueDate`) && (\n                    <Error errorName={errors?.documents?.[index]?.issueDate} />\n                  )}\n                </div>\n                <div className=\"col-xl-3 d-flex flex-column mb-2\">\n                  <label className=\"form-label\">{t(\"expiryDate\")}</label>\n                  <Controller\n                    name={`documents.${index}.expireDate`}\n                    control={control}\n                    render={({ value, name }) => (\n                      <DatePicker\n                        selected={\n                          new Date(getValues(`documents.${index}.expireDate`))\n                        }\n                        className=\"form-control customDateHeight\"\n                        onChange={(newValue) => {\n                          setValue(`documents.${index}.expireDate`, newValue);\n                          if (documents[index]) {\n                            let temp = [...documents];\n                            temp[index].expireDate = newValue;\n                            setDocuments(temp);\n                          } else {\n                            let temp = [...documents];\n                            temp[index] = {\n                              documentType: getValues(\n                                `documents.${index}.fieldName`\n                              ),\n                              file: getValues(`documents.${index}.file`),\n                              issueDate: getValues(\n                                `documents.${index}.IssueDate`\n                              ),\n                              expireDate: newValue,\n                            };\n                          }\n                        }}\n                      />\n                    )}\n                  />\n                  {!getValues(`documents.${index}.expireDate`) && (\n                    <Error errorName={errors?.documents?.[index]?.expireDate} />\n                  )}\n                </div>\n              </div>\n            </>\n          );\n        })}\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <Button\n            type=\"submit\"\n            disabled={isFormSubmitting || loading}\n            onClick={handleSubmit(onSubmit)}\n          >\n            {\" \"}\n            {t(\"submit\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Document;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport Profile from \"../components/Forms/Profile\";\nimport AdditionalInfo from \"../components/Forms/AdditionalInfo\";\nimport Document from \"../components/Forms/Document\";\nimport {\n  driverProfileSchema,\n  driverInfoSchema,\n  driverDocumentSchema,\n} from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport { createDriver, getDriverById, updateDriver } from \"../api\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport Loader from \"@/components/Loader\";\n\nconst CreateDriver = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [t(\"profile\"), t(\"additionalInfo\"), t(\"document\")];\n  const component = [Profile, AdditionalInfo, Document];\n  const totalTabs = tabHeading.length;\n  const { id: driverId } = useParams();\n  const queryClient = useQueryClient();\n\n  const {\n    data: driverData,\n    isError,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"driver\", driverId],\n    queryFn: () => getDriverById(driverId),\n    enabled: !!driverId,\n    staleTime: Infinity,\n  });\n\n  const parsedDriverData = useMemo(() => {\n    return {\n      ...driverData,\n      businessGroupId: driverData?.businessGroupId?._id,\n      companyId: driverData?.companyId?._id,\n      branchId: driverData?.branchId?._id,\n    };\n  }, [driverData]);\n\n  useEffect(() => {\n    if (isError && !!driverId) {\n      notifyError(\"Not able to fetch driver data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && driverId]);\n\n  const validationSchema = useCallback((index) => {\n    switch (index) {\n      case 0:\n        return driverProfileSchema;\n      case 1:\n        return driverInfoSchema;\n      case 2:\n        return driverDocumentSchema;\n    }\n  }, []);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n    watch,\n  } = useForm({\n    resolver: yupResolver(validationSchema(activeIndex)),\n    values: parsedDriverData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n  const { mutate: createDriverMutation, isPending: createPending } =\n    useMutation({\n      mutationFn: createDriver,\n      onSuccess: () => {\n        notifySuccess(\"New Driver Created\");\n        queryClient.invalidateQueries([\"drivers\"]);\n        navigate(\"/driver\");\n      },\n      onError,\n    });\n  const { mutate: editDriverMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => updateDriver(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Driver Updated Successfully\");\n      queryClient.invalidateQueries([\"drivers\"]);\n      navigate(\"/driver\");\n    },\n    onError,\n  });\n\n  const validateAllFields = async (data) => {\n    for (let i = 0; i < totalTabs; i++) {\n      const schema = validationSchema(i);\n      try {\n        await schema.validate(data);\n      } catch (err) {\n        notifyError(\"Please check all the fields are filled\");\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const onSubmitHanlder = async (data) => {\n    if (activeIndex === totalTabs - 1) {\n      const isValid = validateAllFields(data);\n      if (!isValid) return;\n\n      if (driverId) {\n        editDriverMutation({\n          id: driverId,\n          data,\n        });\n      } else {\n        createDriverMutation(data);\n      }\n    } else {\n      setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"driver\")}\n        pageTitle={driverId ? t(\"edit\") : t(\"create\")}\n        parentTitle={t(\"driver\")}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmitHanlder)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            handleSubmit={handleSubmit}\n                            onSubmit={onSubmitHanlder}\n                            isFormSubmitting={editPending || createPending}\n                            watch={watch}\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CreateDriver;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n"],"names":["_ref","countryCode","customStyle","setValue","id","dValues","Comptype","t","useTranslation","timezones","setTimezones","useState","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","label","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","_jsxs","className","children","htmlFor","_jsx","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","register","errors","getValues","locationData","showCity","showtimeZone","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","countriesList","setCountriesList","stateList","setStateList","cityList","setCityList","setCountryCode","countryId","setCountryId","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","stateObj","getStateName","loadCities","_locationData$country","isoAlpha3","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$country5","_locationData$country6","_locationData$locatio","_locationData$locatio6","isoName","isoAlpha2","selectedCountryId","isoToCountryId","_locationData$locatio2","_locationData$locatio3","_locationData$locatio4","_locationData$locatio7","_locationData$locatio8","_locationData$locatio9","location","principalSubdivision","GetState","_locationData$locatio5","isoCode","iso3","async","stateId","cities","GetCity","error","selectedIsoCode","selectedCountryObj","iso2","name","endsWith","replace","stateOptions","cityOptions","_Fragment","Error","errorName","selectedStateName","selectedStateObj","stateName","isDisabled","selectedCityName","CustomInput","type","placeholder","defaultValue","TimeZoneSelector","handleSubmit","onSubmit","isFormSubmitting","watch","selectStateName","setSelectStateName","countryid","setCountryid","isStateDisabled","setIsStateDisabled","company","setCompany","branch","setBranch","locationError","useUserLocation","useParams","style","width","margin","Controller","rules","required","render","_ref2","field","ref","GroupDropdown","newValue","_ref3","CompanyDropdown","groupId","_ref4","BranchDropdown","branchId","firstName","lastName","employeeNumber","LocationSelector","min","onInput","e","temp","max","target","zipCode","street1","contact1","contact2","display","justifyContent","Button","onClick","disabled","ageError","setAgeError","handleChange","minDate","Date","setFullYear","getFullYear","maxDate","handleDateOfBirthChange","date","age","dateOfBirth","today","dayjs","birthDate","diff","calculateAge","DatePicker","selected","showYearDropdown","scrollableYearDropdown","popperClassName","yearDropdownItemNumber","placeholderText","drivingExperience","marginTop","checked","marginBottom","marginRight","licenseNumber","_ref5","licenseToDriveOptions","licenseToDrive","_ref6","_ref7","_ref8","_ref9","fields","append","useFieldArray","loading","setLoading","documents","setDocuments","driverDocumentOptions","documentType","file","issueDate","expireDate","item","index","_errors$documents","_errors$documents$ind","_getValues3","_errors$documents2","_errors$documents2$in","_errors$documents3","_errors$documents3$in","_errors$documents4","_errors$documents4$in","_getValues","_getValues2","FileUploader","getValue","link","CreateDriver","navigate","useNavigate","activeIndex","setActiveIndex","tabHeading","component","Profile","AdditionalInfo","Document","totalTabs","driverId","queryClient","useQueryClient","data","driverData","isError","isLoading","useQuery","queryKey","queryFn","getDriverById","enabled","staleTime","Infinity","parsedDriverData","useMemo","_driverData$businessG","_driverData$companyId","_driverData$branchId","_id","notifyError","validationSchema","useCallback","driverProfileSchema","driverInfoSchema","driverDocumentSchema","formState","useForm","resolver","yupResolver","values","onError","err","getApiErrorMessage","mutate","createDriverMutation","isPending","createPending","useMutation","mutationFn","createDriver","onSuccess","notifySuccess","invalidateQueries","editDriverMutation","editPending","updateDriver","onSubmitHanlder","isValid","i","schema","validate","validateAllFields","prevIndex","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","Item","Link","eventKey","active","Content","Loader","height","Component","Pane","lat","setLat","lng","setLng","setError","setLocation","setIsLoading","API_KEY","process","response","axios","get","latitude","longitude","message","getLocation"],"sourceRoot":""}