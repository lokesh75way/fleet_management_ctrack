{"version":3,"file":"static/js/1849.13f61ade.chunk.js","mappings":"6OAWA,MA+JA,EA/J4BA,IAYrB,IAZsB,UAC3BC,EAAS,UACTC,EAAS,QACTC,EAAO,IACPC,EAAG,SACHC,EAAQ,MACRC,EAAK,aACLC,EAAY,aACZC,EAAY,WACZC,EAAU,QACVC,EAAO,KACPC,GACDX,EACC,MAAOY,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASR,IAC/C,KAAES,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,MACpB,IAAEC,IAAQC,EAAAA,EAAAA,MACV,SAAEC,IAAaC,EAAAA,EAAAA,OAEf,KAAEC,EAAI,cAAEC,EAAa,YAAEC,EAAW,WAAEC,EAAU,mBAAEC,IACpDC,EAAAA,EAAAA,GAAiB,CACfC,SAAU,CAAC,WAAY3B,EAAWC,EAAWC,GAC7C0B,QAASC,IAAoB,IAAnB,UAAEC,GAAWD,EAErB,OADAd,EAAQe,IACDC,EAAAA,EAAAA,IAAeD,EAAW,GAAI,CACnC9B,UAAWgC,MAAMC,QAAQjC,GAAaA,EAAUkC,KAAK,KAAOlC,EAC5DC,YACAC,WACA,EAEJiC,iBAAkB,EAClBC,iBAAkBA,CAACC,EAAUC,KAAK,IAAAC,EAAA,OACnB,QAAbA,EAAAF,EAAShB,YAAI,IAAAkB,GAAbA,EAAeC,OAAS1B,EAAO,EAAI,IAAI,EACzC2B,QAASxB,EAAI,UAAW,QACxByB,UAAWC,OAeT,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,CAC3BlB,SAAU,CAAC,UAAWrB,GACtBsB,QAASA,IAdakB,WACtB,IAAIC,EAAaC,EACjB,MAAMC,EAAS,GACVjB,MAAMC,QAAQe,KAAMD,EAAa,CAACC,IACvC,IAAK,IAAIE,KAAMH,EAAY,CACzB,MAAM1B,QAAa8B,EAAAA,EAAAA,IAAeD,GAClCD,EAAOG,KAAK/B,EACd,CAEA,OAAO4B,CAAM,EAKEI,CAAgB/C,GAC/BmC,SAAS,EACTC,UAAWC,MAGPW,GAAUC,EAAAA,EAAAA,UAAQ,KACtB,IAAIC,EAAW,GASf,OARI,OAAJnC,QAAI,IAAJA,GAAAA,EAAMiB,MAAMmB,SAASC,IACnBA,EAASrC,KAAKoC,SAASE,IACrBH,EAASJ,KAAK,CACZQ,MAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,YACbxD,MAAW,OAAJsD,QAAI,IAAJA,OAAI,EAAJA,EAAMG,KACb,GACF,IAEGN,CAAQ,GACd,CAACnC,KAEJ0C,EAAAA,EAAAA,YAAU,KACJ1D,GAASA,EAAMmC,OAAQ5B,EAAkBP,GACxCO,OAAkBoD,EAAU,GAChC,CAACC,KAAKC,UAAU7D,MAEnB0D,EAAAA,EAAAA,YAAU,KACgBjB,WACtB,GAAIxC,IAAiBD,EACnB,GAAI2B,MAAMC,QAAQ3B,GAAe,CAC/B,IAAKA,EAAakC,OAAQ,OAC1B,MAAM2B,EAAWb,EAAQc,QAAQC,GAC/B/D,EAAagE,MAAMC,GAAQF,EAAOhE,QAAUkE,MAE9C,GAAIJ,EAAS3B,SAAWlC,EAAakC,OAGnC,OAFA5B,EAAkBuD,QAClB/D,EAAS+D,GAGX,IACE,MAAQ9C,KAAMmD,SAAsB5B,IACpC,GAAI4B,EAAa,CACf,MAAMC,EAAuB,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaE,KAAKC,IAAE,CACpCf,MAAOe,EAAGd,YACVxD,MAAOsE,EAAGb,QAEZlD,EAAkB6D,GAClBrE,EAASqE,EACX,CACF,CAAE,MAAOG,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,CACF,KAAO,CACL,MAAMT,EAAWb,EAAQwB,MACtBT,GAAW/D,IAAiB+D,EAAOhE,QAEtC,GAAI8D,EAGF,OAFAvD,EAAkBuD,QAClB/D,EAAS+D,GAGX,IACE,MAAQ9C,KAAMmD,SAAsB5B,IACpC,GAAI4B,GAAeA,EAAYhC,OAAQ,CACrC,MAAMiC,EAAY,CAChBb,MAAkB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAc,GAAGX,YACxBxD,MAAkB,OAAXmE,QAAW,IAAXA,OAAW,EAAXA,EAAc,GAAGV,KAE1BlD,EAAkB6D,GAClBrE,EAASqE,EACX,CACF,CAAE,MAAOG,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,CACF,MAEAhE,EAAkBP,EACpB,EAEF0E,EAAiB,GAChB,CAACd,KAAKC,UAAU5D,GAAea,EAAU8C,KAAKC,UAAU7D,KAW3D,OACE2E,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACL3B,QAASA,EACTjD,MAAOM,EACPP,SAAUA,EACV8E,OAAQ3E,EACRJ,IAAKA,EACLO,KAAMA,EACNyE,aAAaC,EAAAA,EAAAA,GAAE,kBACf5E,WAAYA,IAAeS,EAAI,UAAW,QAC1CoE,aAAW,EACXC,qBApBqBxC,UAErByC,EAAMC,OAAOC,aAAeF,EAAMC,OAAOE,YACzCH,EAAMC,OAAOG,eACAnE,GAAcD,IAAgBE,GAC3CH,GACF,EAeEsE,0BAA0B,EAC1BC,UAAWrE,EACXsE,WAAY,CACVC,iBAAkBC,EAAAA,GAEpBvF,QAASA,GACT,C,mFCpKN,MAsCA,EAtCuBV,IAOhB,IAPiB,SACtBK,EAAQ,MACRC,EAAK,aACLE,EAAY,IACZJ,EAAG,WACHK,EAAU,KACVE,GACDX,EACC,MAAOkG,EAAiBC,IAAsBrF,EAAAA,EAAAA,UAAS,KAChDF,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASR,GAkBrD,OAjBA0D,EAAAA,EAAAA,YAAU,KACajB,WACnB,MACMqD,SADiBC,EAAAA,EAAAA,OACQ/E,KAAKqD,KAAKf,IAAI,CAC3CC,MAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,UACbhG,MAAW,OAAJsD,QAAI,IAAJA,OAAI,EAAJA,EAAMG,QAGfoC,EAAmBC,EAAc,EAEnCG,EAAc,GACb,KACHvC,EAAAA,EAAAA,YAAU,KACR,MAAMI,EAAW8B,EAAgBnB,MAAMT,GAAWA,EAAOhE,QAAUA,IACnEO,EAAkBuD,EAAS,GAC1B,CAAC9D,EAAO4F,KAGTjB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACL3B,QAAS2C,EACT5F,MAAOM,EACPP,SAAWmG,GAAanG,EAASmG,GACjCrB,OAAQ3E,EACRJ,IAAKA,EACLO,KAAMA,GACN,C,+RCpBN,MAiXA,EAjXaX,IAYN,IAZO,MACZyG,EAAK,SACLC,EAAQ,YACRC,EAAW,SACXC,EAAQ,SACRC,EAAQ,UACRC,EAAS,aACTC,EAAY,SACZC,EAAQ,OACRC,EAAM,QACNC,EAAO,YACPC,GACDnH,EACC,MAAM,EAAEqF,IAAM+B,EAAAA,EAAAA,OACPC,EAAYC,IAAiBxG,EAAAA,EAAAA,WAAS,IACtCyG,EAAWC,IAAgB1G,EAAAA,EAAAA,aAC3B2G,EAASC,IAAc5G,EAAAA,EAAAA,UAAS,IACjC6G,GAAWC,EAAAA,EAAAA,MACXC,GAAWxG,EAAAA,EAAAA,OACVyG,EAASC,IAAcjH,EAAAA,EAAAA,aACvBkH,EAAQC,IAAanH,EAAAA,EAAAA,aACrBoH,EAASC,IAAcrH,EAAAA,EAAAA,YAExBN,EAAe,CACnB0G,QAAUkB,IAAI,IACTA,EACHC,QAAS,gBAIP,GAAElF,IAAOmF,EAAAA,EAAAA,KAwBf,OAvBAtE,EAAAA,EAAAA,YAAU,KACR,GAAIb,EAAI,CACN,MAAM7B,EAAOuG,EAASU,MAAM,GAC5Bb,EAAWpG,EACb,IACC,CAAC6B,KAEJa,EAAAA,EAAAA,YAAU,KACJyD,GAAWtE,GAEb0D,EAAS,gBAAwB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASe,eACnC3B,EAAS,gBAAwB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASgB,eACnC5B,EAAS,WAAmB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASiB,UAC9B7B,EAAS,kBAA0B,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASkB,iBACrC9B,EAAS,cAAqB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASmB,aAAcC,EAAAA,GAAkB,GAAGvI,OACnEuG,EAAS,SAAiB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASqB,UAE5BjC,EAAS,YAAa,IAAIkC,MAC1BlC,EAAS,YAAa,IAAIkC,MAC1BlC,EAAS,aAAcgC,EAAAA,GAAkB,GAAGvI,OAC9C,GACC,CAACmH,EAAStE,KAGX8B,EAAAA,EAAAA,KAAA+D,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,QAASL,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYF,SAAA,CAC1B5D,EAAE,iBAAiB,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAErDhE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,kBACLuG,QAASA,EACTsC,MAAO,CAAEC,UAAU,GACnBC,OAAQ5H,IAAA,IAAG6H,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAO0B,EAAA,OAChDmD,EAAAA,EAAAA,KAAC2E,EAAAA,EAAa,CACZvJ,SAAWmG,IACLM,EAAU,oBAAsBN,EAASlG,QAC3CuG,EAAS,kBAAmBL,EAASlG,OACrCuG,EAAS,oBAAqBL,EAAS3C,OACvCgD,EAAS,YAAa,IACtBA,EAAS,WAAY,IACrBkB,EAAW,MACXE,EAAU,MACZ,EAEF1H,aAAcD,EACdE,aAAcA,EACdG,KAAMA,GACN,KAGNsE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAO8C,sBAE3Bb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYF,SAAA,CAC1B5D,EAAE,WAAW,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAE/ChE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,YACLuG,QAASA,EACTsC,MAAO,CAAEC,UAAU,GACnBC,OAAQM,IAAA,IAAGL,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAO4J,EAAA,OAChD/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAe,CACd9J,QAAS2G,EAAU,mBACnBzG,SAAWmG,IACLM,EAAU,cAAgBN,EAASlG,QACrCuG,EAAS,YAAaL,EAASlG,OAC/BuG,EAAS,WAAY,IACrBkB,EAAWvB,GACXyB,EAAU,MACZ,EAEF1H,aAAcD,EACdA,MAAOwH,EACPtH,aAAcA,EACdG,KAAMA,GACN,KAGNsE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAO/G,gBAE3BgJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BhE,EAAAA,EAAAA,KAAA,SAAOkE,UAAU,aAAYF,SAAE5D,EAAE,aACjCJ,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,WACLuG,QAASA,EACTwC,OAAQQ,IAAA,IAAGP,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAO8J,EAAA,OAChDjF,EAAAA,EAAAA,KAACkF,EAAAA,EAAkB,CACjBjK,UAAW4G,EAAU,aACrB3G,QAAS2G,EAAU,mBACnBzG,SAAWmG,IACTK,EAAS,WAAoB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,OAC/B2H,EAAUzB,EAAS,EAErBjG,aAAcD,EACdA,MAAO0H,EACPxH,aAAcA,EACdC,YAAY,EACZE,KAAMA,GACN,QAIRuI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYF,SAAA,CAC1B5D,EAAE,gBACHJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAEhChE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,YACLuG,QAASA,EACTsC,MAAO,CAAEC,UAAU,GACnBC,OAAQU,IAAA,IAAGT,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAOgK,EAAA,OAChDnF,EAAAA,EAAAA,KAACoF,EAAAA,EAAmB,CAClBnK,UAAW4G,EAAU,aACrB3G,QAAS2G,EAAU,mBACnBzG,SAAWmG,IACTK,EAAS,YAAqB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUlG,OAChC6H,EAAW3B,EAAS,EAEtBjG,aAAcD,EACdA,MAAO4H,EACP1H,aAAcA,EACdC,YAAY,EACZE,KAAMA,GACN,QAIRuI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCC,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,2BAA2BnB,UAAU,aAAYF,SAAA,CAC7D5D,EAAE,aAAa,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAEjDhE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,YACLuG,QAASA,EACTwC,OAAQa,IAAA,IAAC,MAAEjK,EAAK,KAAEK,GAAM4J,EAAA,OACtBtF,EAAAA,EAAAA,KAACuF,IAAU,CACTpG,SAAU0C,EAAU,cAAgB,IAAIiC,KACxCI,UAAU,gCACV9I,SAAWmG,GAAaK,EAAS,YAAaL,IAC9C,QAIRvB,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAOwD,gBAE3BvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,2BAA2BnB,UAAU,aAAYF,SAAA,CAC7D5D,EAAE,iBAAiB,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAErDhE,EAAAA,EAAAA,KAACyF,EAAAA,EAAW,CACVC,KAAK,OACL/D,SAAUA,EACV/C,MAAM,iBACNlD,KAAK,gBACLyE,YAAY,MAEdH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAOuB,oBAE3BU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCC,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,2BAA2BnB,UAAU,aAAYF,SAAA,CAC7D5D,EAAE,aAAa,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAEjDhE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,YACLuG,QAASA,EACTwC,OAAQkB,IAAA,IAAC,MAAEtK,EAAK,KAAEK,GAAMiK,EAAA,OACtB3F,EAAAA,EAAAA,KAACuF,IAAU,CACTpG,SAAU0C,EAAU,cAAgB,IAAIiC,KACxCI,UAAU,gCACV9I,SAAWmG,GAAaK,EAAS,YAAaL,IAC9C,KAGNvB,EAAAA,EAAAA,KAAA,aAEFA,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAO4D,gBAE3B3B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,2BAA2BnB,UAAU,aAAYF,SAAA,CAC7D5D,EAAE,iBAAiB,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAErDhE,EAAAA,EAAAA,KAACyF,EAAAA,EAAW,CACVC,KAAK,OACL/D,SAAUA,EACV/C,MAAM,iBACNlD,KAAK,gBACLyE,YAAY,MAEdH,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAOwB,oBAE3BS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BhE,EAAAA,EAAAA,KAAA,SAAOqF,QAAQ,2BAA2BnB,UAAU,aAAYF,SAC7D5D,EAAE,eAELJ,EAAAA,EAAAA,KAACyF,EAAAA,EAAW,CACVC,KAAK,SACL/D,SAAUA,EACV/C,MAAM,WACNlD,KAAK,WACLyE,YAAY,SAGhB8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BhE,EAAAA,EAAAA,KAAA,SAAOqF,QAAQ,2BAA2BnB,UAAU,aAAYF,SAC7D5D,EAAE,sBAELJ,EAAAA,EAAAA,KAACyF,EAAAA,EAAW,CACVC,KAAK,SACL/D,SAAUA,EACV/C,MAAM,mBACNlD,KAAK,kBACLyE,YAAY,SAGhB8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOoB,QAAQ,2BAA2BnB,UAAU,aAAYF,SAAA,CAC7D5D,EAAE,UAAU,KAACJ,EAAAA,EAAAA,KAAA,QAAMkE,UAAU,cAAaF,SAAC,UAE9ChE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,SACLuG,QAASA,EACTsC,MAAO,CAAEC,UAAU,GACnBC,OAAQoB,IAAA,IAAGnB,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAO0K,EAAA,OAChD7F,EAAAA,EAAAA,KAAC8F,EAAAA,EAAc,CACb1K,SAAWmG,IACTK,EAAS,SAAUL,EAASlG,OAC5BuG,EAAS,aAAcL,EAAS3C,MAAM,EAExCvD,MAAOA,EACPE,aAAcA,EACdJ,IAAKA,EACLO,KAAMA,GACN,KAGNsE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CAACC,UAAW7C,EAAO6B,aAoC3BI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BhE,EAAAA,EAAAA,KAAA,SAAOkE,UAAU,aAAYF,SAAE5D,EAAE,iBACjCJ,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CACT5I,KAAK,aACLuG,QAASA,EACTwC,OAAQsB,IAAA,IAAGrB,OAAO,SAAEtJ,EAAQ,MAAEC,EAAK,KAAEK,EAAI,IAAEP,IAAO4K,EAAA,OAChD/F,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACL7E,SAAWmG,IACTK,EAAS,aAAcL,EAASlG,OAChCkH,EAAahB,EAASlG,OACtBD,EAASmG,EAASlG,MAAM,EAE1BiD,QAASsF,EAAAA,GACTzI,IAAKA,EACLO,KAAMA,EACNwE,OAAQ3E,EACRD,aAAcsI,EAAAA,GAAkB9D,MAC7BT,GAAWA,EAAOhE,QAAUwG,EAAU,gBAEzCxG,MAAOuI,EAAAA,GAAkB9D,MACtBT,GAAWA,EAAOhE,QAAUA,KAE/B,WAKV4I,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLC,MAAO,OACP4B,QAAS,OACTC,eAAgB,SAChB5B,OAAQ,UACRL,SAAA,EAEFhE,EAAAA,EAAAA,KAAA,UACE0F,KAAK,SACLQ,QAASA,KACPpE,EAAaC,EAAS,EAExBmC,UAAU,uBAAsBF,SAE/B5D,EAAE,aAELJ,EAAAA,EAAAA,KAACmG,EAAAA,GAAI,CACHC,GAAI,IACJF,QAASA,KACP7D,GAAc,GACdK,GAAU,EAAE,EAEdwB,UAAU,4BAA2BF,SAEpC5D,EAAE,mBAIR,E,gDChXP,MAwGA,EAxGyBiG,KACvB,MAAOC,EAAaC,IAAkB1K,EAAAA,EAAAA,UAAS,GACzC6G,GAAWC,EAAAA,EAAAA,OACX,EAAEvC,IAAM+B,EAAAA,EAAAA,MAERqE,EAAa,CAACpG,EAAE,SAChBqG,EAAY,CAACC,IAGb,SACJ/E,EAAQ,SACRC,EAAQ,UACRC,EAAS,aACTC,EAAY,YACZI,EACAyE,WAAW,OAAE3E,GAAQ,QACrBC,IARgBuE,EAAWhJ,QASzBoJ,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,QAGlB,GAAE7I,IAAOmF,EAAAA,EAAAA,KACPtB,EAAWjE,UACjB,GAAII,EACF,IAIE,aAHM8I,EAAAA,EAAAA,IAAW9I,EAAI7B,IACrB4K,EAAAA,EAAAA,GAAc,sBACdvE,EAAS,0BAEX,CAAE,MAAOwE,GACPrH,QAAQsH,IAAID,IACZE,EAAAA,EAAAA,GAAY,wBACd,MAEA,UACQC,EAAAA,EAAAA,IAAWhL,IACjB4K,EAAAA,EAAAA,GAAc,qBACdvE,EAAS,2BACT7C,QAAQsH,IAAI,cAAe9K,EAC7B,CAAE,MAAOuD,GACPC,QAAQsH,IAAI,QAASvH,IACrBwH,EAAAA,EAAAA,GAAY,wBACd,CACF,EAGF,OACEnD,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEhE,EAAAA,EAAAA,KAACsH,EAAAA,EAAa,CACZC,UAAWnH,EAAE,QACboH,UAAgBpH,EAALlC,EAAO,OAAY,UAC9BuJ,YAAarH,EAAE,mBAEjBJ,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,UAASF,UACtBhE,EAAAA,EAAAA,KAAC0H,EAAAA,GAAY,CAAA1D,UACXhE,EAAAA,EAAAA,KAAA,QAAM+B,SAAUD,EAAaC,GAAUiC,UACrChE,EAAAA,EAAAA,KAAA,OAAKkE,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,MAAC0D,EAAAA,EAAIC,UAAS,CAACC,iBAAkBrB,EAAW,GAAGsB,cAAc9D,SAAA,EAC3DhE,EAAAA,EAAAA,KAAC+H,EAAAA,EAAG,CAACC,GAAG,KAAK9D,UAAU,WAAUF,SAC9BwC,EAAW9G,KAAI,CAACrD,EAAM4L,KACrBjI,EAAAA,EAAAA,KAAC+H,EAAAA,EAAIG,KAAI,CAACF,GAAG,KAAIhE,UACfhE,EAAAA,EAAAA,KAAC+H,EAAAA,EAAI5B,KAAI,CACPhC,MAAO,CAAEf,QAAS,cAClB+E,SAAU9L,EAAKyL,cACfM,OAAQH,IAAM3B,EACdJ,QAASA,IAAMK,EAAe0B,GAAGjE,SAEhC3H,KAPkB4L,QAY3BjI,EAAAA,EAAAA,KAAC2H,EAAAA,EAAIU,QAAO,CAACnE,UAAU,OAAMF,SAC1BwC,EAAW9G,KAAI,CAACrD,EAAM4L,KACrB,MAAMK,EAAY7B,EAAUwB,GAC5B,OACEjI,EAAAA,EAAAA,KAAC2H,EAAAA,EAAIY,KAAI,CACPJ,SAAU9L,EAAKyL,cAEfM,OAAQH,IAAM3B,EAAYtC,UAE1BhE,EAAAA,EAAAA,KAACsI,EAAS,CACRjM,KAAMmK,EACNvE,QAASA,EACTL,SAAUA,EACVD,SAAUA,EACVE,UAAWA,EACXG,OAAQA,EACRF,aAAcA,EACdC,SAAUA,KAXPkG,EAaI,mBAS1B,C,+ECjHPO,E,SAAAA,KAEO,MAAMC,EAAW3K,iBAMlB,IAJJ4K,EAAMC,UAAAnL,OAAA,EAAAmL,UAAA,QAAA3J,EACN4J,EAAQD,UAAAnL,OAAA,EAAAmL,UAAA,QAAA3J,EACR6J,EAASF,UAAAnL,OAAA,EAAAmL,UAAA,QAAA3J,EACT8J,EAAOH,UAAAnL,OAAA,EAAAmL,UAAA,QAAA3J,EAEH+J,EAAG,eAAAC,OANDL,UAAAnL,OAAA,QAAAwB,IAAA2J,UAAA,GAAAA,UAAA,GAAG,EAMsB,aAE7BI,GADEH,GAAYC,GAAaC,EACxB,aAAAE,OAAiBJ,EAAQ,WAAAI,OAAUH,EAAS,SAAAG,OAAQF,GAEpD,WAAAE,OAAeN,GAEpB,MAAMO,QAAiBC,EAAAA,EAAMC,IAAIJ,GACjC,MAAO,CACL1M,KAAM4M,EAAS5M,KAAKA,KAAKA,KACzB+M,YAAaH,EAAS5M,KAAKA,KAAKgN,MAEpC,EAEahC,EAAavJ,SACjBoL,EAAAA,EAAMI,KAAK,SAAUC,GAGjBvC,EAAalJ,MAAOI,EAAIqL,IAC5BL,EAAAA,EAAMM,MAAM,UAADR,OAAW9K,GAAMqL,GAGxBE,EAAa3L,SACjBoL,EAAAA,EAAMQ,OAAO,UAADV,OAAW9K,G","sources":["features/vehicle/components/DropdownList.jsx","jsx/components/DriverDropdown/index.jsx","jsx/pages/ClassifyTrip/Trip.js","jsx/pages/ClassifyTrip/ClassifyTripForm.js","services/api/ClassifyTripServices.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport Select from \"react-select\";\nimport { t } from \"i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { useInfiniteQuery, useQuery } from \"@tanstack/react-query\";\n\nimport usePagination from \"@/hooks/usePagination\";\nimport { getAllVehicles, getVehicleById } from \"../api\";\nimport usePermissions from \"@/hooks/usePermissions\";\nimport Spinner from \"@/components/Loader/Spinner\";\n\nconst VehicleDropdownList = ({\n  branchIds,\n  companyId,\n  groupId,\n  ref,\n  onChange,\n  value,\n  defaultValue,\n  customStyles,\n  isDisabled,\n  isMulti,\n  name,\n}) => {\n  const [selectedOption, setSelectedOption] = useState(value);\n  const { page, setPage } = usePagination();\n  const { can } = usePermissions();\n  const { pathname } = useLocation();\n\n  const { data, fetchNextPage, hasNextPage, isFetching, isFetchingNextPage } =\n    useInfiniteQuery({\n      queryKey: [\"vehicles\", branchIds, companyId, groupId],\n      queryFn: ({ pageParam }) => {\n        setPage(pageParam);\n        return getAllVehicles(pageParam, 10, {\n          branchIds: Array.isArray(branchIds) ? branchIds.join(\",\") : branchIds,\n          companyId,\n          groupId,\n        });\n      },\n      initialPageParam: 1,\n      getNextPageParam: (lastPage, pages) =>\n        lastPage.data?.length ? page + 1 : null,\n      enabled: can(\"vehicle\", \"view\"),\n      staleTime: Infinity,\n    });\n\n  const getVehiclesById = async (ids) => {\n    let vehicleIds = ids;\n    const result = [];\n    if (!Array.isArray(ids)) vehicleIds = [ids];\n    for (let id of vehicleIds) {\n      const data = await getVehicleById(id);\n      result.push(data);\n    }\n\n    return result;\n  };\n\n  const { refetch } = useQuery({\n    queryKey: [\"vehicle\", defaultValue],\n    queryFn: () => getVehiclesById(defaultValue),\n    enabled: false,\n    staleTime: Infinity,\n  });\n\n  const options = useMemo(() => {\n    let flatData = [];\n    data?.pages.forEach((pageData) => {\n      pageData.data.forEach((item) => {\n        flatData.push({\n          label: item?.vehicleName,\n          value: item?._id,\n        });\n      });\n    });\n    return flatData;\n  }, [data]);\n\n  useEffect(() => {\n    if (value && value.length) setSelectedOption(value);\n    else setSelectedOption(undefined);\n  }, [JSON.stringify(value)]);\n\n  useEffect(() => {\n    const initializeValue = async () => {\n      if (defaultValue && !value) {\n        if (Array.isArray(defaultValue)) {\n          if (!defaultValue.length) return;\n          const selected = options.filter((option) =>\n            defaultValue.some((val) => option.value === val)\n          );\n          if (selected.length === defaultValue.length) {\n            setSelectedOption(selected);\n            onChange(selected);\n            return;\n          }\n          try {\n            const { data: vehicleData } = await refetch();\n            if (vehicleData) {\n              const newOption = vehicleData?.map((el) => ({\n                label: el.vehicleName,\n                value: el._id,\n              }));\n              setSelectedOption(newOption);\n              onChange(newOption);\n            }\n          } catch (error) {\n            console.error(\"Error fetching vehicle details:\", error);\n          }\n        } else {\n          const selected = options.find(\n            (option) => defaultValue === option.value\n          );\n          if (selected) {\n            setSelectedOption(selected);\n            onChange(selected);\n            return;\n          }\n          try {\n            const { data: vehicleData } = await refetch();\n            if (vehicleData && vehicleData.length) {\n              const newOption = {\n                label: vehicleData?.[0].vehicleName,\n                value: vehicleData?.[0]._id,\n              };\n              setSelectedOption(newOption);\n              onChange(newOption);\n            }\n          } catch (error) {\n            console.error(\"Error fetching vehicle details:\", error);\n          }\n        }\n      } else {\n        setSelectedOption(value);\n      }\n    };\n    initializeValue();\n  }, [JSON.stringify(defaultValue), pathname, JSON.stringify(value)]);\n\n  const handleMenuScroll = async (event) => {\n    const bottom =\n      event.target.scrollHeight - event.target.scrollTop ===\n      event.target.clientHeight;\n    if (bottom && !isFetching && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage();\n    }\n  };\n\n  return (\n    <Select\n      options={options}\n      value={selectedOption}\n      onChange={onChange}\n      styles={customStyles}\n      ref={ref}\n      name={name}\n      placeholder={t(\"selectVehicles\")}\n      isDisabled={isDisabled || !can(\"vehicle\", \"view\")}\n      isClearable\n      onMenuScrollToBottom={handleMenuScroll}\n      menuShouldScrollIntoView={false}\n      isLoading={isFetching}\n      components={{\n        LoadingIndicator: Spinner,\n      }}\n      isMulti={isMulti}\n    />\n  );\n};\nexport default VehicleDropdownList;\n","import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { getAllDrivers } from \"../../../features/driver/api\";\nconst DriverDropdown = ({\n  onChange,\n  value,\n  customStyles,\n  ref,\n  isDisabled,\n  name,\n}) => {\n  const [dropDownOptions, setdropDownOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(value);\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      const response = await getAllDrivers();\n      const driverOptions = response.data.map((item) => ({\n        label: item?.firstName,\n        value: item?._id,\n      }));\n\n      setdropDownOptions(driverOptions);\n    };\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    const selected = dropDownOptions.find((option) => option.value === value);\n    setSelectedOption(selected);\n  }, [value, dropDownOptions]);\n\n  return (\n    <Select\n      options={dropDownOptions}\n      value={selectedOption}\n      onChange={(newValue) => onChange(newValue)}\n      styles={customStyles}\n      ref={ref}\n      name={name}\n    />\n  );\n};\nexport default DriverDropdown;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { tripStatusOptions } from \"@/constants/options\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nimport Error from \"../../../components/Error/Error\";\nimport CustomInput from \"../../../components/Input/CustomInput\";\nimport DriverDropdown from \"../../components/DriverDropdown\";\nimport { useTranslation } from \"react-i18next\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport BranchDropdownList from \"@/features/branch/components/DropDownList\";\nimport VehicleDropdownList from \"@/features/vehicle/components/DropdownList\";\n\nconst Trip = ({\n  Title,\n  editData,\n  setEditData,\n  register,\n  setValue,\n  getValues,\n  handleSubmit,\n  onSubmit,\n  errors,\n  control,\n  clearErrors,\n}) => {\n  const { t } = useTranslation();\n  const [addEmploye, setAddEmploye] = useState(false);\n  const [tempValue, setTempValue] = useState();\n  const [dValues, setDvalues] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [company, setCompany] = useState();\n  const [branch, setBranch] = useState();\n  const [vehicle, setVehicle] = useState();\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n  const { id } = useParams();\n  useEffect(() => {\n    if (id) {\n      const data = location.state[0];\n      setDvalues(data);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      //   setValue(\"startTime\", dValues?.startTime);\n      setValue(\"startLocation\", dValues?.startLocation);\n      setValue(\"reachLocation\", dValues?.reachLocation);\n      setValue(\"distance\", dValues?.distance);\n      setValue(\"fuelConsumption\", dValues?.fuelConsumption);\n      setValue(\"tripStatus\", dValues?.tripStatus || tripStatusOptions[0].value);\n      setValue(\"driver\", dValues?.driver);\n    } else {\n      setValue(\"startTime\", new Date());\n      setValue(\"reachTime\", new Date());\n      setValue(\"tripStatus\", tripStatusOptions[0].value);\n    }\n  }, [dValues, id]);\n\n  return (\n    <>\n      <div className=\"p-4\">\n        <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n              {t(\"businessGroup\")} <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"businessGroupId\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <GroupDropdown\n                  onChange={(newValue) => {\n                    if (getValues(\"businessGroupId\") != newValue.value) {\n                      setValue(\"businessGroupId\", newValue.value);\n                      setValue(\"businessGroupName\", newValue.label);\n                      setValue(\"companyId\", \"\");\n                      setValue(\"branchId\", \"\");\n                      setCompany(null);\n                      setBranch(null);\n                    }\n                  }}\n                  defaultValue={value}\n                  customStyles={customStyles}\n                  name={name}\n                />\n              )}\n            />\n            <Error errorName={errors.businessGroupId} />\n          </div>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n              {t(\"company\")} <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"companyId\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <CompanyDropdown\n                  groupId={getValues(\"businessGroupId\")}\n                  onChange={(newValue) => {\n                    if (getValues(\"companyId\") != newValue.value) {\n                      setValue(\"companyId\", newValue.value);\n                      setValue(\"branchId\", \"\");\n                      setCompany(newValue);\n                      setBranch(null);\n                    }\n                  }}\n                  defaultValue={value}\n                  value={company}\n                  customStyles={customStyles}\n                  name={name}\n                />\n              )}\n            />\n            <Error errorName={errors.companyId} />\n          </div>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">{t(\"branch\")}</label>\n            <Controller\n              name=\"branchId\"\n              control={control}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <BranchDropdownList\n                  companyId={getValues(\"companyId\")}\n                  groupId={getValues(\"businessGroupId\")}\n                  onChange={(newValue) => {\n                    setValue(\"branchId\", newValue?.value);\n                    setBranch(newValue);\n                  }}\n                  defaultValue={value}\n                  value={branch}\n                  customStyles={customStyles}\n                  isDisabled={false}\n                  name={name}\n                />\n              )}\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n              {t(\"vehicleName\")}\n              <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"vehicleId\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <VehicleDropdownList\n                  companyId={getValues(\"companyId\")}\n                  groupId={getValues(\"businessGroupId\")}\n                  onChange={(newValue) => {\n                    setValue(\"vehicleId\", newValue?.value);\n                    setVehicle(newValue);\n                  }}\n                  defaultValue={value}\n                  value={vehicle}\n                  customStyles={customStyles}\n                  isDisabled={false}\n                  name={name}\n                />\n              )}\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n                {t(\"startTime\")} <span className=\"text-danger\">*</span>\n              </label>\n              <Controller\n                name=\"startTime\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"startTime\") || new Date()}\n                    className=\"form-control customDateHeight\"\n                    onChange={(newValue) => setValue(\"startTime\", newValue)}\n                  />\n                )}\n              />\n            </div>\n            <Error errorName={errors.startTime} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              {t(\"startLocation\")} <span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"Start Location\"\n              name=\"startLocation\"\n              placeholder=\"\"\n            />\n            <br />\n            <Error errorName={errors.startLocation} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n                {t(\"reachTime\")} <span className=\"text-danger\">*</span>\n              </label>\n              <Controller\n                name=\"reachTime\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"reachTime\") || new Date()}\n                    className=\"form-control customDateHeight\"\n                    onChange={(newValue) => setValue(\"reachTime\", newValue)}\n                  />\n                )}\n              />\n              <br />\n            </div>\n            <Error errorName={errors.reachTime} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              {t(\"reachLocation\")} <span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"Reach Location\"\n              name=\"reachLocation\"\n              placeholder=\"\"\n            />\n            <Error errorName={errors.reachLocation} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              {t(\"distance\")}\n            </label>\n            <CustomInput\n              type=\"number\"\n              register={register}\n              label=\"Distance\"\n              name=\"distance\"\n              placeholder=\"\"\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              {t(\"fuelConsumption\")}\n            </label>\n            <CustomInput\n              type=\"number\"\n              register={register}\n              label=\"Fuel Consumption\"\n              name=\"fuelConsumption\"\n              placeholder=\"\"\n            />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n              {t(\"driver\")} <span className=\"text-danger\">*</span>\n            </label>\n            <Controller\n              name=\"driver\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <DriverDropdown\n                  onChange={(newValue) => {\n                    setValue(\"driver\", newValue.value);\n                    setValue(\"driverName\", newValue.label);\n                  }}\n                  value={value}\n                  customStyles={customStyles}\n                  ref={ref}\n                  name={name}\n                />\n              )}\n            />\n            <Error errorName={errors.driver} />\n          </div>\n          {/* <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Last Modified By\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Last Modified By\"\n                        name=\"lastModifiedBy\"\n                        placeholder=\"\"\n                      />\n                    </div> */}\n          {/* <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n                      <label className=\"form-label\">Last Modified Date</label>\n                      <Controller\n                        name=\"lastModifiedDate\"\n                        control={control}\n                        render={({ value, name }) => (\n                          <DatePicker\n                            selected={\n                              getValues(\"lastModifiedDate\") || new Date()\n                            }\n                            className=\"form-control customDateHeight\"\n                            onChange={(newValue) => {\n                              setTempValue(newValue.value);\n                              setValue(\"lastModifiedDate\", newValue);\n                            }}\n                          />\n                        )}\n                      />\n                    </div> */}\n          <div className=\"col-xl-6 mb-3\">\n            <label className=\"form-label\">{t(\"tripStatus\")}</label>\n            <Controller\n              name=\"tripStatus\"\n              control={control}\n              render={({ field: { onChange, value, name, ref } }) => (\n                <Select\n                  onChange={(newValue) => {\n                    setValue(\"tripStatus\", newValue.value); \n                    setTempValue(newValue.value);\n                    onChange(newValue.value);\n                  }}\n                  options={tripStatusOptions}\n                  ref={ref}\n                  name={name}\n                  styles={customStyles}\n                  defaultValue={tripStatusOptions.find(\n                    (option) => option.value === getValues(\"tripStatus\")\n                  )}\n                  value={tripStatusOptions.find(\n                    (option) => option.value === value\n                  )}\n                />\n              )}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <button\n            type=\"submit\"\n            onClick={() => {\n              handleSubmit(onSubmit);\n            }}\n            className=\"btn btn-primary me-1\"\n          >\n            {t(\"submit\")}\n          </button>\n          <Link\n            to={\"#\"}\n            onClick={() => {\n              setAddEmploye(false);\n              navigate(-1);\n            }}\n            className=\"btn btn-danger light ms-1\"\n          >\n            {t(\"cancel\")}\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Trip;\n","import React, { useState } from \"react\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Trip from \"./Trip\";\nimport { classifyTripsSchema } from \"../../../utils/yup\";\nimport {\n  createTrip,\n  updateTrip,\n} from \"../../../services/api/ClassifyTripServices\";\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport MainPagetitle from \"../../../components/MainPagetitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ClassifyTripForm = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const tabHeading = [t(\"trip\")]; // Change the tab heading to \"Trip\"\n  const component = [Trip]; // Use the Trip component for all tabs\n\n  const totalTabs = tabHeading.length;\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n\n  const { id } = useParams();\n    const onSubmit = async (data) => {\n    if (id) {\n      try {\n        await updateTrip(id, data);\n        notifySuccess(\"Trip Updated!\");\n        navigate(\"/settings/classifyTrips\");\n        return;\n      } catch (e) {\n        console.log(e);\n        notifyError(\"Some error occured !!\");\n      }\n    } else {\n      try {\n        await createTrip(data);\n        notifySuccess(\"New Trip Created!\");\n        navigate(\"/settings/classifyTrips\");\n        console.log(\"Submit botn\", data);\n      } catch (error) {\n        console.log(\"Error\", error);\n        notifyError(\"Some error occured !!\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"trip\")}\n        pageTitle={id ? t(\"edit\") : t(\"create\")}\n        parentTitle={t(\"classifyTrip\")}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\n\nexport default ClassifyTripForm;\n","import axios from \"axios\";\nimport initAxios from \"../api\";\ninitAxios();\n\nexport const getTrips = async (\n  pageNo = 1,\n  status,\n  driverId,\n  startDate,\n  endDate\n) => {\n  let url = `/trips?page=${pageNo}&limit=10`;\n  if (driverId && startDate && endDate) {\n    url += `&driverId=${driverId}&start=${startDate}&end=${endDate}`;\n  } else {\n    url += `&status=${status}`;\n  }\n  const response = await axios.get(url);\n  return {\n    data: response.data.data.data,\n    totalLength: response.data.data.count,\n  };\n};\n\nexport const createTrip = async (body) => {\n  return axios.post(\"/trips\", body);\n};\n\nexport const updateTrip = async (id, body) => {\n  return axios.patch(`/trips/${id}`, body);\n};\n\nexport const deleteTrip = async (id) => {\n  return axios.delete(`/trips/${id}`);\n};\n"],"names":["_ref","branchIds","companyId","groupId","ref","onChange","value","defaultValue","customStyles","isDisabled","isMulti","name","selectedOption","setSelectedOption","useState","page","setPage","usePagination","can","usePermissions","pathname","useLocation","data","fetchNextPage","hasNextPage","isFetching","isFetchingNextPage","useInfiniteQuery","queryKey","queryFn","_ref2","pageParam","getAllVehicles","Array","isArray","join","initialPageParam","getNextPageParam","lastPage","pages","_lastPage$data","length","enabled","staleTime","Infinity","refetch","useQuery","async","vehicleIds","ids","result","id","getVehicleById","push","getVehiclesById","options","useMemo","flatData","forEach","pageData","item","label","vehicleName","_id","useEffect","undefined","JSON","stringify","selected","filter","option","some","val","vehicleData","newOption","map","el","error","console","find","initializeValue","_jsx","Select","styles","placeholder","t","isClearable","onMenuScrollToBottom","event","target","scrollHeight","scrollTop","clientHeight","menuShouldScrollIntoView","isLoading","components","LoadingIndicator","Spinner","dropDownOptions","setdropDownOptions","driverOptions","getAllDrivers","firstName","fetchDrivers","newValue","Title","editData","setEditData","register","setValue","getValues","handleSubmit","onSubmit","errors","control","clearErrors","useTranslation","addEmploye","setAddEmploye","tempValue","setTempValue","dValues","setDvalues","navigate","useNavigate","location","company","setCompany","branch","setBranch","vehicle","setVehicle","base","padding","useParams","state","startLocation","reachLocation","distance","fuelConsumption","tripStatus","tripStatusOptions","driver","Date","_Fragment","children","_jsxs","className","style","width","margin","Controller","rules","required","render","field","GroupDropdown","Error","errorName","businessGroupId","_ref3","CompanyDropdown","_ref4","BranchDropdownList","_ref5","VehicleDropdownList","htmlFor","_ref6","DatePicker","startTime","CustomInput","type","_ref7","reachTime","_ref8","DriverDropdown","_ref9","display","justifyContent","onClick","Link","to","ClassifyTripForm","activeIndex","setActiveIndex","tabHeading","component","Trip","formState","useForm","resolver","yupResolver","classifyTripsSchema","updateTrip","notifySuccess","e","log","notifyError","createTrip","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","eventKey","active","Content","Component","Pane","initAxios","getTrips","status","arguments","driverId","startDate","endDate","url","concat","response","axios","get","totalLength","count","post","body","patch","deleteTrip","delete"],"sourceRoot":""}