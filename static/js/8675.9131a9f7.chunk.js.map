{"version":3,"file":"static/js/8675.9131a9f7.chunk.js","mappings":"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","sources":["jsx/components/Tables/AlertTable.jsx","jsx/constant/AlertOffcanvas.js","services/api/AlertService.js","jsx/pages/Alert.jsx"],"sourcesContent":["import React from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from \"../Modal/DeleteModal\";\n\nconst AlertTable = ({ tableData, onConfirmDelete, editDrawerOpen }) => {\n  return (\n    <>\n      {tableData.map((item, index) => (\n        <tr key={index}>\n          <td>\n            <span>{item.basedOn}</span>\n          </td>\n          <td>\n            <div className=\"products\">\n              <h6>{item.alertName}</h6>\n            </div>\n          </td>\n          <td>\n            <span>{item.alertType}</span>\n          </td>\n          <td>\n            <span>\n              {new Date(item.createdAt).toLocaleDateString(\"en-US\", {\n                year: \"numeric\",\n                month: \"short\",\n                day: \"numeric\",\n              })}\n            </span>\n          </td>\n          <td>\n            <span>{item.notification}</span>\n          </td>\n          <td>\n            <span>{item.reason}</span>\n          </td>\n          <td>\n            <span className=\"d-flex justify-content-center\">\n              <span\n                className=\"cursor-pointer\"\n                onClick={() => editDrawerOpen(item?._id)}\n              >\n                <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n              </span>\n              <DeleteModal\n                className=\"cursor-pointer \"\n                onConfirmDelete={onConfirmDelete}\n                id={item._id}\n              >\n                <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n              </DeleteModal>\n            </span>\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n// onClick={() => editDrawerOpen(item.id)}\nexport default AlertTable;\n","import React, {\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useEffect,\n} from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider } from \"react-hook-form\";\nimport Error from \"../components/Error/Error\";\nimport {\n  alertTypeOptions,\n  objectOptions,\n  severityOptions,\n} from \"../components/TabComponent/VehicleTabs/Options\";\nimport CustomInput from \"../components/Input/CustomInput\";\nimport \"../../scss/pages/_driver-tracking.scss\";\nimport DatePicker from \"react-datepicker\";\nimport { useTranslation } from \"react-i18next\";\nimport BranchDropdown from \"../components/BranchDropdown\";\n\nconst AlertOffcanvas = forwardRef(\n  (\n    {\n      Title,\n      register,\n      setValue,\n      getValues,\n      control,\n      errors,\n      handleSubmit,\n      onSubmit,\n      clearErrors,\n      reset,\n      editData,\n      setEditData,\n    },\n    ref\n  ) => {\n    console.log(\"edit data inside modal\", editData);\n    const [addEmploye, setAddEmploye] = useState(false);\n    const [tempVehicle, setTempVehicle] = useState(\"\");\n    const [tempValue, setTempValue] = useState(\"\");\n    const [tempValidDays, setTempValidDays] = useState(\"\");\n    const [companyId, setCompanyId] = useState();\n    const { t } = useTranslation();\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    useImperativeHandle(ref, () => ({\n      showModal() {\n        setAddEmploye(true);\n      },\n\n      closeModal() {\n        reset();\n        clearErrors();\n        setAddEmploye(false);\n      },\n    }));\n\n    useEffect(() => {\n      if (userDetails.user.role === \"COMPANY\") {\n        setCompanyId(userDetails?.user.companyId);\n      }\n    }, []);\n\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        padding: \".25rem 0 \",\n      }),\n    };\n\n    useEffect(() => {\n      reset({});\n      clearErrors();\n      if (addEmploye && editData) reset({ ...editData });\n      else setEditData();\n    }, [addEmploye]);\n\n    const handleBasedOn = (e) => {\n      setTempVehicle(e.target.value);\n      setValue(\"basedOn\", e.target.value);\n    };\n    const handleValue = (e) => {\n      setTempValue(e.target.value);\n      setValue(\"value\", e.target.value);\n    };\n    const handleValidDays = (e) => {\n      setTempValidDays(e.target.value);\n      setValue(\"validDays\", e.target.value);\n    };\n    const handleActionChange = (e) => {\n      console.log({ e });\n      const vl = getValues(e.target.name);\n      setValue(e.target.name, e.target.checked);\n    };\n\n    return (\n      <>\n        <Offcanvas\n          show={addEmploye}\n          onHide={setAddEmploye}\n          className=\"offcanvas-end customeoff\"\n          placement=\"end\"\n        >\n          <div className=\"offcanvas-header\">\n            <h5 className=\"modal-title\" id=\"#gridSystemModal\">\n              {Title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setAddEmploye(false)}\n            >\n              <i className=\"fa-solid fa-xmark\"></i>\n            </button>\n          </div>\n          <div className=\"offcanvas-body\">\n            <div className=\"container-fluid\">\n              <FormProvider>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">{t(\"branch\")}</label>\n                      <Controller\n                        name=\"branch\"\n                        control={control}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <BranchDropdown\n                            onChange={(newValue) => {\n                              setValue(\"branch\", newValue.value);\n                            }}\n                            value={value}\n                            customStyles={customStyles}\n                            ref={ref}\n                            companyId={companyId}\n                            name={name}\n                          />\n                        )}\n                      />\n                      {!getValues(\"branch\") && (\n                        <Error errorName={errors.branch} />\n                      )}\n                    </div>\n\n                    <div className=\"col-xl-6 mb-3\">\n                      <label className=\"form-label\">\n                        {t(\"basedOn\")}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <div\n                        className=\"basic-form\"\n                        style={{ marginTop: \".5rem\" }}\n                      >\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"VEHICLE\"\n                            checked={\n                              (getValues(\"basedOn\") ?? tempVehicle) ===\n                              \"VEHICLE\"\n                            }\n                            onChange={handleBasedOn}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"vehicle\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"VEHICLE_GROUP\"\n                            checked={\n                              (getValues(\"basedOn\") ?? tempVehicle) ===\n                              \"VEHICLE_GROUP\"\n                            }\n                            onChange={handleBasedOn}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"vehicleGroup\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"VEHICLE_TYPE\"\n                            checked={\n                              (getValues(\"basedOn\") ?? tempVehicle) ===\n                              \"VEHICLE_TYPE\"\n                            }\n                            onChange={handleBasedOn}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"vehicleType\")}\n                          </label>\n                        </div>\n                      </div>\n                      {!getValues(\"basedOn\") && (\n                        <Error errorName={errors.basedOn} />\n                      )}\n                    </div>\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">\n                        {t(\"object\")} <span className=\"text-danger\">*</span>\n                      </label>\n                      <Controller\n                        name=\"object\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <Select\n                            onChange={(newValue) => {\n                              setValue(\"object\", newValue.value);\n                            }}\n                            options={objectOptions}\n                            ref={ref}\n                            name={name}\n                            styles={customStyles}\n                            value={\n                              objectOptions.filter(\n                                (l) => l.value == getValues(\"object\")\n                              )?.[0]\n                            }\n                          />\n                        )}\n                      />\n                      {!getValues(\"object\") && (\n                        <Error errorName={errors.object} />\n                      )}\n                    </div>\n\n                    <div\n                      className={`${\n                        (getValues(\"basedOn\") ?? tempVehicle) !==\n                        \"VEHICLE_GROUP\"\n                          ? \"col-xl-6 mb-3 pe-none red\"\n                          : \"col-xl-6 mb-3\"\n                      }`}\n                    >\n                      <label className=\"form-label\">\n                        {t(\"objectGroup\")}{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Object Group\"\n                        name=\"objectGroup\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.objectGroup} />\n                    </div>\n\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">\n                        {t(\"alertName\")} <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Alert Name\"\n                        name=\"alertName\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.alertName} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">\n                        {t(\"alertType\")} <span className=\"text-danger\">*</span>\n                      </label>\n                      <Controller\n                        name=\"alertType\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <Select\n                            onChange={(newValue) => {\n                              setValue(\"alertType\", newValue.value);\n                            }}\n                            options={alertTypeOptions}\n                            ref={ref}\n                            name={name}\n                            styles={customStyles}\n                            value={\n                              objectOptions.filter(\n                                (l) => l.value == getValues(\"alertType\")\n                              )?.[0]\n                            }\n                          />\n                        )}\n                      />\n                      {!getValues(\"alertType\") && (\n                        <Error errorName={errors.alertType} />\n                      )}\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label className=\"form-label\">\n                        Value<span className=\"text-danger\">*</span>\n                      </label>\n                      <div\n                        className=\"basic-form\"\n                        style={{ marginTop: \".5rem\" }}\n                      >\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"START\"\n                            checked={\n                              (getValues(\"value\") ?? tempValue) === \"START\"\n                            }\n                            onChange={handleValue}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"start\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"CANCEL\"\n                            checked={\n                              (getValues(\"value\") ?? tempValue) === \"CANCEL\"\n                            }\n                            onChange={handleValue}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"cancel\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"BOTH\"\n                            checked={\n                              (getValues(\"value\") ?? tempValue) === \"BOTH\"\n                            }\n                            onChange={handleValue}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"both\")}\n                          </label>\n                        </div>\n                      </div>\n                      {!getValues(\"value\") && (\n                        <Error errorName={errors.value} />\n                      )}\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label className=\"form-label\">{t(\"validDays\")}</label>\n                      <div\n                        className=\"basic-form\"\n                        style={{ marginTop: \".5rem\" }}\n                      >\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"EVERYDAY\"\n                            checked={\n                              (getValues(\"value\") ?? tempValidDays) ===\n                              \"EVERYDAY\"\n                            }\n                            onChange={handleValidDays}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"everyday\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check custom-checkbox form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"form-check-input\"\n                            value=\"CUSTOM\"\n                            checked={\n                              (getValues(\"value\") ?? tempValidDays) === \"CUSTOM\"\n                            }\n                            onChange={handleValidDays}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            style={{ marginBottom: \"0\" }}\n                          >\n                            {t(\"custom\")}\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">{t(\"validTimeFrom\")}</label>\n                      <div className=\"d-flex align-items-center justify-content-evenly\">\n                        <Controller\n                          name=\"validFrom\"\n                          control={control}\n                          render={({ value, name }) => (\n                            <DatePicker\n                              selected={\n                                getValues(\"validFrom\")\n                                  ? new Date(getValues(\"validFrom\"))\n                                  : new Date()\n                              }\n                              className=\"form-control customDateHeight\"\n                              onChange={(newValue) =>\n                                setValue(\"validFrom\", newValue)\n                              }\n                            />\n                          )}\n                        />\n                        <span className=\"px-1\">{t(\"to\")}</span>\n                        <Controller\n                          name=\"validTo\"\n                          control={control}\n                          render={({ value, name }) => (\n                            <DatePicker\n                              selected={\n                                getValues(\"validTo\")\n                                  ? new Date(getValues(\"validTo\"))\n                                  : new Date()\n                              }\n                              className=\"form-control customDateHeight\"\n                              onChange={(newValue) =>\n                                setValue(\"validTo\", newValue)\n                              }\n                            />\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-xl-6 mb-3 \">\n                      <label className=\"form-label\">{t(\"action\")} </label>\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"form-check form-check-inline\">\n                          <label className=\"form-check-label\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              name=\"action.SMS\"\n                              checked={getValues(\"action.SMS\")}\n                              onInput={handleActionChange}\n                            />\n                            {t(\"sms\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <label className=\"form-check-label\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              name=\"action.Email\"\n                              checked={getValues(\"action.Email\")}\n                              onInput={handleActionChange}\n                            />\n                            {t(\"email\")}\n                          </label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <label className=\"form-check-label\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              name=\"action.Notification\"\n                              checked={getValues(\"action.Notification\")}\n                              onInput={handleActionChange}\n                            />\n                            {t(\"notification\")}\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-xl-6 mb-3 \">\n                    <label className=\"form-label\">\n                      {t(\"severity\")} <span className=\"text-danger\">*</span>\n                    </label>\n                    <Controller\n                      name=\"severity\"\n                      control={control}\n                      rules={{ required: true }}\n                      render={({ field: { onChange, value, name, ref } }) => (\n                        <Select\n                          onChange={(newValue) => {\n                            setValue(\"severity\", newValue.value);\n                          }}\n                          options={severityOptions}\n                          ref={ref}\n                          name={name}\n                          styles={customStyles}\n                          value={\n                            objectOptions.filter(\n                              (l) => l.value == getValues(\"severity\")\n                            )?.[0]\n                          }\n                        />\n                      )}\n                    />\n                    {!getValues(\"severity\") && (\n                      <Error errorName={errors.severity} />\n                    )}\n                  </div>\n                  <div>\n                    <button\n                      type=\"submit\"\n                      onClick={() => {\n                        handleSubmit(onSubmit);\n                      }}\n                      className=\"btn btn-primary me-1 m-1\"\n                    >\n                      {t(\"submit\")}\n                    </button>\n                    <Link\n                      to={\"#\"}\n                      onClick={() => setAddEmploye(false)}\n                      className=\"btn btn-danger light ms-1 m-1\"\n                    >\n                      {t(\"cancel\")}\n                    </Link>\n                  </div>\n                </form>\n              </FormProvider>\n            </div>\n          </div>\n        </Offcanvas>\n      </>\n    );\n  }\n);\n\nexport default AlertOffcanvas;\n","import axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios();\n\nexport const getAlertById = async (id) => {\n  const { data } = await axios.get(`/alerts/${id}`);\n  return data.data;\n};\n\nexport const getAlerts = async (page = 1, limit = 10) => {\n  let url = `/alerts?page=${page}&limit=${limit}`;\n  const response = await axios.get(url);\n  return response?.data?.data;\n};\n\nexport const deleteAlert = async (id) => {\n  const response = await axios.delete(`/alerts/${id}`);\n  return response?.data?.data;\n};\n\nexport const createAlert = async (data) => {\n  const response = await axios.post(\"/alerts\", data);\n  return response?.data?.data;\n};\n\nexport const updateAlert = async (data, id) => {\n  const response = await axios.put(`/alerts/${id}`, data);\n  return response?.data?.data;\n};\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport AlertOffcanvas from \"../constant/AlertOffcanvas\";\nimport { AlertData } from \"../components/Tables/Tables\";\nimport AlertTable from \"../components/Tables/AlertTable\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { alertSchema } from \"../../yup\";\nimport { useTranslation } from \"react-i18next\";\nimport usePagination from \"../../hooks/usePagination\";\nimport { notifyError, notifySuccess } from \"../../utils/toast\";\nimport {\n  createAlert,\n  deleteAlert,\n  getAlerts,\n  updateAlert,\n} from \"../../services/api/AlertService\";\nimport ReactPaginate from \"react-paginate\";\nimport { ICON } from \"../constant/theme\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport Paginate from \"../components/Pagination/Paginate\";\n\n\n\nconst Alert = () => {\n  const { t } = useTranslation();\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    clearErrors,\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(alertSchema),\n  });\n\n  const [tableData, setTableData] = useState([]);\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\n    usePagination();\n  const { isRtl } = useContext(ThemeContext);\n  const [editData, setEditData] = useState();\n  const itemsPerPage=10;\n\n  const handlePageClick = ({ selected }) => {\n    goToPage(selected + 1); \n  };\n\n  const startIndex = (page - 1) * itemsPerPage;\n  const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  const fetchAllAlerts = async (page, businessGroupId) => {\n    try {\n      const { data, count } = await getAlerts(page, 10);\n      setTableData(data);\n      setCount(count);\n    } catch (error) {\n      notifyError(\"Error in fetching data\");\n    }\n  };\n  useEffect(() => {\n    fetchAllAlerts(page);\n  }, [page]);\n\n  const onSubmit = async (data) => {\n    try {\n      if (data._id && data._id !== 0) {\n        // update data\n        await updateAlert(data, data._id);\n        notifySuccess(\"Task Added Successfully !!\");\n        alert.current.closeModal();\n      } else {\n        await createAlert(data);\n        notifySuccess(\"Task Added Successfully !!\");\n        alert.current.closeModal();\n      }\n    } catch (error) {\n      const validationErr = error.response?.data?.data?.errors;\n      if (validationErr && validationErr.length > 0) {\n        notifyError(validationErr[0].msg);\n      } else notifyError(t(\"someErrorOccurred\"));\n    }\n  };\n\n  const onConfirmDelete = async (id) => {\n    try {\n      await deleteAlert(id);\n      const updatedData = tableData.filter((item) => item._id !== id);\n      setTableData(updatedData);\n      setCount(totalCount - 1);\n      notifySuccess(\"Task Deleted\");\n    } catch (e) {\n      notifyError(\"Something Went Wrong\");\n    }\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table._id === item && setEditData(table));\n    alert.current.showModal();\n  };\n\n  const alert = useRef();\n\n\n  async function getAlertData() {\n    try {\n      // const permissions = JSON.parse(localStorage.getItem('permission'));\n      // setUserPermission(permissions?.[0]?.permission);\n      const { data, totalPage, totalCount } = await getAlerts();\n      setTableData(data);\n      console.log('data came',data);\n      // setCount(totalCount);\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n    } finally {\n      // setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getAlertData();\n  },[]);\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"alert\")}\n        pageTitle={t(\"alert\")}\n        parentTitle={t(\"settings\")}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\" style={{ flex: 1 }}>\n                      {t(\"alert\")}\n                    </h4>\n                    <div className=\"d-flex\">\n                      <div>\n                        <Link\n                          to={\"#\"}\n                          className=\"btn btn-primary btn-sm ms-1\"\n                          data-bs-toggle=\"offcanvas\"\n                          onClick={() => {\n                            clearErrors();\n                            reset();\n                            alert.current.showModal();\n                          }}\n                        >\n                          + {t(\"addAlert\")}\n                        </Link>{\" \"}\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"alerts\")}</th>\n                          <th>{t(\"alertName\")}</th>\n                          <th>{t(\"alertType\")}</th>\n                          <th>{t(\"createdDate\")}</th>\n                          <th>{t(\"notification\")}</th>\n                          <th>{t(\"reason\")}</th>\n                          <th>{t(\"action\")}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <AlertTable\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                          currentPage={page} \n                            itemsPerPage={itemsPerPage} \n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                         <Paginate\n                            totalCount={totalCount}\n                            itemsPerPage={itemsPerPage}\n                            handlePageClick={handlePageClick}\n                          />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AlertOffcanvas\n        ref={alert}\n        Title={editData && editData._id !== 0 ? \"Edit Alert\" : t(\"addAlert\")}\n        editData={editData}\n        setEditData={setEditData}\n        register={register}\n        setValue={setValue}\n        onSubmit={onSubmit}\n        getValues={getValues}\n        control={control}\n        errors={errors}\n        handleSubmit={handleSubmit}\n        clearErrors={clearErrors}\n        reset={reset}\n      />\n    </>\n  );\n};\n\nexport default Alert;\n"],"names":["_ref","tableData","onConfirmDelete","editDrawerOpen","_jsx","_Fragment","children","map","item","index","_jsxs","basedOn","className","alertName","alertType","Date","createdAt","toLocaleDateString","year","month","day","notification","reason","onClick","_id","FaEdit","style","color","fontSize","DeleteModal","id","MdDelete","forwardRef","ref","_getValues","_getValues2","_getValues3","_getValues4","_getValues5","_getValues6","_getValues7","_getValues8","_getValues9","Title","register","setValue","getValues","control","errors","handleSubmit","onSubmit","clearErrors","reset","editData","setEditData","console","log","addEmploye","setAddEmploye","useState","tempVehicle","setTempVehicle","tempValue","setTempValue","tempValidDays","setTempValidDays","companyId","setCompanyId","t","useTranslation","userDetails","JSON","parse","localStorage","getItem","useImperativeHandle","showModal","closeModal","useEffect","user","role","customStyles","base","padding","handleBasedOn","e","target","value","handleValue","handleValidDays","handleActionChange","name","checked","Offcanvas","show","onHide","placement","type","FormProvider","Controller","render","_ref2","field","onChange","BranchDropdown","newValue","Error","errorName","branch","marginTop","marginBottom","rules","required","_ref3","_objectOptions$filter","Select","options","objectOptions","styles","filter","l","object","concat","CustomInput","label","placeholder","objectGroup","_ref4","_objectOptions$filter2","alertTypeOptions","_ref5","DatePicker","selected","_ref6","onInput","_ref7","_objectOptions$filter3","severityOptions","severity","Link","to","initAxios","getAlerts","async","_response$data","limit","arguments","length","undefined","url","response","axios","get","data","Alert","formState","useForm","resolver","yupResolver","alertSchema","setTableData","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","usePagination","isRtl","useContext","ThemeContext","startIndex","slice","businessGroupId","count","error","notifyError","fetchAllAlerts","alert","useRef","totalPage","getAlertData","MainPagetitle","mainTitle","pageTitle","parentTitle","flex","current","AlertTable","_response$data2","delete","deleteAlert","updatedData","notifySuccess","table","currentPage","itemsPerPage","Math","min","Paginate","handlePageClick","AlertOffcanvas","_response$data4","put","updateAlert","_response$data3","post","createAlert","_error$response","_error$response$data","_error$response$data$","validationErr","msg"],"sourceRoot":""}