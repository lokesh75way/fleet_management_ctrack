{"version":3,"file":"static/js/258.577b83ac.chunk.js","mappings":"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","sources":["jsx/components/table/FilteringTable/ColumnFilter.js","jsx/components/table/FilteringTable/Columns.js","jsx/components/table/FilteringTable/GlobalFilter.js","jsx/components/table/FilteringTable/FilteringTable.js"],"sourcesContent":["import React from \"react\";\n\nexport const ColumnFilter = ({ column }) => {\n  const { filterValue, setFilter } = column;\n  return (\n    <div>\n      <input\n        className=\"form-control input-search\"\n        value={filterValue || \"\"}\n        onChange={(e) => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { ColumnFilter } from \"./ColumnFilter\";\n\nfunction dateFormat(value) {\n  let objectDate = new Date(value);\n  let day = (\"0\" + (objectDate.getDate() + 1)).slice(-2);\n  let month = (\"0\" + (objectDate.getMonth() + 1)).slice(-2);\n  let year = objectDate.getFullYear();\n\n  return day + \"/\" + month + \"/\" + year;\n}\n\nexport const COLUMNS = [\n  {\n    Header: \"Id\",\n    Footer: \"Id\",\n    accessor: \"id\",\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"First Name\",\n    Footer: \"First Name\",\n    accessor: \"first_name\",\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"Last Name\",\n    Footer: \"Last Name\",\n    accessor: \"last_name\",\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"Email Id\",\n    Footer: \"Email Id\",\n    accessor: \"email\",\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"Date of  Birth\",\n    Footer: \"Date of  Birth\",\n    accessor: \"date_of_birth\",\n    Cell: ({ value }) => {\n      return dateFormat(value);\n    },\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"Country\",\n    Footer: \"Country\",\n    accessor: \"country\",\n    Filter: ColumnFilter,\n  },\n  {\n    Header: \"Phone\",\n    Footer: \"Phone\",\n    accessor: \"phone\",\n    Filter: ColumnFilter,\n  },\n];\n\nexport const GROUPED_COLUMNS = [\n  {\n    Header: \"Id\",\n    Footer: \"Id\",\n    accessor: \"id\",\n  },\n  {\n    Header: \"Name\",\n    Footer: \"Name\",\n    columns: [\n      {\n        Header: \"First Name\",\n        Footer: \"First Name\",\n        accessor: \"first_name\",\n      },\n      {\n        Header: \"Last Name\",\n        Footer: \"Last Name\",\n        accessor: \"last_name\",\n      },\n    ],\n  },\n  {\n    Header: \"Info\",\n    Footer: \"Info\",\n    columns: [\n      {\n        Header: \"Date of  Birth\",\n        Footer: \"Date of  Birth\",\n        accessor: \"date_of_birth\",\n      },\n      {\n        Header: \"Country\",\n        Footer: \"Country\",\n        accessor: \"country\",\n      },\n      {\n        Header: \"Phone\",\n        Footer: \"Phone\",\n        accessor: \"phone\",\n      },\n    ],\n  },\n];\n","import React from \"react\";\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n  return (\n    <div>\n      Search :{\" \"}\n      <input\n        className=\"ml-2 input-search form-control\"\n        value={filter || \"\"}\n        onChange={(e) => setFilter(e.target.value)}\n        style={{ width: \"20%\" }}\n      />\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport PageTitle from \"../../../layouts/PageTitle\";\nimport {\n  useTable,\n  useGlobalFilter,\n  useFilters,\n  usePagination,\n} from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA_2.json\";\nimport { COLUMNS } from \"./Columns\";\nimport { GlobalFilter } from \"./GlobalFilter\";\n//import './table.css';\nimport \"./filtering.css\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport const FilteringTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    useFilters,\n    useGlobalFilter,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    state,\n    page,\n    gotoPage,\n    pageCount,\n    pageOptions,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    setGlobalFilter,\n  } = tableInstance;\n\n  const { globalFilter, pageIndex } = state;\n\n  return (\n    <>\n      <PageTitle activeMenu=\"Filtering\" motherMenu=\"Table\" />\n      <div className=\"container-fluid\">\n        <Row>\n          <Col lg=\"12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">Table Filtering</h4>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  <GlobalFilter\n                    filter={globalFilter}\n                    setFilter={setGlobalFilter}\n                  />\n                  <table\n                    {...getTableProps()}\n                    className=\"table dataTable display\"\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                          {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                              {column.render(\"Header\")}\n                              {column.canFilter\n                                ? column.render(\"Filter\")\n                                : null}\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()} className=\"\">\n                      {page.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {\" \"}\n                                  {cell.render(\"Cell\")}{\" \"}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                  <div className=\"d-flex justify-content-between\">\n                    <span>\n                      Page{\" \"}\n                      <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                      </strong>\n                      {\"\"}\n                    </span>\n                    <span className=\"table-index\">\n                      Go to page :{\" \"}\n                      <input\n                        type=\"number\"\n                        className=\"ml-2\"\n                        defaultValue={pageIndex + 1}\n                        onChange={(e) => {\n                          const pageNumber = e.target.value\n                            ? Number(e.target.value) - 1\n                            : 0;\n                          gotoPage(pageNumber);\n                        }}\n                      />\n                    </span>\n                  </div>\n                  <div className=\"text-center mb-3\">\n                    <div className=\"filter-pagination  mt-3\">\n                      <button\n                        className=\" previous-button\"\n                        onClick={() => gotoPage(0)}\n                        disabled={!canPreviousPage}\n                      >\n                        {\"<<\"}\n                      </button>\n\n                      <button\n                        className=\"previous-button\"\n                        onClick={() => previousPage()}\n                        disabled={!canPreviousPage}\n                      >\n                        Previous\n                      </button>\n                      <button\n                        className=\"next-button\"\n                        onClick={() => nextPage()}\n                        disabled={!canNextPage}\n                      >\n                        Next\n                      </button>\n                      <button\n                        className=\" next-button\"\n                        onClick={() => gotoPage(pageCount - 1)}\n                        disabled={!canNextPage}\n                      >\n                        {\">>\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\nexport default FilteringTable;\n"],"names":["ColumnFilter","_ref","column","filterValue","setFilter","_jsx","children","className","value","onChange","e","target","COLUMNS","Header","Footer","accessor","Filter","Cell","objectDate","Date","getDate","slice","getMonth","getFullYear","dateFormat","GlobalFilter","filter","_jsxs","style","width","FilteringTable","columns","useMemo","data","MOCK_DATA","tableInstance","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","page","gotoPage","pageCount","pageOptions","nextPage","previousPage","canNextPage","canPreviousPage","setGlobalFilter","globalFilter","_Fragment","PageTitle","activeMenu","motherMenu","Row","Col","lg","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","length","type","defaultValue","pageNumber","Number","onClick","disabled"],"sourceRoot":""}