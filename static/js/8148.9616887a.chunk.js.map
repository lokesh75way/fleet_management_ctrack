{"version":3,"file":"static/js/8148.9616887a.chunk.js","mappings":"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","sources":["hooks/useDriverSubmit.jsx","jsx/components/Error/Error.jsx","jsx/components/TabComponent/VehicleTabs/Options.js","jsx/components/TabComponent/DriverTabs/Profile.jsx","jsx/components/TabComponent/DriverTabs/AdditionalInfo.jsx","jsx/components/TabComponent/DriverTabs/Document.jsx","jsx/pages/admin/settings/CreateForms/DriverForm.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-country-state-city/src/utils/index.ts","../node_modules/react-country-state-city/src/components/Dropdown.tsx","../node_modules/react-country-state-city/src/components/LanguageDropdown.tsx","../node_modules/react-country-state-city/src/components/CitySelect.tsx","../node_modules/react-country-state-city/src/components/CountrySelect.tsx","../node_modules/react-country-state-city/src/components/LanguageSelect.tsx","../node_modules/react-country-state-city/src/components/StateSelect.tsx"],"sourcesContent":["import {useEffect, useState, useContext} from 'react'\nimport { useForm } from \"react-hook-form\";\nconst useDriverSubmit = () => {\nconst {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    control,\n    getValues,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async(data) =>{\n    try{\n      console.log(data);\n      \n    }\n    catch(err){\n        console.log(err)\n    }\n  }\n    \n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    }\n}\n\nexport default useDriverSubmit","import React from \"react\";\n\nconst Error = ({ errorName }) => {\n  return (\n    <>\n      {errorName && (\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\n      )}\n    </>\n  );\n};\n\nexport default Error;","export const branchOptions = [\n  { value: \"West Minister Company\", label: \"West Minister Company\" },\n];\nexport const deviceTypeOptions = [\n  { value: \"2G Camera Howen 5632\", label: \"2G Camera Howen 5632\" },\n  { value: \"2G Camera Howen 5633\", label: \"2G Camera Howen 5633\" },\n  { value: \"2G Camera Howen 5634\", label: \"2G Camera Howen 5634\" },\n  { value: \"2G Camera Howen 5635\", label: \"2G Camera Howen 5635\" },\n  { value: \"2G Camera Howen 5636\", label: \"2G Camera Howen 5636\" },\n];\nexport const copyFromOptions = [\n  { value: \"Test\", label: \"Test\" },\n];\nexport const distanceCounterOptions = [\n  { value: \"GPS\", label: \"GPS\" },\n  { value: \"OBD\", label: \"OBD\" },\n  { value: \"CAN Odometer\", label: \"CAN Odometer\" },\n  { value: \"Relative Odometer\", label: \"Relative Odometer\" },\n  { value: \"Tachograph\", label: \"Tachograph\" },\n];\nexport const unitOfDistanceOptions = [\n  { value: \"Kilometer\", label: \"Kilometer\" },\n  { value: \"Mile\", label: \"Mile\" },\n  { value: \"Nautical mile\", label: \"Nautical mile\" }\n];\nexport const speedDetectionOptions = [\n  { value: \"From Device\", label: \"From Device\" },\n  { value: \"From Lating\", label: \"From Lating\" },\n];\nexport const permitOptions = [\n  { value: \"ITC Permit\", label: \"ITC Permit\" },\n  { value: \"Normal\", label: \"Normal\" },\n  { value: \"Rent A Car\", label: \"Rent A Car\" },\n  { value: \"Fuel Sensor\", label: \"Fuel Sensor\" },\n  { value: \"Medical\", label: \"Medical\" },\n  { value: \"Other\", label: \"Other\" },\n];\nexport const fuelTypeOptions = [\n  { value: \"Petrol\", label: \"Petrol\" },\n  { value: \"Diesel\", label: \"Diesel\" },\n  { value: \"Gas\", label: \"Gas\" },\n  { value: \"Electric\", label: \"Electric\" }\n];\nexport const distanceQuantitySelectOptions = [\n  { value: \"Litre\", label: \"Litre\" },\n  { value: \"Gallon\", label: \"Gallon\" }\n];\nexport const durationSelectOptions = [\n  { value: \"MM\", label: \"MM\" },\n  { value: \"HH:MM\", label: \"HH:MM\" }\n];\nexport const durationCostSelectOptions = [\n  { value: \"Day\", label: \"Day\" },\n  { value: \"Hour\", label: \"Hour\" }\n];\nexport const employeeDesignationOptions = [\n  { value: \"Driver\", label: \"Driver\" },\n  { value: \"Employee\", label: \"Employee\" },\n  { value: \"Engineer\", label: \"Engineer\" },\n  { value: \"Mechanic\", label: \"Mechanic\" },\n  { value: \"Supervisor\", label: \"Supervisor\" },\n];\nexport const tagViaOptions = [\n  { value: \"Beacon\", label: \"Beacon\" },\n  { value: \"RFID/Ibutton\", label: \"RFID/Ibutton\" }\n];\nexport const defaultObjectNumberOptions = [\n  { value: \"Test\", label: \"Test\" },\n];\nexport const adminOptions = [\n  { value: \"Timeline\", label: \"Timeline\" },\n];\nexport const resellerOptions = [\n  { value: \"Test Timeline\", label: \"Test Timeline\" },\n];\nexport const licenseToDriveOptions = [\n  { value: \"CAT1\", label: \"CAT1\" },\n  { value: \"CAT2\", label: \"CAT2\" },\n  { value: \"CAT3\", label: \"CAT3\" },\n  { value: \"CAT4\", label: \"CAT4\" },\n  { value: \"CAT5\", label: \"CAT5\" },\n];\nexport const alertTypeOptions = [\n  { value: \"911\", label: \"911\" },\n  { value: \"Crash Detection\", label: \"Crash Detection\" },\n  { value: \"BLE Battery Sensor1\", label: \"BLE Battery Sensor1\" },\n  { value: \"BLE Battery Sensor2\", label: \"BLE Battery Sensor2\" },\n  { value: \"BLE Battery Sensor3\", label: \"BLE Battery Sensor3\" },\n];\n\nexport const leaveTimeOptions = [\n  { value: \"CL\", label: \"CL\" },\n  { value: \"PL\", label: \"PL\" },\n  { value: \"SL\", label: \"SL\" },\n];\nexport const ObjectOptions = [\n  { value: \"Test1\", label: \"Test1\" },\n  { value: \"Test2\", label: \"Test2\" },\n];\nexport const TypeOptions = [\n  { value: \"Accidents\", label: \"Accidents\" },\n  { value: \"Bonuses\", label: \"Bonuses\" },\n  { value: \"BreakDown\", label: \"BreakDown\" },\n  { value: \"Fines\", label: \"Fines\" },\n  { value: \"Maintainance\", label: \"Maintainance\" },\n  { value: \"Fuel\", label: \"Fuel\" },\n];\nexport const jobOptions = [\n  { value: \"Job1\", label: \"Job1\" },\n];\nexport const dateFormatOptions = [\n  { value: \"dd-MM-yyyy\", label: \"dd-MM-yyyy\" },\n  { value: \"MM-dd-yyyy\", label: \"MM-dd-yyyy\" },\n];\nexport const timeFormatOptions = [\n  { value: \"12 Hour\", label: \"12 Hour\" },\n  { value: \"24 Hour\", label: \"24 Hour\" },\n];\nexport const weekStartDayOptions = [\n  { value: \"Sunday\", label: \"Sunday\" },\n  { value: \"Monday\", label: \"Monday\" },\n  { value: \"Tuesday\", label: \"Tuesday\" },\n  { value: \"Wednesday\", label: \"Wednesday\" },\n  { value: \"Thursday\", label: \"Thursday\" },\n  { value: \"Friday\", label: \"Friday\" },\n  { value: \"Saturday\", label: \"Saturday\" },\n];\nexport const subCompanyOptions = [\n  { value: \"All\", label: \"All\" },\n  { value: \"75 way\", label: \"75 way\" },\n];\nexport const options = [{ value: \"West Company\", label: \"West Company\" }];\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { branchOptions, employeeDesignationOptions,tagViaOptions, defaultObjectNumberOptions } from \"../VehicleTabs/Options\";\n\nconst Profile = ({ setValue, register, handleNext}) => {\n  const { formState:errors, control } = useForm();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Company <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"company\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"company\", newValue.value)}\n                options={branchOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={branchOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.branch} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Branch <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"branch\", newValue.value)}\n                options={branchOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={branchOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Employee Designation\n          </label>\n          <Controller\n            name=\"employeeDesignation\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"employeeDesignation\", newValue.value)}\n                options={employeeDesignationOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={employeeDesignationOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            First Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"firstName\", {\n              required: \"First Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"firstName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Last Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"lastName\", {\n              required: \"Last Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"lastName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Employee Number \n          </label>\n          <input\n            type=\"number\"\n            {...register(\"employeeNumber\")}\n            className=\"form-control\"\n            name=\"employeeNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Tag via \n          </label>\n          <Controller\n            name=\"tagVia\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"tagVia\", newValue.value)}\n                options={tagViaOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={tagViaOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Shift Group \n          </label>\n          <input\n            type=\"text\"\n            {...register(\"shiftGroup\")}\n            className=\"form-control\"\n            name=\"shiftGroup\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Shift \n          </label>\n          <input\n            type=\"text\"\n            {...register(\"shift\")}\n            className=\"form-control\"\n            name=\"shift\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Country \n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue('country',e.id)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            State \n          </label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue('state',e.id)\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            City \n          </label>\n          <input\n            type=\"text\"\n            {...register(\"city\")}\n            className=\"form-control\"\n            name=\"city\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Zip Code \n          </label>\n          <input\n            type=\"number\"\n            {...register(\"zipCode\")}\n            className=\"form-control\"\n            name=\"zipCode\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street1 \n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street1\")}\n            className=\"form-control\"\n            name=\"street1\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street2 \n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street2\")}\n            className=\"form-control\"\n            name=\"street2\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Contact Number1 <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            {...register(\"contactNumber1\")}\n            className=\"form-control\"\n            name=\"contactNumber1\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Contact Number2 \n          </label>\n          <input\n            type=\"number\"\n            {...register(\"contactNumber2\")}\n            className=\"form-control\"\n            name=\"contactNumber2\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Default Object Number \n          </label>\n          <Controller\n            name=\"defaultObjectNumber\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"defaultObjectNumber\", newValue.value)}\n                options={defaultObjectNumberOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={defaultObjectNumberOptions[0]}\n              />\n            )}\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}> Next</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { Button } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { licenseToDriveOptions } from \"../VehicleTabs/Options\";\n\nconst AdditionalInfo = ({ setValue, register, handleNext }) => {\n  const { formState: errors, control, getValues } = useForm();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  const handleChange = (e) => {\n    setSelectedOption(e.target.value);\n    setValue(\"licenseAvailable\", e.target.value);\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Date of Birth</label>\n          <Controller\n            name=\"dateOfBirth\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"dateOfBirth\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"dateOfBirth\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Age</label>\n          <input\n            type=\"text\"\n            {...register(\"age\")}\n            className=\"form-control\"\n            name=\"age\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Date of Joining</label>\n          <Controller\n            name=\"dateOfJoining\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"dateOfJoining\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"dateOfJoining\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Date of Leaving</label>\n          <Controller\n            name=\"dateOfLeaving\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"dateOfLeaving\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"dateOfLeaving\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Driving Experience Since</label>\n          <input\n            type=\"text\"\n            {...register(\"drivingExperienceSince\")}\n            className=\"form-control\"\n            name=\"drivingExperienceSince\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">License Available</label>\n          <div className=\"basic-form\" style={{ marginTop: \".5rem\" }}>\n            <div className=\"form-check custom-checkbox form-check-inline\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                id=\"customRadioBox987\"\n                name=\"optradioCustom1\"\n                value=\"yes\"\n                checked={selectedOption === \"yes\"}\n                onChange={handleChange}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"customRadioBox987\"\n                style={{ marginBottom: \"0\" }}\n              >\n                Yes\n              </label>\n            </div>\n            <div className=\"form-check custom-checkbox form-check-inline\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                id=\"customRadioBox988\"\n                value=\"no\"\n                checked={selectedOption === \"no\"}\n                onChange={handleChange}\n                name=\"optradioCustom1\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"customRadioBox988\"\n                style={{ marginBottom: \"0\" }}\n              >\n                No\n              </label>\n            </div>\n          </div>\n        </div>\n        {selectedOption === \"yes\" && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">License Number</label>\n              <div className=\"d-flex align-items-center\">\n                <input\n                  type=\"number\"\n                  {...register(\"licenseNumber\")}\n                  className=\"form-control\"\n                  style={{ marginRight: \".5rem\" }}\n                  name=\"licenseNumber\"\n                  placeholder=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">License to Drive</label>\n              <Controller\n                name=\"licenseToDrive\"\n                control={control}\n                render={({ field: { onChange, value, name, ref } }) => (\n                  <Select\n                    onChange={(newValue) =>\n                      setValue(\"licenseToDrive\", newValue.value)\n                    }\n                    options={licenseToDriveOptions}\n                    ref={ref}\n                    name={name}\n                    styles={customStyles}\n                    defaultValue={licenseToDriveOptions[0]}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">License Issued Date</label>\n              <Controller\n                name=\"licenseIssueDate\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"licenseIssueDate\") || new Date()}\n                    className=\"form-control\"\n                    onChange={(newValue) =>\n                      setValue(\"licenseIssueDate\", newValue)\n                    }\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">License Expiry Date</label>\n              <Controller\n                name=\"licenseExpiryDate\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"licenseExpiryDate\") || new Date()}\n                    className=\"form-control\"\n                    onChange={(newValue) =>\n                      setValue(\"licenseExpiryDate\", newValue)\n                    }\n                  />\n                )}\n              />\n            </div>\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Life Insurance Number</label>\n          <input\n            type=\"text\"\n            {...register(\"lifeInsuranceNumber\")}\n            className=\"form-control\"\n            name=\"lifeInsuranceNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Life Insurance Expiry Date</label>\n          <Controller\n                name=\"lifeInsuranceExpiryDtae\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"lifeInsuranceExpiryDtae\") || new Date()}\n                    className=\"form-control\"\n                    onChange={(newValue) =>\n                      setValue(\"lifeInsuranceExpiryDtae\", newValue)\n                    }\n                  />\n                )}\n              />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mediclaim Number</label>\n          <input\n            type=\"text\"\n            {...register(\"mediclaimNumber\")}\n            className=\"form-control\"\n            name=\"mediclaimNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mediclaim Expiry Date</label>\n          <Controller\n                name=\"mediclaimExpiryDate\"\n                control={control}\n                render={({ value, name }) => (\n                  <DatePicker\n                    selected={getValues(\"mediclaimExpiryDate\") || new Date()}\n                    className=\"form-control\"\n                    onChange={(newValue) =>\n                      setValue(\"mediclaimExpiryDate\", newValue)\n                    }\n                  />\n                )}\n            />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Active</label>\n          <div className=\"d-flex align-items-center\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}>\n          {\" \"}\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import React,{useState} from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\nconst Document = ({ setValue, register }) => {\n  const {formState:errors, control, getValues} = useForm()\n  const [startDate, setStartDate] = useState(new Date());\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-4\">\n          <label>Profile Pic</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\"></div>\n        <div className=\"col-xl-6 mb-4\">\n          <label>Driving License</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n        <label className=\"form-label\">\n            Issue Date \n          </label>\n          <Controller\n            name=\"drivingLicenseIssueDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"drivingLicenseIssueDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"drivingLicenseIssueDate\", newValue)}\n              />\n            )}\n          />\n\n          <label className=\"form-label\">\n            Expiry Date \n          </label>\n          <Controller\n            name=\"drivingLicenseExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"drivingLicenseExpiryDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"drivingLicenseExpiryDate\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-4\">\n          <label>Aadhar Card</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n        <label className=\"form-label\">\n            Issue Date \n          </label>\n          <Controller\n            name=\"aadharCardIssueDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"aadharCardIssueDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"aadharCardIssueDate\", newValue)}\n              />\n            )}\n          />\n\n          <label className=\"form-label\">\n            Expiry Date \n          </label>\n          <Controller\n            name=\"aadharCardExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"aadharCardExpiryDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"aadharCardExpiryDate\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-4\">\n          <label>PAN Card </label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n        <label className=\"form-label\">\n            Issue Date \n          </label>\n          <Controller\n            name=\"panCardIssueDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"panCardIssueDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"panCardIssueDate\", newValue)}\n              />\n            )}\n          />\n\n          <label className=\"form-label\">\n            Expiry Date \n          </label>\n          <Controller\n            name=\"panCardExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"panCardExpiryDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"panCardExpiryDate\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-4\">\n          <label>Bank Account</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n        <label className=\"form-label\">\n            Issue Date \n          </label>\n          <Controller\n            name=\"bankAccountIssueDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"bankAccountIssueDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"bankAccountIssueDate\", newValue)}\n              />\n            )}\n          />\n\n          <label className=\"form-label\">\n            Expiry Date \n          </label>\n          <Controller\n            name=\"bankAccountExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"bankAccountExpiryDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"bankAccountExpiryDate\", newValue)}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-4\">\n          <label>Mediclaim</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n        <label className=\"form-label\">\n            Issue Date \n          </label>\n          <Controller\n            name=\"mediclaimIssueDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"mediclaimIssueDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"mediclaimIssueDate\", newValue)}\n              />\n            )}\n          />\n\n          <label className=\"form-label\">\n            Expiry Date \n          </label>\n          <Controller\n            name=\"mediclaimExpiryDate\"\n            control={control}\n            render={({ value, name }) => (\n              <DatePicker\n                selected={getValues(\"mediclaimExpiryDate\") || new Date()}\n                className=\"form-control\"\n                onChange={(newValue) => setValue(\"mediclaimExpiryDate\", newValue)}\n              />\n            )}\n          />\n        </div> \n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"2rem 0\",\n          }}\n        >\n      \n            <Button type=\"submit\"> Submit</Button>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Document;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport useDriverSubmit from \"../../../../../hooks/useDriverSubmit\";\nimport Profile from \"../../../../components/TabComponent/DriverTabs/Profile\";\nimport AdditionalInfo from \"../../../../components/TabComponent/DriverTabs/AdditionalInfo\";\nimport Document from \"../../../../components/TabComponent/DriverTabs/Document\";\n\nconst DriverForm = ({ Title, editData, setEditData }) => {\n  const {\n    register,\n    onSubmit,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useDriverSubmit();\n\n  // const nav = useNavigate();\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setEditData({ ...editData, [name]: value });\n  // };\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"Profile\", \"Additional Info\", \"Document\"];\n  const component = [Profile, AdditionalInfo, Document];\n  const totalTabs = tabHeading.length;\n  const handleNext = () => {\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1)); // Increment active tab index\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Driver\"\n        pageTitle={\"Create\"}\n        parentTitle={\"Driver\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleNext={handleNext}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default DriverForm;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import {\n  City,\n  Country,\n  CountryState,\n  CountryStateCity,\n  Language,\n  State,\n} from \"../types\";\n\nexport const GetCountries = async (): Promise<Country[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/countriesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Country>;\n};\n\nexport const GetLanguages = async (): Promise<Language[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/languagesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Language>;\n};\n\nexport const GetState = async (id: number): Promise<Array<State> | []> => {\n  const states = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/statesminified.json\"\n  ).then((res) => res.json());\n  const record = states as Array<CountryState>;\n  const statesone = record.find((e: CountryState) => e.id === id);\n  const state = statesone && statesone.states ? statesone.states : [];\n  return state;\n};\n\nexport const GetCity = async (\n  countryid: number,\n  stateid: number\n): Promise<Array<City> | []> => {\n  const cities = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/citiesminified.json\"\n  ).then((res) => res.json());\n  const record = cities as Array<CountryStateCity>;\n  const countries = record.find((e: CountryStateCity) => e.id === countryid);\n  if (countries) {\n    const states = countries && countries.states ? countries.states : [];\n    const city = states.find((e) => e.id === stateid);\n    return city && city.cities ? city.cities : [];\n  } else {\n    return [];\n  }\n};\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { City, Country, State } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Country | State | City>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Country | State | City;\n  onChange: (e: Country | State | City) => void;\n  showFlag?: boolean;\n};\nconst Dropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  showFlag = true,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Country | State | City>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${\n      showFlag && \"emoji\" in selectedValue ? selectedValue.emoji : \"\"\n    } ${selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Country | State | City) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Country | State | City) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.id === option.id;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.id}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {showFlag && <span>{\"emoji\" in option ? option.emoji : \"\"}</span>}{\" \"}\n              {option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { Language } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Language>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Language;\n  onChange: (e: Language) => void;\n  displayNative?: boolean;\n};\nconst LanguageDropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  displayNative,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Language>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${displayNative ? selectedValue.native : selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Language) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Language) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.code === option.code;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.code}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {displayNative ? option.native : option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageDropdown;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { City } from \"../types\";\nimport { GetCity } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\ntype PageProps = {\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: City) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: City;\n  countryid: number;\n  stateid: number;\n  placeHolder?: string;\n};\n\nconst CitySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  countryid,\n  stateid,\n  placeHolder,\n}: PageProps) => {\n  const [cities, setCities] = useState<City[]>([]);\n  useEffect(() => {\n    if (countryid) {\n      GetCity(countryid, stateid).then((data) => {\n        setCities(data);\n      });\n    }\n  }, [countryid, stateid]);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={cities}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as City);\n            }\n          }}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CitySelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Country } from \"../types\";\nimport { GetCountries } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\n\ntype PageProps = {\n  defaultValue?: Country;\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: Country) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  placeHolder?: string;\n  showFlag?: boolean;\n};\nconst CountrySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  placeHolder,\n  showFlag,\n}: PageProps) => {\n  const [countriesunfiltered, setCountries] = useState<Country[]>([]);\n  useEffect(() => {\n    GetCountries().then((data) => {\n      setCountries(data);\n    });\n  }, []);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={countriesunfiltered}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as Country);\n            }\n          }}\n          showFlag={showFlag}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CountrySelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Language } from \"../types\";\nimport { GetLanguages } from \"../utils\";\nimport LanguageDropdown from \"./LanguageDropdown\";\n\ntype PageProps = {\n  defaultValue?: Language;\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: Language) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  placeHolder?: string;\n  displayNative?: boolean;\n};\nconst LanguageSelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  placeHolder,\n  displayNative,\n}: PageProps) => {\n  const [languagesunfiltered, setLanguages] = useState<Language[]>([]);\n  useEffect(() => {\n    GetLanguages().then((data) => {\n      setLanguages(data);\n    });\n  }, []);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <LanguageDropdown\n          placeHolder={placeHolder}\n          options={languagesunfiltered}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as Language);\n            }\n          }}\n          displayNative={displayNative}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LanguageSelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { State } from \"../types\";\nimport { GetState } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\ntype PageProps = {\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: State) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: State;\n  countryid: number;\n  placeHolder?: string;\n};\n\nconst StateSelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  countryid,\n  placeHolder,\n}: PageProps) => {\n  const [states, setStates] = useState<State[]>([]);\n  useEffect(() => {\n    if (countryid) {\n      GetState(countryid).then((data) => {\n        setStates(data);\n      });\n    }\n  }, [countryid]);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={states}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as State);\n            }\n          }}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default StateSelect;\n"],"names":["useDriverSubmit","register","handleSubmit","setValue","clearErrors","control","getValues","formState","errors","useForm","onSubmit","async","console","log","data","err","_ref","errorName","_jsx","_Fragment","children","className","message","branchOptions","value","label","deviceTypeOptions","copyFromOptions","distanceCounterOptions","unitOfDistanceOptions","speedDetectionOptions","permitOptions","fuelTypeOptions","distanceQuantitySelectOptions","durationSelectOptions","durationCostSelectOptions","employeeDesignationOptions","tagViaOptions","defaultObjectNumberOptions","adminOptions","resellerOptions","licenseToDriveOptions","alertTypeOptions","leaveTimeOptions","ObjectOptions","TypeOptions","jobOptions","dateFormatOptions","timeFormatOptions","weekStartDayOptions","subCompanyOptions","handleNext","countryid","setCountryid","useState","stateid","setstateid","customStyles","base","padding","_jsxs","style","width","margin","Controller","name","rules","required","render","_ref2","field","onChange","ref","Select","newValue","options","styles","defaultValue","Error","branch","_ref3","_ref4","type","placeholder","htmlFor","_ref5","CountrySelect","e","id","containerClassName","inputClassName","placeHolder","background","StateSelect","_ref6","display","justifyContent","Button","onClick","selectedOption","setSelectedOption","handleChange","target","DatePicker","selected","Date","marginTop","checked","marginBottom","marginRight","_ref7","_ref8","_ref9","startDate","setStartDate","action","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","multiple","_ref10","_ref11","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","Profile","AdditionalInfo","Document","totalTabs","length","prevIndex","Math","min","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","defaultActiveKey","toLowerCase","Nav","as","map","i","eventKey","active","Component","React","bsPrefix","variant","size","props","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","classNames","concat","href","disabled","displayName","defaultProps","a","t","n","fetch","then","json","sent","o","r","find","states","c","cities","createElement","u","onTextChange","s","showFlag","l","f","m","p","h","v","g","C","E","w","useRef","y","useEffect","current","focus","contains","window","addEventListener","removeEventListener","N","emoji","filter","indexOf","key","displayNative","code","native","exports","Fragment","position"],"sourceRoot":""}