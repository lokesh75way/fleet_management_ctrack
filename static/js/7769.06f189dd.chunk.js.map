{"version":3,"file":"static/js/7769.06f189dd.chunk.js","mappings":"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","sources":["components/Input/CredentialsInput.jsx","features/businessGroup/components/Form.jsx","jsx/components/AppsMenu/AppProfile/BusinessUserProfile.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { t } from \"i18next\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\n\nconst CredentialsInput = ({ heading, register, errors, id, getValues }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <h3 className=\"mt-4 mb-4\">{heading}</h3>\n\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"username\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"userName\"\n          name=\"userName\"\n          placeholder=\"\"\n          defaultValue={getValues(\"userName\")}\n          disabled={id ? true : false}\n        />\n        <Error errorName={errors.userName} />\n      </div>\n\n      {!id && (\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"password\")} <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"position-relative\">\n            <CustomInput\n              type={showPassword ? \"text\" : \"password\"}\n              register={register}\n              label=\"Password\"\n              name=\"password\"\n              placeholder=\"\"\n            />\n            <span\n              className=\"showPasswordIcon\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n            >\n              {showPassword ? <LuEyeOff /> : <LuEye />}\n            </span>\n          </div>\n          {!id && <Error errorName={errors.password} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CredentialsInput;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport FileUploader from \"@/components/FileUploader\";\nimport CredentialsInput from \"@/components/Input/CredentialsInput\";\nimport UserDetailsForm from \"@/components/Input/UserDetailsForm\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst BusinessForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const { location: locationData, error: locationError } = useUserLocation();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"businessGroupName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"groupName\"\n            name=\"groupName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"groupName\")}\n          />\n          <Error errorName={errors.groupName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <span\n          className=\"absolute\"\n          style={{\n            position: \"absolute\",\n            top: \"23%\",\n            right: \"-42%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <FileUploader\n            setValue={setValue}\n            register={register}\n            label=\"Business Group Logo\"\n            name=\"logo\"\n            getValue={getValues}\n            setLoading={setLoading}\n            loading={loading}\n            link={getValues(\"logo\")}\n          />\n          <Error errorName={errors.logo} />\n        </span>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"businessGroupId\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={{\n                  control: (base) => ({\n                    ...base,\n                    padding: \".25rem 0 \",\n                  }),\n                }}\n                value={{ value, label: value }}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={{\n                  control: (base) => ({\n                    ...base,\n                    padding: \".25rem 0 \",\n                  }),\n                }}\n                value={{ value, label: value }}\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <CredentialsInput\n          heading={t(\"businessLoginDetails\")}\n          register={register}\n          errors={errors}\n          id={id}\n          getValues={getValues}\n        />\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {\" \"}\n            ADD\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <UserDetailsForm\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={loading || isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessForm;\n","import React, {\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useEffect,\n} from \"react\";\nimport { Button, Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../components/MainPagetitle\";\nimport MyAccount from \"../../../../features/businessGroup/components/Form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { adminProfileAccountSchema } from \"../../../../utils/yup\";\nimport useStorage from \"../../../../hooks/useStorage\";\n\nconst AdminProfile = () => {\n  const { checkUserName } = useStorage();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"My Profile\"];\n  const component = [MyAccount];\n  const totalTabs = tabHeading.length;\n  const [isEdit, setIsEdit] = useState(false);\n\n  const userName = checkUserName();\n  const allData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const editData = allData.find((data) => data.userName === userName);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    reset,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(adminProfileAccountSchema),\n  });\n\n  const onSubmit = (data) => {\n    // localStorage.setItem('adminData',data)\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"My Profile\"\n        pageTitle={\"my-profile / create\"}\n        parentTitle={\"Manage Profile\"}\n      />\n      <div className=\"m-2 p-2\">\n        {/* <Button onClick={()=>setIsEdit(!isEdit)} style={{marginLeft:\"auto\", display:\"flex\"}}>Edit</Button> */}\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={editData}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          isEdit={isEdit}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default AdminProfile;\n"],"names":["_ref","heading","register","errors","id","getValues","showPassword","setShowPassword","useState","_jsxs","className","children","_jsx","t","CustomInput","type","label","name","placeholder","defaultValue","disabled","Error","errorName","userName","onClick","LuEyeOff","LuEye","password","setValue","onSubmit","handleSubmit","control","isFormSubmitting","fields","append","remove","useFieldArray","loading","setLoading","useTranslation","useParams","location","locationData","error","locationError","useUserLocation","style","width","groupName","tradeLicenseNumber","officeNumber","position","top","right","overflow","FileUploader","getValue","link","logo","email","LocationSelector","showCity","Comptype","Controller","render","_ref2","field","onChange","value","ref","Select","newValue","options","dateFormatOptions","styles","base","padding","dateFormat","_ref3","timeFormatOptions","CredentialsInput","display","justifyContent","margin","Button","handleAddForm","designation","mobileNumber","map","index","UserDetailsForm","AdminProfile","checkUserName","useStorage","activeIndex","setActiveIndex","tabHeading","component","MyAccount","isEdit","setIsEdit","length","editData","JSON","parse","localStorage","getItem","find","data","formState","reset","useForm","resolver","yupResolver","adminProfileAccountSchema","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}