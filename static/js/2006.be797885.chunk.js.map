{"version":3,"file":"static/js/2006.be797885.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/CompanyTabs/Email.jsx","jsx/components/TabComponent/CompanyTabs/MyAccount.jsx","jsx/components/TabComponent/CompanyTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/CompanyForm.jsx"],"sourcesContent":["import React from 'react'\n\nconst Email = () => {\n  return (\n    <div>Email</div>\n  )\n}\n\nexport default Email","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  branchOptions,\n  employeeDesignationOptions,\n  tagViaOptions,\n  defaultObjectNumberOptions,\n} from \"../VehicleTabs/Options\";\n\nconst MyAccount = ({ setValue, register, handleNext }) => {\n  const { formState: errors, control } = useForm();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isCheckCP, setIsCheckCP] = useState(false);\n  const [isCheckESP, setIsCheckEsP] = useState(false);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country</label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.id);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">State</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.id);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Short Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"shortName\", {\n              required: \"Short Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"shortName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"userName\", {\n              required: \"User Number is required\",\n            })}\n            className=\"form-control\"\n            name=\"userName\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Change Password</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckCP(!isCheckCP)}\n            />\n          </div>\n        </div>\n        {isCheckCP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Old Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"oldPassword\")}\n                className=\"form-control\"\n                name=\"oldPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                New Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"newPassword\")}\n                className=\"form-control\"\n                name=\"newPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"retypePassword\")}\n                className=\"form-control\"\n                name=\"retypePassword\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Enable Security Pin</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckEsP(!isCheckESP)}\n            />\n          </div>\n        </div>\n        {isCheckESP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Security Pin\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"securityPin\")}\n                className=\"form-control\"\n                name=\"securityPin\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Security Pin\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"retypeSecurityPin\")}\n                className=\"form-control\"\n                name=\"retypeSecurityPin\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Password Recovery Email</label>\n          <input\n            type=\"email\"\n            {...register(\"passwordRecoveryEmail\")}\n            className=\"form-control\"\n            name=\"passwordRecoveryEmail\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Email</label>\n          <input\n            type=\"email\"\n            {...register(\"helpDeskEmail\")}\n            className=\"form-control\"\n            name=\"helpDeskEmail\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Telephone Number</label>\n          <input\n            type=\"number\"\n            {...register(\"helpDeskTelephoneNumber\")}\n            className=\"form-control\"\n            name=\"helpDeskTelephoneNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mobile Number</label>\n          <input\n            type=\"number\"\n            {...register(\"mobileNumber\")}\n            className=\"form-control\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Whatsapp Contact Number</label>\n          <input\n            type=\"number\"\n            {...register(\"whatsappContactNumber\")}\n            className=\"form-control\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            City\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"city\")}\n            className=\"form-control\"\n            name=\"city\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Zip Code\n          </label>\n          <input\n            type=\"number\"\n            {...register(\"zipCode\")}\n            className=\"form-control\"\n            name=\"zipCode\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street1\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street1\")}\n            className=\"form-control\"\n            name=\"street1\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street2\n          </label>\n          <input\n            type=\"text\"\n            {...register(\"street2\")}\n            className=\"form-control\"\n            name=\"street2\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Contact Person</label>\n          <input\n            type=\"text\"\n            {...register(\"contactPerson\")}\n            className=\"form-control\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Fax Number\n          </label>\n          <input\n            type=\"number\"\n            {...register(\"faxNumber\")}\n            className=\"form-control\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}>\n          {\" \"}\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, register, handleNext }) => {\n  const { formState: errors, control } = useForm();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isCheckCP, setIsCheckCP] = useState(false);\n  const [isCheckESP, setIsCheckEsP] = useState(false);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Date Format\n          </label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Time Format\n          </label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          Week Start Day\n          </label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"weekStartDay\", newValue.value)}\n                options={weekStartDayOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={weekStartDayOptions[0]}\n              />\n            )}\n          />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          Unit of Distance\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfDistance\", newValue.value)}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfDistanceOptions[0]}\n              />\n            )}\n          />\n        </div>\n        \n        {/* <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Change Password</label>\n          <div className=\"form-check custom-checkbox mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"customCheckBox1\"\n              onClick={() => setIsCheckCP(!isCheckCP)}\n            />\n          </div>\n        </div>\n        {isCheckCP && (\n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Old Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"oldPassword\")}\n                className=\"form-control\"\n                name=\"oldPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                New Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"newPassword\")}\n                className=\"form-control\"\n                name=\"newPassword\"\n                placeholder=\"\"\n              />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                Retype Password<span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"password\"\n                {...register(\"retypePassword\")}\n                className=\"form-control\"\n                name=\"retypePassword\"\n                placeholder=\"\"\n              />\n            </div>\n          </>\n        )} */}\n        \n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button onClick={handleNext} style={{ width: \"10%\" }}>\n          {\" \"}\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport useDriverSubmit from \"../../../../../hooks/useDriverSubmit\";\nimport Email from \"../../../../components/TabComponent/CompanyTabs/Email\";\nimport MyAccount from \"../../../../components/TabComponent/CompanyTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/CompanyTabs/UserSetting\";\n\nconst CompanyForm = ({ Title, editData, setEditData }) => {\n  const {\n    register,\n    onSubmit,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useDriverSubmit();\n\n  // const nav = useNavigate();\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setEditData({ ...editData, [name]: value });\n  // };\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"My Account\", \"User Setting\", \"Email\"];\n  const component = [MyAccount, UserSetting, Email];\n  const totalTabs = tabHeading.length;\n  const handleNext = () => {\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1)); // Increment active tab index\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Company\"\n        pageTitle={\"Create\"}\n        parentTitle={\"Company\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleNext={handleNext}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CompanyForm;\n"],"names":["Email","_jsx","children","_ref","setValue","register","handleNext","formState","errors","control","useForm","countryid","setCountryid","useState","stateid","setstateid","isCheckCP","setIsCheckCP","isCheckESP","setIsCheckEsP","_jsxs","className","style","width","margin","CountrySelect","onChange","e","id","containerClassName","inputClassName","placeHolder","background","StateSelect","type","required","name","placeholder","onClick","_Fragment","htmlFor","display","justifyContent","Button","customStyles","base","padding","Controller","render","_ref2","field","value","ref","Select","newValue","options","dateFormatOptions","styles","defaultValue","_ref3","timeFormatOptions","_ref4","weekStartDayOptions","_ref5","unitOfDistanceOptions","Title","editData","setEditData","onSubmit","handleSubmit","getValues","useDriverSubmit","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","totalTabs","length","prevIndex","Math","min","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","defaultActiveKey","toLowerCase","Nav","as","map","data","i","eventKey","active","Component"],"sourceRoot":""}