{"version":3,"file":"static/js/9597.8e156918.chunk.js","mappings":"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","sources":["jsx/components/Tables/GeofenceTable.jsx","jsx/pages/Geofence.jsx","services/api/GeoFenceService.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from '../Modal/DeleteModal';\n\nconst GeofenceTable = ({tableData,currentPage, itemsPerPage, onConfirmDelete, editDrawerOpen,page}) => {\n    console.log(tableData)\n    const startIndex = (currentPage - 1) * itemsPerPage + 1;\n    return (\n        <>\n            {tableData.map((item, index) => (\n                <tr key={index}>\n                    <td><span>{startIndex + index}</span></td>\n                    <td>\n                        <h6>{item.name}</h6>\n                    </td>\n                    <td><span>{item.category}</span></td>\n                    <td>\n                        <span>{item.contactNumber}</span>\n                    </td>\n                    <td>\n                        <span>{item.address}</span>\n                    </td>\n                    <td><span>{item.description}</span></td>\n                    <td>\n                        <span>{item.geofenceAccess}</span>\n                    </td>\n                    <td>\n                        <span className='d-flex justify-content-center'>\n                            <span className='cursor-pointer' onClick={() => editDrawerOpen(item._id)} ><FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} /></span>\n                            <DeleteModal className='cursor-pointer ' onConfirmDelete={onConfirmDelete} id={item._id} ><MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} /></DeleteModal>\n\n                        </span>\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n\nexport default GeofenceTable","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport InviteCustomer from \"../constant/ModalList\";\nimport EmployeeOffcanvas from \"../constant/EmployeeOffcanvas\";\nimport { GeofenceData } from \"../components/Tables/Tables\";\nimport GeofenceTable from \"../components/Tables/GeofenceTable\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError, notifySuccess } from \"../../utils/toast\";\nimport {\n  deleteGeofenceData,\n  getGeofenceData,\n} from \"../../services/api/GeoFenceService\";\nimport usePagination from \"../../hooks/usePagination\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport clsx from \"clsx\";\nimport ReactPaginate from \"react-paginate\";\n\nconst headers = [\n  { label: \"Employee ID\", key: \"emplid\" },\n  { label: \"Employee Name\", key: \"title\" },\n  { label: \"Department\", key: \"department\" },\n  { label: \"Email Address\", key: \"email\" },\n  { label: \"Contact Number\", key: \"contact\" },\n  { label: \"Gender\", key: \"gender\" },\n  { label: \"Location\", key: \"location\" },\n  { label: \"Status\", key: \"status\" },\n];\n\nconst Geofence = (ref) => {\n \n  const navigate = useNavigate();\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount } =\n    usePagination();\n\n  const { isRtl } = useContext(ThemeContext);\n  const arrowleft = clsx({\n    \"fa-solid fa-angle-right\": isRtl,\n    \"fa-solid fa-angle-left\": !isRtl,\n  });\n  const arrowright = clsx({\n    \"fa-solid fa-angle-left\": isRtl,\n    \"fa-solid fa-angle-right\": !isRtl,\n  });\n\n  const [tableData, setTableData] = useState([]);\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n\n  const itemsPerPage=10;\n\n    const handlePageClick = ({ selected }) => {\n      goToPage(selected + 1); \n    };\n  \n    const startIndex = (page - 1) * itemsPerPage;\n    const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  const getData = async () => {\n    try {\n      const { geofences, count } = await getGeofenceData(page);\n      setCount(count);\n      setTableData(geofences);\n    } catch (error) {\n      notifyError(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [page]);\n\n  const onConfirmDelete = async (id) => {\n    try {\n      const data = await deleteGeofenceData(id);\n      if(data.success){\n        notifySuccess(data.message);\n      }\n      getData(page);\n    } catch (error) {\n      notifyError(error)\n    }\n  \n  };\n  const editDrawerOpen = (item) => {\n    navigate(`/settings/geofence/map/edit/${item}`);\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"geofence\")}\n        pageTitle={t(\"geofence\")}\n        parentTitle={t(\"settings\")}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t(\"geofence\")}</h4>\n                    <div className=\"d-flex\">\n                      <Link\n                        to={\"/settings/geofence/map\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        data-bs-toggle=\"offcanvas\"\n                        // onClick={() => employe.current.showModal()}\n                      >\n                        + {t(\"showMap\")}\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"geofenceID\")}</th>\n                          <th>{t(\"geofenceName\")}</th>\n                          <th>{t(\"geofenceType\")}</th>\n                          <th>{t(\"contactNumber\")}</th>\n                          <th>{t(\"address\")}</th>\n                          <th>{t(\"description\")}</th>\n                          <th>{t(\"geofenceAccess\")}</th>\n                          <th>{t(\"action\")}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <GeofenceTable\n                          page={page}\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                          currentPage={page} \n                            itemsPerPage={itemsPerPage} \n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                       <ReactPaginate\n                            previousLabel={<i className=\"fa-solid fa-angle-left\"></i>}\n                            nextLabel={<i className=\"fa-solid fa-angle-right\"></i>}\n                            breakLabel={\"...\"}\n                            pageCount={Math.ceil(totalCount / itemsPerPage)} // Calculate pageCount based on totalCount and itemsPerPage\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination\"}\n                            activeClassName={\"active\"}\n                            pageClassName=\"page-item\"\n                            pageLinkClassName=\"page-link\"\n                            previousClassName=\"page-item\"\n                            previousLinkClassName=\"page-link\"\n                            nextClassName=\"page-item\"\n                            nextLinkClassName=\"page-link\"\n                          />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Geofence;\n","import axios from \"axios\"\n\nexport const getGeofenceData =async  (pageNo = 1, limit = 10) => {\n    const data = await axios.get(`/geofences?page=${pageNo}&limit=${limit}`)\n    return data.data.data;\n}\n\nexport const deleteGeofenceData = async (id) => {\n   const {data} =  await axios.delete(`/geofences/${id}`)\n    return data;\n}\n\nexport const createGeofenceData = async (body) => {\n    const {data} = await axios.post('/geofences',body);\n    return data;\n}\n\nexport const getGeofenceById = async (id) => {\n    const {data} = await axios.get(`/geofences/${id}`);\n    return data;\n}\n\nexport const updateGeofence = async (id,body) => {\n    const {data} = await axios.patch(`/geofences/${id}`,body);\n    return data;\n}"],"names":["_ref","tableData","currentPage","itemsPerPage","onConfirmDelete","editDrawerOpen","page","console","log","startIndex","_jsx","_Fragment","children","map","item","index","_jsxs","name","category","contactNumber","address","description","geofenceAccess","className","onClick","_id","FaEdit","style","color","fontSize","DeleteModal","id","MdDelete","ref","navigate","useNavigate","nextPage","prevPage","goToPage","setCount","totalCount","usePagination","isRtl","useContext","ThemeContext","setTableData","clsx","useState","editData","setEditData","status","title","contact","age","drivingExperience","gender","location","getData","slice","async","geofences","count","getGeofenceData","error","notifyError","useEffect","t","useTranslation","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","GeofenceTable","data","deleteGeofenceData","success","notifySuccess","message","concat","Math","min","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageNo","arguments","length","undefined","limit","axios","get","delete","createGeofenceData","post","body","getGeofenceById","updateGeofence","patch"],"sourceRoot":""}