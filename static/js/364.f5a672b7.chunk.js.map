{"version":3,"file":"static/js/364.f5a672b7.chunk.js","mappings":"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","sources":["jsx/components/bootstrap/Accordion.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-scroll\";\nimport Highlight from \"react-highlight\";\nimport { Row, Col, Card, Accordion, Tab, Nav } from \"react-bootstrap\";\n\nimport PageTitle from \"../../layouts/PageTitle\";\n\nconst UiAccordion = () => {\n  const defaultAccordion = [\n    {\n      title: \"Accordion Header One\",\n      text: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod.\",\n      bg: \"primary\",\n    },\n    {\n      title: \"Accordion Header Two\",\n      text: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod.\",\n\n      bg: \"info\",\n    },\n    {\n      title: \"Accordion Header Three\",\n      text: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod.\",\n      bg: \"success\",\n    },\n  ];\n\n  const sidebarData = [\n    { title: \"Default Accordion\", to: \"accordion-one\", select: \"\" },\n    { title: \"Accordion Bordered\", to: \"accordion-two\", select: \"\" },\n    { title: \"Accordion without space\", to: \"accordion-three\", select: \"\" },\n    {\n      title: \"Accordion without space with border\",\n      to: \"accordion-four\",\n      select: \"\",\n    },\n    {\n      title: \"Accordion indicator in left position\",\n      to: \"accordion-five\",\n      select: \"\",\n    },\n    { title: \"Accordion with icon\", to: \"accordion-six\", select: \"\" },\n    { title: \"Accordion header background\", to: \"accordion-seven\", select: \"\" },\n    { title: \"Accordion solid background\", to: \"accordion-eight\", select: \"\" },\n    { title: \"Accordion active background\", to: \"accordion-nine\", select: \"\" },\n    { title: \"Accordion header shadow\", to: \"accordion-ten\", select: \"\" },\n    { title: \"Accordion Rounded Stylish\", to: \"accordion-eleven\", select: \"\" },\n    { title: \"Accordion Gradient\", to: \"accordion-twelve\", select: \"\" },\n  ];\n\n  const [activeLink, setActiveLink] = useState(0);\n  return (\n    <Fragment>\n      <PageTitle\n        activeMenu=\"Accordion\"\n        motherMenu=\"Bootstrap\"\n        pageContent=\"Accordion\"\n      />\n      <div className=\"container-fluid\">\n        <div className=\"element-area\">\n          <div className=\"demo-view\">\n            <div className=\"container-fluid pt-0 ps-0 pe-lg-4 pe-0\">\n              <Row>\n                <Col xl=\"12\">\n                  <Card name=\"accordion-one\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Default Accordion</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Default accordion. Add <code>accordion</code> class\n                            in root\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-primary\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item\n                                  className=\"accordion-item\"\n                                  key={i}\n                                  eventKey={`${i}`}\n                                >\n                                  <Accordion.Header className=\"accordion-header rounded-lg\">\n                                    {d.title}\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-primary\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n        <Accordion.Item className=\"accordion-item\" key={i} eventKey={\\`$/{i}\\`}>\n          <Accordion.Header className=\"accordion-header rounded-lg\">\n            {d.title}\n          </Accordion.Header>\n          <Accordion.Collapse eventKey={\\`$\\{i}\\`}>\n            <div className=\"accordion-body\">{d.text}</div>\n          </Accordion.Collapse>\n        </Accordion.Item>\n    ))}\n    </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n                <Col xl=\"12\">\n                  <Card name=\"accordion-two\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion bordered</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Accordion with border. Add class{\" \"}\n                            <code>accordion-bordered</code> with the class{\" \"}\n                            <code> accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-danger-solid\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((data, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header\">\n                                    {\" \"}\n                                    {data.title}\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {data.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-danger-solid\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((data, i) => (\n      <Accordion.Item  key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header className=\"accordion-header\">\n          {\" \"}\n            {data.title}                      \n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n          <div className=\"accordion-body\">{data.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item >\n    ))}\n  </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n                <Col xl=\"12\">\n                  <Card name=\"accordion-three\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Without Space</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-no-gutter</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-no-gutter accordion-header-bg\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header\">\n                                    {d.title}\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-no-gutter accordion-header-bg\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item  key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className=\"accordion-header\">\n            {d.title}                     \n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`}>\n            <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n  </Accordion>\t\t\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-four\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>\n                            Accordion Without Space With Border\n                          </Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add{\" \"}\n                            <code>accordion-no-gutter accordion-bordered</code>{\" \"}\n                            class with <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-no-gutter \"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header as=\"div\">\n                                    {d.title}\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-no-gutter \" defaultActiveKey=\"0\">\n  {defaultAccordion.map((d, i) => (\n    <Accordion.Item  key={i}  eventKey={\\`$\\{i}\\`}>\n      <Accordion.Header as='div'>\n          {d.title}\n      </Accordion.Header>\n      <Accordion.Collapse eventKey={\\`$\\{i}\\`}>\n          <div className=\"accordion-body\">{d.text}</div>\n      </Accordion.Collapse>\n    </Accordion.Item >\n  ))}\n  </Accordion>\t\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-five\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>\n                            Accordion Indicator In Left Position\n                          </Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-left-indicator</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-left-indicator\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header\">\n                                    {d.title}\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-left-indicator\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className=\"accordion-header\">\n            {d.title}\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`}>\n            <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n  </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-six\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion With Icon</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-with-icon</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-with-icon\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header\">\n                                    <span className=\"accordion-header-icon\"></span>\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                    <span className=\"accordion-header-indicator indicator-bordered\"></span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-with-icon\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item key={i}  eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header className=\"accordion-header\">\n          <span className=\"accordion-header-icon\"></span>\n          <span className=\"accordion-header-text\">{d.title}</span>\n          <span className=\"accordion-header-indicator indicator-bordered\"></span>\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`}>\n          <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n  </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n                <Col xl=\"12\">\n                  <Card name=\"accordion-seven\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Header Background</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-header-bg</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-header-bg \"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header\n                                    className={`accordion-header accordion-header-${d.bg}`}\n                                  >\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse eventKey={`${i}`}>\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion\n    className=\"accordion accordion-header-bg \"\n    defaultActiveKey=\"0\"\n    >\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item  key={i}  eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className={\\`accordion-header accordion-header-$\\{d.bg}\\`}>\n          \n          <span className=\"accordion-header-text\">{d.title}</span>\n          \n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} >\n          <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n    </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-eight\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Solid Background</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-solid-bg</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-solid-bg\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header  accordion-header-primary\">\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-solid-bg\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item  key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className=\"accordion-header  accordion-header-primary\">\n          <span className=\"accordion-header-text\">{d.title}</span>\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n          <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item >\n    ))}\n  </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n                <Col xl=\"12\">\n                  <Card name=\"accordion-nine\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Active Background</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-active-header</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-active-header\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item\n                                  className=\"accordion-item\"\n                                  key={i}\n                                  eventKey={`${i}`}\n                                >\n                                  <Accordion.Header className=\"accordion-header accordion-header-primary\">\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-active-header\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item className=\"accordion-item\" key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header className=\"accordion-header accordion-header-primary\">\n        \n          <span className=\"accordion-header-text\">{d.title}</span>\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n          <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n    </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-ten\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion header shadow</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-header-shadow</code> and{\" \"}\n                            <code>accordion-rounded</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-header-shadow accordion-rounded\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item\n                                  className=\"accordion-item\"\n                                  key={i}\n                                  eventKey={`${i}`}\n                                >\n                                  <Accordion.Header className=\"accordion-header-primary\">\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-header-shadow accordion-rounded\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item className=\"accordion-item\" key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className=\"accordion-header-primary\">\n          <span className=\"accordion-header-text\">{d.title}</span>\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n            <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n  </Accordion>\t\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-eleven\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Rounded Stylish</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-rounded-stylish</code> class\n                            with <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-rounded-stylish accordion-bordered\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"rounded-lg\">\n                                    {d.title}\n                                    <span className=\"accordion-header-indicator \"></span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-rounded-stylish accordion-bordered\" defaultActiveKey=\"0\">\n  {defaultAccordion.map((d, i) => (\n    <Accordion.Item  key={i}  eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header className=\"rounded-lg\">\n          {d.title}\n          <span className=\"accordion-header-indicator \"></span>\t\t\t\t\t             \n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n          <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n    </Accordion.Item>\n  ))}\n  </Accordion>\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n\n                <Col xl=\"12\">\n                  <Card name=\"accordion-twelve\" className=\"dz-card\">\n                    <Tab.Container defaultActiveKey=\"Preview\">\n                      <Card.Header className=\"card-header flex-wrap border-0\">\n                        <div>\n                          <Card.Title>Accordion Gradient</Card.Title>\n                          <Card.Text className=\"m-0 subtitle\">\n                            Add <code>accordion-gradient</code> class with{\" \"}\n                            <code>accordion</code>\n                          </Card.Text>\n                        </div>\n                        <Nav\n                          as=\"ul\"\n                          className=\"nav nav-tabs dzm-tabs\"\n                          id=\"myTab\"\n                          role=\"tablist\"\n                        >\n                          <Nav.Item\n                            as=\"li\"\n                            className=\"nav-item\"\n                            role=\"presentation\"\n                          >\n                            <Nav.Link\n                              as=\"button\"\n                              type=\"button\"\n                              eventKey=\"Preview\"\n                            >\n                              Preview\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item as=\"li\" className=\"nav-item\">\n                            <Nav.Link as=\"button\" type=\"button\" eventKey=\"Code\">\n                              React\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                      </Card.Header>\n                      <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane eventKey=\"Preview\">\n                          <Card.Body className=\"card-body\">\n                            <Accordion\n                              className=\"accordion accordion-rounded-stylish accordion-gradient\"\n                              defaultActiveKey=\"0\"\n                            >\n                              {defaultAccordion.map((d, i) => (\n                                <Accordion.Item key={i} eventKey={`${i}`}>\n                                  <Accordion.Header className=\"accordion-header rounded-lg\">\n                                    <span className=\"accordion-header-text\">\n                                      {d.title}\n                                    </span>\n                                  </Accordion.Header>\n                                  <Accordion.Collapse\n                                    eventKey={`${i}`}\n                                    className=\"accordion__body\"\n                                  >\n                                    <div className=\"accordion-body\">\n                                      {d.text}\n                                    </div>\n                                  </Accordion.Collapse>\n                                </Accordion.Item>\n                              ))}\n                            </Accordion>\n                          </Card.Body>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"Code\">\n                          <div className=\"card-body pt-0 p-0 code-area\">\n                            <pre className=\"mb-0\">\n                              <code className=\"language-html\">\n                                <Highlight>\n                                  {`\n  <Accordion className=\"accordion accordion-rounded-stylish accordion-gradient\" defaultActiveKey=\"0\">\n    {defaultAccordion.map((d, i) => (\n      <Accordion.Item  key={i} eventKey={\\`$\\{i}\\`}>\n        <Accordion.Header  className=\"accordion-header rounded-lg\">                                              \n          <span className=\"accordion-header-text\">{d.title}</span>\n        </Accordion.Header>\n        <Accordion.Collapse eventKey={\\`$\\{i}\\`} className=\"accordion__body\">\n            <div className=\"accordion-body\">{d.text}</div>\n        </Accordion.Collapse>\n      </Accordion.Item>\n    ))}\n  </Accordion>\t\n  `}\n                                </Highlight>\n                              </code>\n                            </pre>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </Card>\n                </Col>\n              </Row>{\" \"}\n            </div>\n          </div>\n          <div className=\"demo-right \">\n            <div className=\"dlab-scroll demo-right-inner  navigation navbar\">\n              <h4 className=\"title\">Accordion</h4>\n              <ul className=\"navbar-nav nav\" id=\"menu-bar\">\n                {sidebarData.map((item, index) => (\n                  <li key={index}>\n                    <Link\n                      to={item.to}\n                      smooth={true}\n                      className={`scroll ${index === activeLink ? \"active\" : \"\"} `}\n                      activeClass=\"active\"\n                      spy={true}\n                      onClick={() => setActiveLink(index)}\n                    >\n                      {item.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UiAccordion;\n","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;"],"names":["UiAccordion","defaultAccordion","title","text","bg","activeLink","setActiveLink","useState","_jsxs","Fragment","children","_jsx","PageTitle","activeMenu","motherMenu","pageContent","className","Row","Col","xl","Card","name","Tab","Container","defaultActiveKey","Header","Title","Text","Nav","as","id","role","Item","Link","type","eventKey","Content","Pane","Body","Accordion","map","d","i","concat","Collapse","Highlight","data","to","select","item","index","smooth","activeClass","spy","onClick","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","Component","bsPrefix","props","useContext","AccordionContext","useBootstrapPrefix","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","activeKey","flush","controlledProps","useUncontrolled","prefix","Object","assign","Button","_len","arguments","length","funcs","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","inProp","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","computedDimension","handleEnter","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","childRef","state","innerProps"],"sourceRoot":""}