{"version":3,"file":"static/js/87.8bc1d5c2.chunk.js","mappings":"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","sources":["jsx/components/VehicleDropdown/index.jsx","jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from \"react-select\";\nimport { getDrivers } from '../../../services/api/driverService';\nimport { getVehicles } from '../../../services/api/VehicleService';\nimport usePagination from '../../../hooks/usePagination';\nconst VehicleDropdown = ({\n    onChange,\n    value,\n    customStyles,\n    branchids,\n    ref,\n    isDisabled,\n    name\n}) => {\n    const [dropDownOptions, setdropDownOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(value);\n    const { page } = usePagination();\n    useEffect(() => {\n        const fetchVehicles = async () => {\n            const response = await getVehicles(page, branchids ? branchids : undefined);\n            const vehicleOptions = response.data.map((item) => ({\n                label: item?.vehicleName,\n                value: item?._id,\n            }));\n\n            setdropDownOptions(vehicleOptions);\n        };\n        fetchVehicles();\n    }\n    , [page,branchids]);\n    useEffect(() => {\n        if (value && Array.isArray(value)) {\n          const selected = dropDownOptions.filter((option) =>\n            value.some((val) => val === option.value)\n          );\n          setSelectedOption(selected);\n        } else {\n          setSelectedOption(value);\n        }\n      }, [value, dropDownOptions,branchids]);\n\n    return (\n            <Select\n                options = {dropDownOptions}\n                value={selectedOption}\n                onChange={(newValue) => onChange(newValue)}\n                styles={customStyles}\n                ref={ref}\n                name={name}\n                isMulti\n                />\n    );\n}\nexport default VehicleDropdown;","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\nimport { getTemplates } from \"../../../../services/api/TemplateServices\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError } from \"../../../../utils/toast\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { getGroups } from \"../../../../services/api/BusinessGroup\";\nimport { getCompany } from \"../../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../BranchDropdown\";\nimport CompanyDropdown from \"../../CompanyDropdown\";\nimport GroupDropdown from \"../../GroupDropdown\";\nimport ParentBranchDropdown from \"../../ParentBranch\";\nimport VehicleDropdown from \"../../VehicleDropdown\";\nimport { unitOfDistanceOptions } from \"../VehicleTabs/Options\";\nimport UserLocation from \"../../UserLocation\";\nimport LocationSelector from \"../../LocationSelector\";\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n  formData,\n}) => {\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const [defaultCountry,setDefaultCountry] = useState();\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const { checkRole, checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEdit, setIsEdit] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const [companyId, setCompanyId] = useState(null);\n  const [branchId, setBranchId] = useState([])\n  const [locationData, setLocationData] = useState(null);\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const { t } = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  async function onGroupChange(groupId) {\n    const companies = allCompanies\n      .filter((item) => item?.companyId?.businessGroupId?._id == groupId)\n      .map((item) => ({\n        value: item?.companyId?._id,\n        label: item?.companyId?.companyName,\n      }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\nconsole.log(\"errors\",errors);\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter((item) => item?.companyId?._id == companyId)\n      .map((item) => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error);\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error);\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    fetchOptions();\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const role = checkRole();\n  const { id } = useParams();\n  // const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if (role === \"SUPER_ADMIN\") {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  } else {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  }\n\n\n  const [filteredUserData, setFilteredUserData] = useState([]);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n  const [businessDisabled, setBusinessDisabled] = useState(false);\n  const [companyDisabled, setCompanyDisabled] = useState(false);\n\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState([]);\n  useEffect(() => {\n    if (userDetails.user.role === \"COMPANY\") {\n      setValue(\"businessGroupId\", userDetails?.user.businessGroupId[0]?._id);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId[0]?._id);\n      setGroupId(userDetails?.user.businessGroupId[0]?._id);\n      setBusinessDisabled(true);\n      setValue(\"parentCompany\", userDetails?.user.companyId[0]?._id);\n      setCompanyId(userDetails?.user.companyId[0]?._id);\n      setCompanyDisabled(true);\n    }\n    if (userDetails.user.role === \"BUSINESS_GROUP\") {\n      // setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId?._id);\n      setValue(\"businessUser\", userDetails?.user?.businessGroupId[0]?._id);\n      setBusinessDisabled(true);\n    }\n  }, []);\n  \n  useEffect(()=>{\n    if(formData && id){\n      setValue(\"businessUser\",formData?.[0]?.businessGroupId)\n      setValue(\"companyId\",formData?.[0]?.companyId)\n      setValue(\"branchIds\",formData?.[0]?.branchIds)\n      setValue(\"vehicleIds\",formData?.[0]?.vehicleIds)\n      setValue(\"email\",formData?.[0]?.email)\n      setValue(\"userName\",formData?.[0]?.userName)\n      setValue(\"mobileNumber\",formData?.[0]?.mobileNumber)\n      setValue(\"country\",formData[0].country)\n      setDefaultCountry({ name:formData[0].country })\n      setValue(\"state\",formData[0].state || '' )\n      setSelectStateName({name : formData[0].state || ''})    \n      setValue(\"featureTemplateId\",formData?.[0]?.featureTemplateId)\n      setValue(\"unitOfDistance\", formData?.[0].unitOfDistance);\n    }\n  },[formData,id])\n\n  const handleLocationData = useCallback((data) => {\n    setLocationData(data);\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\", margin: \"auto\" }}>\n      <UserLocation onLocationData={handleLocationData} />\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                key={groupId}\n                onChange={async (newValue) => {\n                  setValue(\"businessUser\", newValue.value);\n                  setGroupId(newValue.value);\n                  setCompanyId(null);\n                }}\n                value={value}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={businessDisabled}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  setValue(\"companyId\", newValue.value);\n                  setCompanyId(newValue.value);\n                }}\n                key={groupId}\n                groupId={groupId}\n                value={value}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={companyDisabled}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"branchIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <BranchDropdown\n              onChange={(newValue) => {\n                const newArray = newValue.map((temp)=> temp.value)\n                setValue(\"branchIds\", newArray);\n                setBranchId(newArray)\n              }}\n              value={value}\n              customStyles={customStyles}\n              ref={ref}\n              companyId={companyId}\n              name={name}\n              isDisabled={companyId  ? false  : true}\n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"vehicle\")}</label>\n          <Controller\n            name=\"vehicleIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <VehicleDropdown\n              onChange={(newValue) => {\n                const newArray = newValue.map((temp)=> temp.value)\n                setValue(\"vehicleIds\", newArray);\n              }}\n              value={value}\n              branchids={branchId}\n              customStyles={customStyles}\n              ref={ref}\n              name={name}\n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n  \n              <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          dValues={formData?.[0]}\n          id={id}\n          showCity={false}\n        />\n        {!id && (        \n          <>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0] ? filteredUserData[0].password : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0]\n                      ? filteredUserData[0].confirmPassword\n                      : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setTempValue(e);\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(\n                  (option) => option.value === field.value\n                )}\n                // defaultValue={filteredUserData[0] ? TemplateOptions.find(option => option._id === filteredUserData[0].featureTemplateId) : \"\"}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput6\" className=\"form-label\">\n            {t(\"unitOfDistance\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"unitOfDistance\", newValue.value);\n                  setTempValue(newValue.value);\n                }}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{\n                  label: getValues(\"unitOfDistance\"),\n                  value: getValues(\"unitOfDistance\"),\n                }}\n              />\n            )}\n          />\n          {!getValues(\"unitOfDistance\") && (\n            <Error errorName={errors.unitOfDistance} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema, subUserEditAccountSchema } from \"../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\nimport { createUser, updateUser } from \"../../../services/api/UserServices\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { checkRole, checkUserName } = useStorage();\n  const role = checkRole();\n  const userName = checkUserName();\n  const tabHeading = [t(\"account\")];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { formData } = location.state || {};\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver( id ? subUserEditAccountSchema: subUserAccountSchema),\n  });\n\n  console.log(errors, \"erroe:-\")\n\n  const onSubmit = async (data) => {\n    if (data.businessUser) {\n      data.businessGroupId = data.businessUser;\n    }\n    if (data.parentCompany) {\n      data.companyId = data.parentCompany;\n    }\n    if (data.Branch) {\n      console.log(data.Branch);\n      data.branchId = data.Branch;\n    }\n    if(id){\n      try {\n        // data.role = \"USER\";\n        // data.parent = userName;\n        // data.type = \"STAFF\";\n        const response = await updateUser(id,data);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User updated successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n    else{\n      try {\n        data.role = \"USER\";\n        data.parent = userName;\n        data.type = \"STAFF\";\n        const response = await createUser(data);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User created successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n  };\n \n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                          formData = {formData}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n","import requests from \"./Axios\";\nimport axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios()\n\n\nexport const getTemplates = async (page) => {\n  try {\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n    const response = await axios.get(url);\n      return response.data;\n  } catch(error){\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" }\n  }\n}\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  \n//   getStaffById: async (id, body) => {\n//     return requests.post(`/admin/${id}`, body);\n//   },\n\n\n  createTemplate: async (body) => {\n\n    try {\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  }\n};\n\nexport default TemplateServices;\n"],"names":["_ref","onChange","value","customStyles","branchids","ref","isDisabled","name","dropDownOptions","setdropDownOptions","useState","selectedOption","setSelectedOption","page","usePagination","useEffect","async","vehicleOptions","getVehicles","undefined","data","map","item","label","vehicleName","_id","fetchVehicles","Array","isArray","selected","filter","option","some","val","_jsx","Select","options","newValue","styles","isMulti","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","formData","selectStateName","setSelectStateName","defaultCountry","setDefaultCountry","defaultValue","setDefaultValue","allGroups","setAllGroups","allCompanies","setAllCompanies","allBranches","setAllBranches","checkRole","checkUser","useStorage","tempValue","setTempValue","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","isEdit","setIsEdit","groupId","setGroupId","companyId","setCompanyId","branchId","setBranchId","locationData","setLocationData","userDetails","JSON","parse","localStorage","getItem","t","useTranslation","base","padding","console","log","response","getGroups","companyResponse","getCompany","branchResponse","getAllBranch","error","notifyError","groups","groupOptions","_item$businessGroupId","_item$businessGroupId2","businessGroupId","groupName","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyName","branches","branchOptions","branchName","setParentOptions","fetchOptions","getTemplates","tempOptions","role","id","useParams","loggedinemail","defaultCompanyOptions","DummyData","userName","parent","filteredUserData","setFilteredUserData","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","businessDisabled","setBusinessDisabled","companyDisabled","setCompanyDisabled","filteredCompanyData","setFilteredCompanyData","_userDetails$user$bus","_userDetails$user$bus2","_userDetails$user$bus3","_userDetails$user$com","_userDetails$user$com2","_userDetails$user$bus4","_userDetails$user","_userDetails$user$bus5","user","_formData$","_formData$2","_formData$3","_formData$4","_formData$5","_formData$6","_formData$7","_formData$8","branchIds","vehicleIds","email","mobileNumber","country","state","featureTemplateId","unitOfDistance","handleLocationData","useCallback","children","_jsxs","className","style","width","margin","UserLocation","onLocationData","Controller","rules","required","render","_ref2","field","GroupDropdown","_ref3","CompanyDropdown","_ref4","BranchDropdown","newArray","temp","Error","errorName","_ref5","VehicleDropdown","htmlFor","CustomInput","type","placeholder","min","onInput","e","Math","max","target","LocationSelector","dValues","showCity","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref6","find","_ref7","unitOfDistanceOptions","display","justifyContent","Button","Title","editData","setEditData","activeIndex","setActiveIndex","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","location","useLocation","formState","useForm","resolver","yupResolver","subUserEditAccountSchema","subUserAccountSchema","businessUser","parentCompany","Branch","updateUser","notifySuccess","createUser","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane","initAxios","url","axios","get","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}