{"version":3,"file":"static/js/8842.609c9ddc.chunk.js","mappings":"0KAKe,SAASA,EAAaC,GAA2B,IAA1B,QAAEC,EAAO,WAAEC,GAAYF,EAC3D,MAAMG,GAAKC,EAAAA,EAAAA,QAAO,OAElBC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAC0B,KAAzB,QAAXA,EAAAH,EAAII,eAAO,IAAAD,OAAA,EAAXA,EAAaE,YAAYC,SAAgBR,GAC3CS,EAAAA,QAAUT,GAASU,WAAWC,IAKzB,IAADC,EACsDC,EAI/CC,GARPH,aAAiBF,EAAAA,UACjBE,aAAiBF,EAAAA,SACjBE,aAAiBF,EAAAA,UAER,OAALE,QAAK,IAALA,GAAc,QAATC,EAALD,EAAOI,eAAO,IAAAH,GAAdA,EAAgBI,WAAWC,QAAUf,EAAII,QAC3C,IAAIG,EAAAA,OAASE,EAAMI,QAAQG,SAASC,YAAYC,QAAQC,UAAW,CACjEJ,OAAqB,QAAfJ,EAAEF,EAAMI,eAAO,IAAAF,OAAA,EAAbA,EAAeG,WAAWC,SACjCK,MAAMpB,EAAII,SAEF,QAAXQ,EAAAZ,EAAII,eAAO,IAAAQ,GAAXA,EAAaS,SAASZ,GAE1B,GAEJ,GACC,CAACX,IAEJ,MAAMwB,EAAeA,KAAO,IAADC,EACzB,MAAMC,EAAiB,QAAdD,EAAGvB,EAAII,eAAO,IAAAmB,OAAA,EAAXA,EAAaE,YACzBC,QAAQC,IAAIH,GACM,uBAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKI,OACP7B,EAAWyB,EACb,EAGF,OACEK,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAC9B,IAAKA,EAAI+B,UACrBF,EAAAA,EAAAA,KAACG,EAAAA,EAAW,CACVC,SAAS,WACTC,SAAUZ,EACVa,UAAWb,EACXc,UAAWd,EACXe,KAAM,CACJC,WAAW,EACXC,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,QAAQ,EACRC,cAAc,MAKxB,C,0JC9CA,MAqBA,EArByB9C,IAAe,IAAd,KAAE+C,GAAM/C,EAEhC,OACEgC,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAAShB,UAChDF,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAAEG,MAAO,QAASjB,UAC5BkB,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXC,OAAQ,CAAE,QAAS,SACnBC,KAAM,GACNC,aAAa,EAAMtB,SAAA,EAEnBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,YAAY,yEACZC,IAAI,6CAENP,EAAAA,EAAAA,MAACQ,EAAAA,EAAM,CAACC,OAAQ,CAACC,WAAW,OAAQ1B,SAAU,CAAE,QAAS,SAASF,SAAA,EAAEF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAAA7B,SAAC,wBAA0BF,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAAA9B,SAAC,gCAG9G,C,6FCrBR,MAWA,EAXuB+B,KAGnBb,EAAAA,EAAAA,MAAAc,EAAAA,SAAA,CAAAhC,SAAA,EACEF,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAACC,UAAU,kBAAkBC,UAAW,kBAAmBC,YAAa,cACtFtC,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,MAAKrC,UAClBF,EAAAA,EAAAA,KAACwC,EAAAA,EAAO,CAACzB,KALF,CAAC,CAAC0B,IAAI,WAAWC,IAAI,YAAY,CAACD,IAAI,QAAQC,IAAI,gB","sources":["jsx/components/maps/EditControl.jsx","jsx/components/maps/ShowMap.jsx","jsx/pages/company/tracking/BranchTracking.jsx"],"sourcesContent":["import React,{useEffect, useRef} from 'react';\nimport * as L from 'leaflet';\nimport { FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\n\nexport default function EditControlFC({ geojson, setGeojson }) {\n  const ref =useRef(null);\n\n  useEffect(() => {\n    if (ref.current?.getLayers().length === 0 && geojson) {\n      L.geoJSON(geojson).eachLayer((layer) => {\n        if (\n          layer instanceof L.Polyline ||\n          layer instanceof L.Polygon ||\n          layer instanceof L.Marker\n        ) {\n          if (layer?.feature?.properties.radius && ref.current) {\n            new L.Circle(layer.feature.geometry.coordinates.slice().reverse(), {\n              radius: layer.feature?.properties.radius,\n            }).addTo(ref.current);\n          } else {\n            ref.current?.addLayer(layer);\n          }\n        }\n      });\n    }\n  }, [geojson]);\n\n  const handleChange = () => {\n    const geo = ref.current?.toGeoJSON();\n    console.log(geo);\n    if (geo?.type === 'FeatureCollection') {\n      setGeojson(geo);\n    }\n  };\n\n  return (\n    <FeatureGroup ref={ref}>\n      <EditControl\n        position=\"topright\"\n        onEdited={handleChange}\n        onCreated={handleChange}\n        onDeleted={handleChange}\n        draw={{\n          rectangle: false,\n          circle: true,\n          polyline: true,\n          polygon: true,\n          marker: true,\n          circlemarker: false,\n        }}\n      />\n    </FeatureGroup>\n  );\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport MapModes from \"./MapModes\";\nimport \"../../../scss/pages/_driver-tracking.scss\"\nimport { createRoot } from 'react-dom/client';\nimport { MapContainer, TileLayer, GeoJSON,Marker,Popup ,Tooltip} from 'react-leaflet';\nimport EditControlFC from './EditControl';\n\nconst ShowMapContainer = ({ data }) => {\n\n  return (\n    <div style={{ display: 'flex', height: '85vh' }}>\n    <div style={{ width: '100%' }}>\n      <MapContainer\n        center={[ 25.2233, 55.2869]}\n        zoom={14}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n        />\n        <Marker styles={{background:'red'}} position={[ 25.2233, 55.2869]} ><Popup>Dubai Trade Center</Popup><Tooltip>Dubai Trade Center</Tooltip></Marker>\n      </MapContainer>\n    </div>\n  </div>\n  );\n};\n\nexport default ShowMapContainer;\n// const { isTrafficClick, setIsTrafficClick } = useContext(ThemeContext);\n\n// const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n// const { isLoaded } = useLoadScript({\n//   googleMapsApiKey: `${apiKey}`,\n// });\n{/* <div className=\"vehicle_tracking\">\n      <MapModes />\n      {!isLoaded ? (\n        <h3> Loading....</h3>\n      ) : (\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"80vh\" }}\n          center={data[0]}\n          zoom={13}\n        >\n          {!isTrafficClick ? (\n            data?.map(({ lat, lng }, index) => {\n              return <Marker key={index} position={{ lat, lng }} />;\n            })\n          ) : (\n            <TrafficLayer />\n          )}\n        </GoogleMap>\n      )}\n\n      \n    </div> */}\n","import React from 'react'\nimport MainPagetitle from '../../../layouts/MainPagetitle'\nimport ShowMap from '../../../components/maps/ShowMap'\n\nconst BranchTracking = () => {\n  const data = [{lat:30.7099475,lng:76.6900474},{lat:30.7333,lng:76.7794}]\n  return (\n    <>\n      <MainPagetitle mainTitle=\"Branch Tracking\" pageTitle={'Branch Tracking'} parentTitle={'Tracking'} />\n      <div className='p-2'>\n        <ShowMap data={data}/>\n      </div>\n    </>\n  )\n}\nexport default BranchTracking;"],"names":["EditControlFC","_ref","geojson","setGeojson","ref","useRef","useEffect","_ref$current","current","getLayers","length","L","eachLayer","layer","_layer$feature","_layer$feature2","_ref$current2","feature","properties","radius","geometry","coordinates","slice","reverse","addTo","addLayer","handleChange","_ref$current3","geo","toGeoJSON","console","log","type","_jsx","FeatureGroup","children","EditControl","position","onEdited","onCreated","onDeleted","draw","rectangle","circle","polyline","polygon","marker","circlemarker","data","style","display","height","width","_jsxs","MapContainer","center","zoom","zoomControl","TileLayer","attribution","url","Marker","styles","background","Popup","Tooltip","BranchTracking","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","className","ShowMap","lat","lng"],"sourceRoot":""}