{"version":3,"file":"static/js/9078.5f32cac4.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/BusinessGroupTabs/MyAccount.jsx","jsx/components/TabComponent/BusinessGroupTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/BusinessForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport DummyData from \"../../../../users.json\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport { useParams } from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport { storageCapacityOptions } from \"../VehicleTabs/Options\";\n\nconst MyAccount = ({\n  data,\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n}) => {\n  const [selectStateName, setSelectStateName] = useState({\n    name: \"Select State\",\n  });\n  const {t} = useTranslation();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [tempValue, setTempValue] = useState();\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const { id } = useParams();\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \",\n    }),\n  };\n  // useEffect(()=>{\n  //   console.log(\"outside\");\n  //   console.log(stateid);\n  //   if(stateid !== 0){\n  //     console.log(\"inside\");\n  //     setstateid(0);\n  //     setValue(\"state\", '');\n  //   }\n  // },[countryid])\n\n  const user = localStorage.getItem(\"loginDetails-email\");\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('businessGroupName')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"userName\")}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('username')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name2\"\n            name=\"userName2\"\n            placeholder=\"\"\n            defaultValue={getValues(\"userName2\")}\n          />\n          <Error errorName={errors.userName2} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('email')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"email\"\n            label=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        {!id && (\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n            {t('password')}<span className=\"text-danger\">*</span>\n            </label>\n            <CustomInput\n              type=\"password\"\n              register={register}\n              name=\"password\"\n              label=\"password\"\n              placeholder=\"\"\n              defaultValue={getValues(\"password\")}\n            />\n            <Error errorName={errors.password} />\n          </div>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('helpDeskEmail')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"helpDeskEmail\"\n            label=\"Help Desk Email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"helpDeskEmail\")}\n          />\n          <Error errorName={errors.helpDeskEmail} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('helpDeskTelephoneNumber')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Help Desk Telephone Number\"\n            name=\"helpDeskTelephoneNumber\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"helpDeskTelephoneNumber\")}\n          />\n          <Error errorName={errors.helpDeskTelephoneNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n          {t('mobileNumber')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            name=\"mobileNumber\"\n            label=\"Mobile Number\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"mobileNumber\")}\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('whatsappContactNumber')}</label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Whatsapp Contact Number\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"whatsappContactNumber\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n          {t('country')}<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setSelectStateName({ name: \"Select State\" });\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">{t('state')}</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={isStateDisabled ? 0: countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              defaultValue={selectStateName}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('city')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n          {t('zipCode')}\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Zip Code\"\n            name=\"zipCode\"\n            placeholder=\"\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            defaultValue={getValues(\"zipCode\")}\n          />\n          <Error errorName={errors.zipCode} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('storageCapacity')}</label>\n          <Controller\n            name=\"storageCapacity\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"storageCapacity\", newValue.value)}\n                options={storageCapacityOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={storageCapacityOptions[1]}\n              />\n            )}\n          />\n\n            <p style={{fontStyle: \"italic\"}}>\n              {t('forMoreThan120DaysPlease')}<a href=\"#\" class=\"link-primary\">{t('contact')}</a> {t('yourAccountManager')}\n            </p>\n\n        </div>\n\n\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('street1')}<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street1\"\n            name=\"street1\"\n            placeholder=\"\"\n            defaultValue={getValues(\"street1\")}\n          />\n          <Error errorName={errors.street1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          {t('street2')}\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street2\"\n            name=\"street2\"\n            placeholder=\"\"\n            defaultValue={getValues(\"street2\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('contactPerson')}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Contact Person\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n            defaultValue={getValues(\"contactPerson\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n          {t('faxNumber')}\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Fax Number\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"faxNumber\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">{t('uploadLogo')}</label>\n          <input\n            type=\"file\"\n            {...register('businessGroupLogo')}\n            label=\"Business Group Logo\"\n            name=\"businessGroupLogo\"\n            className=\"form-control\"\n          />\n          <Error errorName={errors.businessGroupLogo} />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t('submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport CustomInput from '../../Input/CustomInput'\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport TimezoneSelect from 'react-timezone-select'\nimport { currencyOptions } from \"../VehicleTabs/Options\";\nimport { dayOptions } from \"../VehicleTabs/Options\";\nimport { statusOptions } from \"../VehicleTabs/Options\";\nimport { languageOptions } from \"../VehicleTabs/Options\";\nimport {useTranslation} from 'react-i18next'\n\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n  preferredCurrencyUnitOptions,\n  unitOfFuelOptions,\n  fuelEconomyScalingOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, handleSubmit, onSubmit,errors, control, register }) => {\nconst {t} = useTranslation();\n  const [selectedTimezone, setSelectedTimezone] = useState(Intl.DateTimeFormat().resolvedOptions().timeZone)\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('dateFormat')}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('timeFormat')}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('unitOfDistance')}</label>\n          <Controller\n            name=\"fuelEconomyScaling\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) =>\n                  setValue(\"unitOfDistance\", newValue.value)\n                }\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={fuelEconomyScalingOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('unitOfFuel')}</label>\n          <Controller\n            name=\"unitOfFuel\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                options={unitOfFuelOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('language')}</label>\n          <Controller\n            name=\"language\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"language\", newValue.value)}\n                options={languageOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={languageOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('status')}</label>\n          <Controller\n            name=\"status\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"status\", newValue.value)}\n                options={statusOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={statusOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('worksStartDay')}</label>\n          <Controller\n            name=\"worksstartday\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"worksstartday\", newValue.value)}\n                options={dayOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dayOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">{t('currency')}</label>\n          <Controller\n            name=\"currency\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"currency\", newValue.value)}\n                options={currencyOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={currencyOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n        <label className=\"form-label\">{t('timeZone')} </label>\n          <Controller\n            name=\"timezone\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <TimezoneSelect\n                // onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                onChange={setSelectedTimezone}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n                value={selectedTimezone}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">{t('uploadFile')}</label>\n          <CustomInput\n            type=\"file\"\n            register={register}\n            label=\"Business Group Logo\"\n            name=\"businessGroupLogo\"\n            className=\"form-control\"\n          />\n          <Error errorName={errors.businessGroupLogo} />\n        </div>\n\n\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t('submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport MyAccount from \"../../../../components/TabComponent/BusinessGroupTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/BusinessGroupTabs/UserSetting\";\nimport ManagePassword from \"../../../../components/TabComponent/AdminProfileTabs/ManagePassword\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { businessGroupAccountSchema, businessGroupSettingSchema } from \"../../../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../../../utils/toast\";\nimport {useTranslation} from 'react-i18next'\n\nconst BusinessForm = ({ Title, editData, setEditData }) => {\n  const {t} = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [t('newBusinessGroup'), t('settings'),t('changePassword')];\n  const component = [MyAccount, UserSetting,ManagePassword];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n  const { id } = useParams(); \n\n  if(!id){\n    component.pop();\n    tabHeading.pop();\n  }\n\n  // Fetch data from local storage when the id changes\n  useEffect(() => {\n    const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n    console.log(existingData, id)\n    const businessData = existingData.find((item) => item.id === parseInt(id, 10));\n    if (businessData) {\n      reset(businessData);\n    }\n  }, [id]);\n\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    reset,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(\n      activeIndex === 1 ?  businessGroupSettingSchema : businessGroupAccountSchema\n  ),\n    });\n\n  const onSubmit = (data) => {\n    if (activeIndex === totalTabs - 1) {\n      try {\n        const existingUserData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n        data.id = `${existingUserData.length + 1}`;\n        data.role = 'businessgroup';\n        data.parent = 'admin';\n        existingUserData.push(data);\n        localStorage.setItem(\"userJsonData\", JSON.stringify(existingUserData));\n        notifySuccess(\"New Business Group Created !\");\n        navigate(\"/business\");\n        return;\n      } catch (error) {\n        notifyError(\"Some error occured !!\");\n      }\n    }\n    \n    if(!id){\n      const existingUserData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = `${existingUserData.length + 1}`;\n      data.role = 'businessgroup';\n      data.parent = 'admin';\n      existingUserData.push(data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingUserData));\n      notifySuccess(\"New Business Group Created !\");\n      navigate('/business')\n    }\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle= {t('businessGroup')}\n        pageTitle={id?t('edit'):t('create')}\n        parentTitle={t('businessGroup')}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BusinessForm;\n"],"names":["_ref","data","setValue","getValues","register","onSubmit","handleSubmit","errors","control","selectStateName","setSelectStateName","useState","name","t","useTranslation","countryid","setCountryid","stateid","setstateid","tempValue","setTempValue","isStateDisabled","setIsStateDisabled","id","useParams","customStyles","base","padding","localStorage","getItem","_jsxs","className","children","style","width","margin","_jsx","CustomInput","type","label","placeholder","defaultValue","Error","errorName","userName","userName2","email","password","helpDeskEmail","min","onInput","e","temp","Math","max","target","value","helpDeskTelephoneNumber","mobileNumber","CountrySelect","onChange","containerClassName","inputClassName","placeHolder","country","concat","background","StateSelect","htmlFor","city","zipCode","Controller","render","_ref2","field","ref","Select","newValue","options","storageCapacityOptions","styles","fontStyle","href","class","street1","businessGroupLogo","display","justifyContent","Button","onClick","selectedTimezone","setSelectedTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","dateFormatOptions","dateFormat","_ref3","timeFormatOptions","_ref4","unitOfDistanceOptions","fuelEconomyScalingOptions","_ref5","unitOfFuelOptions","_ref6","languageOptions","_ref7","statusOptions","_ref8","dayOptions","_ref9","currencyOptions","_ref10","TimezoneSelect","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","ManagePassword","totalTabs","length","navigate","useNavigate","pop","useEffect","existingData","JSON","parse","console","log","businessData","find","item","parseInt","reset","formState","useForm","resolver","yupResolver","businessGroupSettingSchema","businessGroupAccountSchema","existingUserData","role","parent","push","setItem","stringify","notifySuccess","error","notifyError","prevIndex","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}