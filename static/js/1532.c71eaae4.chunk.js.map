{"version":3,"file":"static/js/1532.c71eaae4.chunk.js","mappings":"4MAKA,MAgFA,EAhFyBA,IAOlB,IAPmB,YACxBC,EAAW,YACXC,EAAW,SACXC,EAAQ,GACRC,EAAE,QACFC,EAAO,SACPC,GACDN,EACC,MAAM,EAAEO,IAAMC,EAAAA,EAAAA,OACPC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAS,OACzDG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,EAAAA,GAAAA,WAAcf,GAC9B,GAAIc,EAAS,CACX,MAAME,EAAeF,EAAQN,UACzBQ,GAAgBA,EAAaC,OAAS,IACxCR,EACEO,EAAaE,KAAKC,IAAQ,CACxBC,MAAM,QAADC,OAAUC,EAAaH,GAAS,MAAAE,OAAKF,EAAQ,KAClDI,MAAOJ,OAIXP,EAAoB,CAClBQ,MAAM,QAADC,OAAUC,EAAaN,EAAa,IAAG,MAAAK,OAAKL,EAAa,GAAE,KAChEO,MAAOP,EAAa,KAEtBd,EAAS,WAAYc,EAAa,IAEtC,IACC,CAAChB,KAEJa,EAAAA,EAAAA,YAAU,KACR,GAAIT,GAAWD,EAAI,CAAC,IAADqB,EAAAC,EACjB,MAAMN,EACS,cAAbd,EACqB,QADGmB,EACpBpB,EAAQsB,iBAAS,IAAAF,OAAA,EAAjBA,EAAmBL,SACN,oBAAbd,EACyB,QADKoB,EAC5BrB,EAAQuB,uBAAe,IAAAF,OAAA,EAAvBA,EAAyBN,SACzBf,EAAQe,SAEhBjB,EAAS,WAAYiB,GAEjBA,IACFP,EAAoB,CAClBQ,MAAM,QAADC,OAAUC,EAAaH,GAAS,MAAAE,OAAKF,GAC1CI,MAAOJ,IAETS,QAAQC,IAAIlB,EAAkB,MAElC,IACC,CAACP,EAASD,IAEb,MAKMmB,EAAgBH,IACpB,MAAMW,EAAgBf,EAAAA,GAAAA,YAAeI,GAAUY,UACzCC,EAAcC,KAAKC,IAAID,KAAKE,MAAML,EAAgB,KAClDM,EAAyBH,KAAKC,IAAIJ,EAAgB,IAExD,MAAM,GAANT,OADmBS,GAAiB,EAAI,IAAM,KAC1BT,OAAGW,EAAW,KAAAX,OAAIe,EAAuBC,WAAWC,SAAS,EAAG,KAAI,EAG1F,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,WAAUD,SAAA,CAAEnC,EAAE,YAAY,QACzCqC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLzC,GAAG,WACHoB,MAAOZ,EACPkC,OAAQ5C,EACR6C,SApBwBC,IAE5B7C,EAAS,WAAY6C,EAAexB,OACpCX,EAAoBmC,EAAe,EAkB/BC,QAASxC,MAEP,ECzEJyC,EAAe,CACnBC,QAAUC,IAAI,IACTA,EACHC,QAAS,eAsLb,EAlLyBrD,IAUlB,IAVmB,SACxBsD,EAAQ,SACRnD,EAAQ,OACRoD,EAAM,UACNC,EAAS,aACTC,EAAY,QACZpD,EAAO,GACPD,EAAE,SACFsD,EAAQ,SACRpD,GACDN,EACC,MAAM,EAAEO,IAAMC,EAAAA,EAAAA,OACPmD,EAAiBC,IAAsBjD,EAAAA,EAAAA,UAAS,OAChDkD,EAAeC,IAAoBnD,EAAAA,EAAAA,UAAS,OAC5CoD,EAAeC,IAAoBrD,EAAAA,EAAAA,UAAS,KAC5CsD,EAAWC,IAAgBvD,EAAAA,EAAAA,UAAS,KACpCV,EAAakE,IAAkBxD,EAAAA,EAAAA,UAAS,QAE/CG,EAAAA,EAAAA,YAAU,MACRsD,EAAAA,EAAAA,MAAeC,MAAMC,IACnBN,EAAiBM,EAAO,GACxB,GACD,KAEHxD,EAAAA,EAAAA,YAAU,KACR,GAAIV,EAAI,CAEN,GADW,OAAPC,QAAO,IAAPA,GAAAA,EAASkE,MAAMpE,EAAS,OAAQE,EAAQkE,MACjC,OAAPlE,QAAO,IAAPA,GAAAA,EAASU,QAAS,CACpBZ,EAAS,UAAWE,EAAQU,SAC5B,MAAMyD,EAASC,EAAeC,MAC3BF,GAAWA,EAAOhD,QAAgB,OAAPnB,QAAO,IAAPA,OAAO,EAAPA,EAASU,WAEvCc,QAAQC,IAAI,CAAE0C,WACVA,GAAQG,EAAoBH,EAClC,CACW,OAAPnE,QAAO,IAAPA,GAAAA,EAASuE,QACXzE,EAAS,QAASE,EAAQuE,OAAS,IACnCd,EAAiB,CACftC,MAAOnB,EAAQuE,MACfvD,MAAOhB,EAAQuE,OAAS,KAG9B,KAAO,CAAC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACLxB,EAAmB,CACjBpC,MAAmB,OAAZiC,QAAY,IAAZA,GAAqB,QAAToB,EAAZpB,EAAc1C,eAAO,IAAA8D,OAAT,EAAZA,EAAuBQ,UAC9BhE,MAAmB,OAAZoC,QAAY,IAAZA,GAAqB,QAATqB,EAAZrB,EAAc1C,eAAO,IAAA+D,OAAT,EAAZA,EAAuBQ,UAEhCnF,EAAS,UAAuB,OAAZsD,QAAY,IAAZA,GAAqB,QAATsB,EAAZtB,EAAc1C,eAAO,IAAAgE,OAAT,EAAZA,EAAuBM,WAC3ClB,EAA2B,OAAZV,QAAY,IAAZA,GAAqB,QAATuB,EAAZvB,EAAc1C,eAAO,IAAAiE,OAAT,EAAZA,EAAuBO,WACtCzB,EAAiB,CACftC,MAAmB,OAAZiC,QAAY,IAAZA,GAAsB,QAAVwB,EAAZxB,EAAc+B,gBAAQ,IAAAP,OAAV,EAAZA,EAAwBQ,qBAC/BpE,OAAmB,OAAZoC,QAAY,IAAZA,GAAsB,QAAVyB,EAAZzB,EAAc+B,gBAAQ,IAAAN,OAAV,EAAZA,EAAwBO,uBAAwB,KAEzDtF,EAAS,SAAqB,OAAZsD,QAAY,IAAZA,GAAsB,QAAV0B,EAAZ1B,EAAc+B,gBAAQ,IAAAL,OAAV,EAAZA,EAAwBM,uBAAwB,IAClE,MAAMC,EAAoBC,EACZ,OAAZlC,QAAY,IAAZA,GAAqB,QAAT2B,EAAZ3B,EAAc1C,eAAO,IAAAqE,OAAT,EAAZA,EAAuBC,YAEzBO,EAAAA,EAAAA,IAASF,GAAmBrB,MAAMC,IAChCJ,EAAaI,EAAO,GAExB,IACC,CAACb,EAAcrD,EAAIC,IAEtB,MAAMsF,EAAkBE,IACtB,MAAM9E,EAAUgD,EAAcW,MAAM3D,GAAYA,EAAQ+E,OAASD,IACjE,OAAO9E,EAAUA,EAAQX,GAAK,IAAI,EAG9BuE,EAAsBoB,UAC1B,MAAMC,EAAkBhD,EAAexB,MAEjCkE,EAAoBC,EAAeK,GAEnCrC,EAAkBI,EAAcW,MACnC3D,GAAYA,EAAQ+E,OAASE,IAEhC7B,EAAeR,EAAgBsC,MAE/B9F,EAAS,UAAW6F,GACpBpC,EAAmB,CAAEpC,MAAOwE,EAAiB3E,MAAOsC,EAAgBuC,OACpEhC,EAAa,IACbJ,EAAiB,CACftC,MAAO,GACPH,MAAO,KAET,MAAMiD,QAAesB,EAAAA,EAAAA,IAASF,GAC9BxB,EAAaI,EAAO,EAkBhB6B,EAAgBvB,GAES,0BAAZ,OAAfjB,QAAe,IAAfA,OAAe,EAAfA,EAAiBtC,QACjBuD,EAAMsB,KAAKE,SAAS,YAEbxB,EAAMsB,KAAKG,QAAQ,WAAY,IAEjCzB,EAAMsB,KAGTzB,EAAiBV,EAAc5C,KAAKJ,IAAO,CAC/CS,MAAOT,EAAQ+E,KACfzE,MAAON,EAAQmF,SAGXI,EAAerC,EAAU9C,KAAKyD,IAAK,CACvCpD,MAAOoD,EAAMsB,KACb7E,MAAO8E,EAAavB,OAGtB,OACEpC,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA7D,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,cAE/BqC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLI,QAASwB,EAETjD,MAAOmC,EACPb,OAAQI,EACRH,SAAU4B,GAHLhB,IAMPA,IAAmBf,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOxC,cAEhDyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAE5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,YACjCqC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLI,QAASqD,EAET9E,MAAOqC,EACPf,OAAQI,EACRH,SA1DmBC,IACzB,MAAM0D,EAAkB1D,EAAexB,MACjCqC,EAAgBI,EAAUS,MAC7BE,GAAUA,EAAMsB,OAASQ,IAGC,0BAAZ,OAAf/C,QAAe,IAAfA,OAAe,EAAfA,EAAiBtC,QACJ,OAAbwC,QAAa,IAAbA,GAAAA,EAAeqC,KAAKE,SAAS,cAE7BvC,EAAcqC,KAAOrC,EAAcqC,KAAKG,QAAQ,WAAY,KAE9DlG,EAAS,QAAS0D,EAAcqC,MAChCpC,EAAiB,CAAEtC,MAAOqC,EAAcqC,KAAM7E,MAAOwC,EAAcqC,MAAO,GA2C/DrC,IAKLA,IAAiBjB,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOqB,WAE7ClB,IACClB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,WACjCqC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAK,OACLtD,SAAUA,EACVjC,MAAM,OACN6E,KAAK,OACLW,YAAY,GACZC,aAActD,EAAU,WAE1BZ,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOgB,UAG5Bb,IACCd,EAAAA,EAAAA,KAACmE,EAAgB,CACf5G,SAAUA,EACVC,GAAIA,EACJH,YAAaA,EACbC,YAAagD,EACb5C,SAAUA,MAGb,C,gGC3LA,MAAM0G,EAAgBjB,UAC3B,MAAM,KAAEkB,SAAeC,EAAAA,EAAMC,IAAI,YACjC,OAAW,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMA,IAAI,EAGNG,EAAkBrB,UAC7B,IAAIsB,EAAM,yBACGC,IAATC,IACFF,GAAG,SAAA/F,OAAaiG,EAAI,UAAU,KAEhC,MAAM,KAAEN,SAAeC,EAAAA,EAAMC,IAAIE,GACjC,MAAO,CACLJ,KAAMA,EAAKA,KAAKA,KAChBO,UAAWP,EAAKA,KAAKO,UACrBC,WAAYR,EAAKA,KAAKQ,WACvB,EAGUC,EAAiB3B,eACfmB,EAAAA,EAAMS,OAAO,qBAADrG,OAAsBlB,IAGpCwH,EAAiB7B,eACfmB,EAAAA,EAAMW,KAAK,oBAAqBC,GAGlCC,EAAiBhC,eACfmB,EAAAA,EAAMc,MAAM,oBAAqBF,GAGnCG,EAAkBlC,UAAe,IAADmC,EAC3C,MAAM,KAAEjB,SAAeC,EAAAA,EAAMC,IAAI,qBAAD7F,OAAsBlB,IACtD,OAAW,OAAJ6G,QAAI,IAAJA,GAAU,QAANiB,EAAJjB,EAAMA,YAAI,IAAAiB,OAAN,EAAJA,EAAYjB,IAAI,C,0ICzBzB,MAoHA,EApH6BjH,IAQtB,IARuB,SAC5B+C,EAAQ,MACRvB,EAAK,aACL0B,EAAY,WACZiF,EAAU,KACVjC,EAAI,YACJW,EAAW,aACXC,GACD9G,EACC,MAAOgD,EAAgBoF,IAAqBzH,EAAAA,EAAAA,UAASa,IAC/C,KAAE+F,EAAI,QAAEc,IAAYC,EAAAA,EAAAA,MACpB,IAAEC,IAAQC,EAAAA,EAAAA,MAEV,KAAEvB,EAAI,cAAEwB,EAAa,YAAEC,EAAW,WAAEC,EAAU,mBAAEC,IACpDC,EAAAA,EAAAA,GAAiB,CACfC,SAAU,CAAC,aACXC,QAASC,IAAoB,IAAnB,UAAEC,GAAWD,EAErB,OADAX,EAAQY,IACD7B,EAAAA,EAAAA,IAAgB6B,EAAU,EAEnCC,iBAAkB,EAClBC,iBAAkBA,CAACC,EAAUC,KAAK,IAAAC,EAAA,OACnB,QAAbA,EAAAF,EAASnC,YAAI,IAAAqC,GAAbA,EAAepI,OAASqG,EAAO,EAAI,IAAI,EACzCgC,QAAShB,EAAI,SAAU,QACvBiB,UAAWC,OAGT,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,CAC3Bb,SAAU,CAAC,WAAYhC,GACvBiC,QAASA,KAAMd,EAAAA,EAAAA,IAAgBnB,GAC/ByC,SAAS,EACTC,UAAWC,MAGPxG,GAAU2G,EAAAA,EAAAA,UAAQ,KACtB,IAAIC,EAAW,GASf,OARI,OAAJ5C,QAAI,IAAJA,GAAAA,EAAMoC,MAAMS,SAASC,IACnBA,EAAS9C,KAAK6C,SAASE,IACrBH,EAASI,KAAK,CACZzI,MAAOwI,EAASE,IAChB7I,MAAO2I,EAAS9D,MAChB,GACF,IAEG2D,CAAQ,GACd,CAAC5C,KAEJnG,EAAAA,EAAAA,YAAU,MACC,OAALU,QAAK,IAALA,OAAK,EAALA,EAAOA,SAAuB,OAAdwB,QAAc,IAAdA,OAAc,EAAdA,EAAgBxB,QAClC4G,EAAkB5G,GAGb,SACN,CAACA,EAAOyB,KAEXnC,EAAAA,EAAAA,YAAU,KACgBiF,WACtB,GAAIe,IAAiBtF,EAAO,CAC1B,MAAM2I,EAAWlH,EAAQyB,MACtBF,GAAWA,EAAOhD,QAAUsF,IAE/B,GAAIqD,EAGF,OAFA/B,EAAkB+B,QAClBpH,EAASoH,GAGX,IACE,MAAQlD,KAAM+C,SAAmBN,IAGjC,GAFA7H,QAAQC,IAAI,CAAEkI,aAEVA,EAAU,CACZ,MAAMI,EAAY,CAChB/I,MAAO2I,EAAS9D,KAChB1E,MAAOwI,EAASE,KAIlB,OAFA9B,EAAkBgC,QAClBrH,EAASqH,EAEX,CACF,CAAE,MAAOC,GACPxI,QAAQC,IAAIuI,EACd,CACF,GAEFC,GACO,SACN,CAACxD,EAActF,IAWlB,OACEoB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLI,QAASA,EACTzB,MAAOwB,EACPD,SAAUA,EACVD,OAAQI,EACRgD,KAAMA,EACNW,YAAaA,EACbsB,WAAYA,IAAeI,EAAI,SAAU,QACzCgC,qBAlBqBxE,UAErByE,EAAMC,OAAOC,aAAeF,EAAMC,OAAOE,YACzCH,EAAMC,OAAOG,eACAjC,GAAcD,IAAgBE,GAC3CH,GACF,EAaEoC,0BAA0B,EAC1BC,UAAWnC,EACXoC,WAAY,CACVC,iBAAkBC,EAAAA,IAEpB,C,sWC9GN,MAkKA,EAlK4BjL,IAYrB,IAZsB,UAC3BkL,EAAS,UACTvJ,EAAS,QACTwJ,EAAO,IACPC,EAAG,SACHrI,EAAQ,MACRvB,EAAK,aACLsF,EAAY,aACZ5D,EAAY,WACZiF,EAAU,QACVkD,EAAO,KACPnF,GACDlG,EACC,MAAOgD,EAAgBoF,IAAqBzH,EAAAA,EAAAA,UAASa,IAC/C,KAAE+F,EAAI,QAAEc,IAAYC,EAAAA,EAAAA,MACpB,IAAEC,IAAQC,EAAAA,EAAAA,MACV,SAAE8C,IAAaC,EAAAA,EAAAA,OAEf,KAAEtE,EAAI,cAAEwB,EAAa,YAAEC,EAAW,WAAEC,EAAU,mBAAEC,IACpDC,EAAAA,EAAAA,GAAiB,CACfC,SAAU,CAAC,WAAYoC,EAAWvJ,EAAWwJ,GAC7CpC,QAASC,IAAoB,IAAnB,UAAEC,GAAWD,EAErB,OADAX,EAAQY,IACDuC,EAAAA,EAAAA,IAAevC,EAAW,GAAI,CACnCiC,UAAWO,MAAMC,QAAQR,GAAaA,EAAUS,KAAK,KAAOT,EAC5DvJ,YACAwJ,WACA,EAEJjC,iBAAkB,EAClBC,iBAAkBA,CAACC,EAAUC,KAAK,IAAAC,EAAA,OACnB,QAAbA,EAAAF,EAASnC,YAAI,IAAAqC,GAAbA,EAAepI,OAASqG,EAAO,EAAI,IAAI,EACzCgC,QAAShB,EAAI,UAAW,QACxBiB,UAAWC,OAgBT,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,CAC3Bb,SAAU,CAAC,UAAWhC,GACtBiC,QAASA,IAfahD,WACtB,IAAI6F,EAAaC,EACjB,MAAMvH,EAAS,GACVmH,MAAMC,QAAQG,KAAMD,EAAa,CAACC,IACvC,IAAK,IAAIzL,KAAMwL,EAAY,CACzB,MAAM3E,QAAa6E,EAAAA,EAAAA,IAAe1L,GAClCkE,EAAO2F,KAAKhD,EACd,CAGA,OAFApF,QAAQC,IAAI,CAAEwC,WAEPA,CAAM,EAKEyH,CAAgBjF,GAC/ByC,SAAS,EACTC,UAAWC,MAGPxG,GAAU2G,EAAAA,EAAAA,UAAQ,KACtB,IAAIC,EAAW,GASf,OARI,OAAJ5C,QAAI,IAAJA,GAAAA,EAAMoC,MAAMS,SAASC,IACnBA,EAAS9C,KAAK6C,SAASkC,IACrBnC,EAASI,KAAK,CACZ5I,MAAW,OAAJ2K,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YACbzK,MAAW,OAAJwK,QAAI,IAAJA,OAAI,EAAJA,EAAM9B,KACb,GACF,IAEGL,CAAQ,GACd,CAAC5C,KAEJnG,EAAAA,EAAAA,YAAU,KACRe,QAAQC,IAAI,CAAEN,UAEVA,GAASA,EAAMN,OAAQkH,EAAkB5G,GACxC4G,OAAkBd,EAAU,GAChC,CAAC4E,KAAKC,UAAU3K,MAEnBV,EAAAA,EAAAA,YAAU,KACgBiF,WACtB,GAAIe,IAAiBtF,EACnB,GAAIiK,MAAMC,QAAQ5E,GAAe,CAC/B,IAAKA,EAAa5F,OAAQ,OAC1B,MAAMiJ,EAAWlH,EAAQmJ,QAAQ5H,GAC/BsC,EAAauF,MAAMC,GAAQ9H,EAAOhD,QAAU8K,MAE9C,GAAInC,EAASjJ,SAAW4F,EAAa5F,OAGnC,OAFAkH,EAAkB+B,QAClBpH,EAASoH,GAGX,IACE,MAAQlD,KAAMsF,SAAsB7C,IACpC,GAAI6C,EAAa,CACf,MAAMnC,EAAuB,OAAXmC,QAAW,IAAXA,OAAW,EAAXA,EAAapL,KAAKqL,IAAE,CACpCnL,MAAOmL,EAAGP,YACVzK,MAAOgL,EAAGtC,QAEZ9B,EAAkBgC,GAClBrH,EAASqH,EACX,CACF,CAAE,MAAOC,GACPxI,QAAQwI,MAAM,kCAAmCA,EACnD,CACF,KAAO,CACL,MAAMF,EAAWlH,EAAQyB,MACtBF,GAAWsC,IAAiBtC,EAAOhD,QAEtC,GAAI2I,EAGF,OAFA/B,EAAkB+B,QAClBpH,EAASoH,GAGX,IACE,MAAQlD,KAAMsF,SAAsB7C,IACpC,GAAI6C,GAAeA,EAAYrL,OAAQ,CACrC,MAAMkJ,EAAY,CAChB/I,MAAkB,OAAXkL,QAAW,IAAXA,OAAW,EAAXA,EAAc,GAAGN,YACxBzK,MAAkB,OAAX+K,QAAW,IAAXA,OAAW,EAAXA,EAAc,GAAGrC,KAE1B9B,EAAkBgC,GAClBrH,EAASqH,EACX,CACF,CAAE,MAAOC,GACPxI,QAAQwI,MAAM,kCAAmCA,EACnD,CACF,MAEAjC,EAAkB5G,EACpB,EAEF8I,EAAiB,GAChB,CAAC4B,KAAKC,UAAUrF,GAAewE,EAAUY,KAAKC,UAAU3K,KAW3D,OACEoB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLI,QAASA,EACTzB,MAAOwB,EACPD,SAAUA,EACVD,OAAQI,EACRkI,IAAKA,EACLlF,KAAMA,EACNW,aAAatG,EAAAA,EAAAA,GAAE,kBACf4H,WAAYA,IAAeI,EAAI,UAAW,QAC1CkE,aAAW,EACXlC,qBApBqBxE,UAErByE,EAAMC,OAAOC,aAAeF,EAAMC,OAAOE,YACzCH,EAAMC,OAAOG,eACAjC,GAAcD,IAAgBE,GAC3CH,GACF,EAeEoC,0BAA0B,EAC1BC,UAAWnC,EACXoC,WAAY,CACVC,iBAAkBC,EAAAA,GAEpBI,QAASA,GACT,E,gDCtJN,MAAMnI,EAAe,CACnBC,QAAUC,IAAI,IACTA,EACHC,QAAS,gBA0Ub,EAtUiBrD,IAUV,IAVW,SAChBsD,EAAQ,SACRnD,EAAQ,SACRuM,EAAQ,aACRC,EAAY,UACZnJ,EAAS,OACTD,EAAM,QACNJ,EAAO,MACPyJ,EAAK,iBACLC,GACD7M,EACC,MAAO8M,EAAcC,IAAmBpM,EAAAA,EAAAA,WAAS,IAC1CqM,EAAqBC,IAA0BtM,EAAAA,EAAAA,WAAS,IACzD,EAAEJ,IAAMC,EAAAA,EAAAA,OACR,GAAEJ,IAAO8M,EAAAA,EAAAA,MACP1H,SAAU/B,EAAc4G,MAAO8C,IAAkBC,EAAAA,EAAAA,MAClDpD,EAAUqD,IAAe1M,EAAAA,EAAAA,aAEzB2M,EAASC,IAAc5M,EAAAA,EAAAA,aACvB6M,EAAQC,IAAa9M,EAAAA,EAAAA,aACrB+M,EAAUC,IAAehN,EAAAA,EAAAA,YAEhC,OACE6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAMmL,MAAO,CAAEC,MAAO,MAAOC,OAAQ,QAASpL,SAAA,EAC3DE,EAAAA,EAAAA,KAAA,OAAAF,SAAMyK,IAAiBvK,EAAAA,EAAAA,KAAA,KAAAF,SAAIyK,OAC3B3K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,oBACjCqC,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,kBACL/C,QAASA,EACT6K,MAAO,CAAEC,UAAU,GACnBC,OAAQlF,IAAA,IAAGmF,OAAO,SAAEpL,EAAQ,MAAEvB,EAAK,KAAE0E,EAAI,IAAEkF,IAAOpC,EAAA,OAChDpG,EAAAA,EAAAA,KAACwL,EAAAA,EAAa,CACZrL,SAAUgD,UACJsI,EAAS7M,OAASgC,EAAU,qBAC9BrD,EAAS,kBAAmBkO,EAAS7M,OACrC+L,EAAW,MACXpN,EAAS,YAAa,IACtBsN,EAAU,MACVtN,EAAS,YAAa,IACtBA,EAAS,aAAc,IACvBwN,EAAY,IACd,EAEF7G,aAActF,EACd0B,aAAcA,EACdkI,IAAKA,EACLlF,KAAMA,GACN,KAGNtD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAO3B,sBAE3BY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,cACjCqC,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,YACL/C,QAASA,EACT6K,MAAO,CAAEC,UAAU,GACnBC,OAAQI,IAAA,IAAGH,OAAO,MAAE3M,EAAK,KAAE0E,EAAI,IAAEkF,IAAOkD,EAAA,OACtC1L,EAAAA,EAAAA,KAAC2L,EAAAA,EAAe,CACdxL,SAAUgD,UACJsI,EAAS7M,OAASgC,EAAU,eAC9BrD,EAAS,YAAakO,EAAS7M,OAC/B+L,EAAWc,GACXZ,EAAU,IACVtN,EAAS,YAAa,IACtBA,EAAS,aAAc,IACvBwN,EAAY,IACd,EAEFxC,QAASyB,EAAM,mBACf9F,aAActF,EACdA,MAAO8L,EACPpK,aAAcA,EACdgD,KAAMA,EACNkF,IAAKA,GACL,KAGNxI,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAO5B,gBAE3Ba,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,aACjCqC,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,YACL/C,QAASA,EACT6K,MAAO,CAAEC,UAAU,GACnBC,OAAQM,IAAA,IAAGL,OAAO,SAAEpL,EAAQ,MAAEvB,EAAK,KAAE0E,EAAI,IAAEkF,IAAOoD,EAAA,OAChD5L,EAAAA,EAAAA,KAAC6L,EAAAA,EAAc,CACb9M,UAAWiL,EAAM,aACjBzB,QAASyB,EAAM,mBACf7J,SAAWsL,IACTlO,EACE,YACQ,OAARkO,QAAQ,IAARA,OAAQ,EAARA,EAAUlN,KAAKqL,GAAOA,EAAGhL,SAE3BrB,EAAS,aAAc,IACvBsN,EAAUY,GACVV,EAAY,GAAG,EAEjB7G,aAActD,EAAU,aACxBhC,MAAOgM,EACPnC,SAAO,EACPnI,aAAcA,EACdkI,IAAKA,EACLlF,KAAMA,GACN,KAGNtD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOmL,eAE3BlM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,SAAOH,UAAU,aAAYC,SAAEnC,EAAE,cACjCqC,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,aACL/C,QAASA,EACT6K,MAAO,CAAEC,UAAU,GACnBC,OAAQS,IAAA,IAAGR,OAAO,SAAEpL,EAAQ,MAAEvB,EAAK,KAAE0E,EAAI,IAAEkF,IAAOuD,EAAA,OAChD/L,EAAAA,EAAAA,KAACgM,EAAe,CACd7L,SAAWsL,IACT,MAAMQ,EAAmB,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUlN,KAAK2N,GAASA,EAAKtN,QAC9CrB,EAAS,aAAc0O,GACvBlB,EAAYU,EAAS,EAEvBvH,aAActD,EAAU,cACxBhC,MAAOkM,EACPxC,UAAW0B,EAAM,aACjBjL,UAAWiL,EAAM,aACjBzB,QAASyB,EAAM,mBACf1J,aAAcA,EACdkI,IAAKA,EACLC,SAAO,EACPnF,KAAMA,GACN,KAGJ1C,EAAU,YAAaZ,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOwL,aAEpDvM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,2BAA2BF,UAAU,aAAYC,SAAA,CAC7DnC,EAAE,SAAS,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAE7CE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAK,QACLtD,SAAUA,EACVjC,MAAM,QACNoB,UAAU,eACVyD,KAAK,QACLW,YAAY,MAEdjE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOyL,YAE3BxM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,CAC1BnC,EAAE,YAAY,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEhDE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAK,OACLtD,SAAUA,EACVjC,MAAM,YACN6E,KAAK,WACLW,YAAY,MAEdjE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAO0L,eAE3BzM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,CAC1BnC,EAAE,gBAAgB,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEpDE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAK,OACLtD,SAAUA,EACVjC,MAAM,gBACN6E,KAAK,eACLgJ,IAAI,IACJC,QAAUC,IACR,MAAMN,EAAO5M,KAAKmN,IAAI,EAAGD,EAAE3E,OAAOjJ,OAClC4N,EAAE3E,OAAOjJ,MAAQsN,EAAO,EAAI,GAAKA,CAAI,EAEvCjI,YAAY,MAEdjE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAO+L,mBAG3B1M,EAAAA,EAAAA,KAAC2M,EAAAA,EAAgB,CACfjM,SAAUA,EACVnD,SAAUA,EACVoD,OAAQA,EACRC,UAAWA,EACXnD,QAAS,CACPuE,MAAOpB,EAAU,SACjBzC,QAASyC,EAAU,YAErBC,aAAcA,EACdrD,GAAIA,EACJsD,UAAU,KAEVtD,IACAoC,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA7D,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,CAC1BnC,EAAE,YAAY,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEhDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAMkG,EAAe,OAAS,WAC9BxJ,SAAUA,EACVjC,MAAM,WACN6E,KAAK,WACLW,YAAY,MAEdjE,EAAAA,EAAAA,KAAA,QACEH,UAAU,mBACV+M,QAASA,KACPzC,GAAiBD,EAAa,EAC9BpK,SAEDoK,GAAelK,EAAAA,EAAAA,KAAC6M,EAAAA,IAAQ,KAAM7M,EAAAA,EAAAA,KAAC8M,EAAAA,IAAK,UAGzC9M,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOoM,eAE3BnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,CAC1BnC,EAAE,mBAAmB,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAW,CACVC,KAAMoG,EAAsB,OAAS,WACrC1J,SAAUA,EACVjC,MAAM,mBACN6E,KAAK,kBACLW,YAAY,MAEdjE,EAAAA,EAAAA,KAAA,QACEH,UAAU,mBACV+M,QAASA,KACPvC,GAAwBD,EAAoB,EAC5CtK,SAEDsK,GAAsBpK,EAAAA,EAAAA,KAAC6M,EAAAA,IAAQ,KAAM7M,EAAAA,EAAAA,KAAC8M,EAAAA,IAAK,UAGhD9M,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOqM,qBACpB,QAGXpN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYC,SAAA,CAC1BnC,EAAE,mBAAmB,KAACqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEvDE,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,oBACL/C,QAASA,EACT6K,MAAO,CAAEC,UAAU,GACnBC,OAAQ2B,IAAA,IAAG1B,OAAO,SAAEpL,EAAQ,MAAEvB,EAAK,KAAE0E,EAAI,IAAEkF,IAAOyE,EAAA,OAChDjN,EAAAA,EAAAA,KAACkN,EAAAA,EAAoB,CACnB/M,SAAWqM,IACTjP,EAAS,oBAAqBiP,EAAE5N,OAChC6L,EAAY+B,EAAE,EAEhBhE,IAAKA,EACLlF,KAAMA,EACNY,aAActD,EAAU,qBACxBhC,MAAOwI,EACPlH,OAAQI,GACR,KAGJM,EAAU,uBACVZ,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAOwM,wBAG7BvN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,2BAA2BF,UAAU,aAAYC,SAAA,CAC7DnC,EAAE,mBACHqC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaC,SAAC,UAEhCE,EAAAA,EAAAA,KAACmL,EAAAA,GAAU,CACT7H,KAAK,iBACL/C,QAASA,EACT+K,OAAQ8B,IAAA,IAAG7B,OAAO,SAAEpL,EAAQ,MAAEvB,EAAK,KAAE0E,EAAI,IAAEkF,IAAO4E,EAAA,OAChDpN,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLE,SAAWsL,IACTlO,EAAS,iBAAkBkO,EAAS7M,MAAM,EAE5CyB,QAASgN,EAAAA,GACT7E,IAAKA,EACLlF,KAAMA,EACNpD,OAAQI,EACR1B,MAAO,CACLH,MAAOmC,EAAU,kBACjBhC,MAAOgC,EAAU,oBAEnB,KAGJA,EAAU,oBACVZ,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,UAAWlD,EAAO2M,wBAI/BtN,EAAAA,EAAAA,KAAA,OACEgL,MAAO,CACLC,MAAO,OACPsC,QAAS,OACTC,eAAgB,SAChBtC,OAAQ,UACRpL,UAEFF,EAAAA,EAAAA,MAAC6N,EAAAA,EAAM,CACLzJ,KAAK,SACL0J,SAAUzD,EACV2C,QAAS7C,EAAaD,GACtBkB,MAAO,CAAEC,MAAO,OAAQnL,SAAA,CAEvB,IACAnC,EAAE,iBAGH,E,yDC3UV,MA+IA,EA/ImBgQ,KACjB,MAAM,GAAEnQ,IAAO8M,EAAAA,EAAAA,MACT,EAAE3M,IAAMC,EAAAA,EAAAA,OACPgQ,EAAaC,IAAkB9P,EAAAA,EAAAA,UAAS,GACzC+P,EAAa,CAACnQ,EAAE,YAChBoQ,EAAY,CAACC,GACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MACdC,GAAcC,EAAAA,EAAAA,KAAatM,GAAUA,EAAMuM,KAAKC,QAGpDnK,KAAMoK,EAAQ,QACdC,EAAO,UACPxG,IACEnB,EAAAA,EAAAA,GAAS,CACXb,SAAU,CAAC,OAAQ1I,GACnB2I,QAASA,KAAMwI,EAAAA,EAAAA,IAAYnR,GAC3BmJ,UAAWnJ,EACXoJ,UAAWC,MAGP+H,GAAiB5H,EAAAA,EAAAA,UAAQ,KACtB,IACFyH,KAEJ,CAACA,KAEJvQ,EAAAA,EAAAA,YAAU,KACJwQ,GAAalR,KACfqR,EAAAA,EAAAA,GAAY,+BACZZ,EAAS,cACX,GACC,CAACS,GAAWlR,IAEf,MAAM,SACJkD,EACAoO,WAAW,OAAEnO,GAAQ,SACrBpD,EAAQ,UACRqD,EAAS,QACTL,EAAO,aACPwJ,EAAY,MACZC,IACE+E,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYzR,EAAK0R,EAAAA,GAA2BC,EAAAA,IACtDC,OAAQR,IAGJS,EAAWC,IAAQT,EAAAA,EAAAA,IAAYU,EAAAA,EAAAA,IAAmBD,KAEhDE,OAAQC,EAAiBC,UAAWC,IAAgBC,EAAAA,EAAAA,GAAY,CACtEC,WAAYzS,IAAA,IAAC,KAAEiH,EAAI,GAAE7G,GAAIJ,EAAA,OAAK0S,EAAAA,EAAAA,IAAWtS,EAAI6G,EAAK,EAClD0L,UAAWA,MACTC,EAAAA,EAAAA,GAAc,6BACd7B,EAAY8B,kBAAkB,CAAC,UAC/BhC,EAAS,QAAQ,EAEnBoB,aAGMG,OAAQU,EAAoBR,UAAWS,IAAkBP,EAAAA,EAAAA,GAAY,CAC3EC,WAAYO,EAAAA,GACZL,UAAWA,MACTC,EAAAA,EAAAA,GAAc,oBACd7B,EAAY8B,kBAAkB,CAAC,UAC/BhC,EAAS,QAAQ,EAEnBoB,YAGIvF,EAAYzF,IACZ7G,EACFiS,EAAgB,CAAEjS,KAAI6G,UAEtBA,EAAKgM,KAAO,OACZhM,EAAK8H,OAASkC,EAAYhC,SAC1BhI,EAAKL,KAAO,QACZkM,EAAmB7L,GACrB,EAGF,OACEzE,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA7D,SAAA,EACEE,EAAAA,EAAAA,KAACsQ,EAAAA,EAAa,CACZC,UAAU,OACVC,UAAWhT,EAAK,OAAS,SACzBiT,YAAa,UAEfzQ,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAASC,UACtBE,EAAAA,EAAAA,KAAC0Q,EAAAA,GAAY,CAAA5Q,UACXE,EAAAA,EAAAA,KAAA,QAAM8J,SAAUC,EAAaD,GAAUhK,UACrCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAIC,UAAS,CAACC,iBAAkB/C,EAAW,GAAGgD,cAAchR,SAAA,EAC3DE,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAG,CAACC,GAAG,KAAKnR,UAAU,WAAUC,SAC9BgO,EAAWvP,KAAI,CAAC8F,EAAM4M,KACrBjR,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAIG,KAAI,CAACF,GAAG,KAAIlR,UACfE,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAII,KAAI,CACPnG,MAAO,CAAEvK,QAAS,cAClB2Q,SAAU/M,EAAKyM,cACfO,OAAQJ,IAAMrD,EACdhB,QAASA,IAAMiB,EAAeoD,GAAGnR,SAEhCuE,KAPkB4M,QAY3BjR,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAIW,QAAO,CAACzR,UAAU,OAAMC,SAC1BoI,GACClI,EAAAA,EAAAA,KAACuR,EAAAA,EAAM,CAACC,OAAQ,MAEhB1D,EAAWvP,KAAI,CAAC8F,EAAM4M,KACpB,MAAMQ,EAAY1D,EAAUkD,GAC5B,OACEjR,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAIe,KAAI,CACPN,SAAU/M,EAAKyM,cAEfO,OAAQJ,IAAMrD,EAAY9N,UAE1BE,EAAAA,EAAAA,KAACyR,EAAS,CACRpN,KAAMyJ,EACNvN,QAASA,EACThD,SAAUA,EACVmD,SAAUA,EACVE,UAAWA,EACXD,OAAQA,EACRmJ,SAAUA,EACVC,aAAcA,EACdE,iBAAkBkG,GAAiBR,EACnC3F,MAAOA,KAbJiH,EAeI,mBAU5B,C,6DC3JP,MAsCA,EAtCwBzG,KACtB,MAAOmH,EAAKC,IAAU7T,EAAAA,EAAAA,UAAS,OACxB8T,EAAKC,IAAU/T,EAAAA,EAAAA,UAAS,OACxB0J,EAAOsK,IAAYhU,EAAAA,EAAAA,UAAS,OAC5B6E,EAAUoP,IAAejU,EAAAA,EAAAA,UAAS,OAClCmK,EAAW+J,IAAgBlU,EAAAA,EAAAA,WAAS,GA8B3C,OAJAG,EAAAA,EAAAA,YAAU,KAxBUiF,WAClB,IACE8O,GAAa,GACb,MAAMC,EAAUC,uCAChB,IAAKD,EACH,MAAM,IAAItO,MAAM,uBAGlB,MAAMwO,QAAiB9N,EAAAA,EAAMC,IAAI,wDAAD7F,OAC0BwT,IAG1DN,EAAOQ,EAAS/N,KAAKzB,SAASyP,UAC9BP,EAAOM,EAAS/N,KAAKzB,SAAS0P,WAC9B,MAAMzR,EAAeuR,EAAS/N,KAC9B2N,EAAYnR,GACZkR,EAAS,KACX,CAAE,MAAOtK,GACPsK,EAAS,gCAAkCtK,EAAM8K,QACnD,CAAC,QACCN,GAAa,EACf,GAIAO,EAAa,GACZ,IAEI,CAAE5P,WAAU+O,MAAKE,MAAK3J,YAAWT,QAAO,C","sources":["jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","features/featureTemplate/api.js","features/featureTemplate/components/DropdownList.jsx","features/vehicle/components/DropdownList.jsx","features/user/components/Form.jsx","features/user/pages/Create.jsx","hooks/useUserLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) setValue(\"city\", dValues.city);\n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value == dValues?.country\n        );\n        console.log({ option });\n        if (option) handleCountryChange(option);\n      }\n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n      }\n    } else {\n      setSelectedCountry({\n        value: locationData?.country?.isoAlpha3,\n        label: locationData?.country?.isoName,\n      });\n      setValue(\"country\", locationData?.country?.isoAlpha3);\n      setCountryCode(locationData?.country?.isoAlpha2);\n      setSelectedState({\n        value: locationData?.location?.principalSubdivision,\n        label: locationData?.location?.principalSubdivision || \"\",\n      });\n      setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n      const selectedCountryId = isoToCountryId(\n        locationData?.country?.isoAlpha3\n      );\n      GetState(selectedCountryId).then((result) => {\n        setStateList(result);\n      });\n    }\n  }, [locationData, id, dValues]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n\n    const selectedCountry = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountry.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountry.name });\n    setStateList([]);\n    setSelectedState({\n      value: \"\",\n      label: \"\",\n    });\n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = (selectedOption) => {\n    const selectedStateId = selectedOption.value;\n    const selectedState = stateList.find(\n      (state) => state.name === selectedStateId\n    );\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      selectedState?.name.endsWith(\" Emirate\")\n    ) {\n      selectedState.name = selectedState.name.replace(\" Emirate\", \"\");\n    }\n    setValue(\"state\", selectedState.name);\n    setSelectedState({ value: selectedState.name, label: selectedState.name });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={selectedCountry}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        {/* <label className=\"form-label\"> State</label> */}\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={selectedState}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import { axiosInstance as axios } from \"@/services/api\";\n\nexport const getAllModules = async () => {\n  const { data } = await axios.get(\"/modules\");\n  return data?.data;\n};\n\nexport const getAllTemplates = async (page) => {\n  let url = \"/feature-template\";\n  if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n  const { data } = await axios.get(url);\n  return {\n    data: data.data.data,\n    totalPage: data.data.totalPage,\n    totalCount: data.data.totalCount,\n  };\n};\n\nexport const deleteTemplate = async (id) => {\n  return await axios.delete(`/feature-template/${id}`);\n};\n\nexport const createTemplate = async (body) => {\n  return await axios.post(\"/feature-template\", body);\n};\n\nexport const updateTemplate = async (body) => {\n  return await axios.patch(\"/feature-template\", body);\n};\n\nexport const getTemplateById = async (id) => {\n  const { data } = await axios.get(`/feature-template/${id}`);\n  return data?.data?.data;\n};","import React, { useEffect, useMemo, useState } from \"react\";\nimport Select from \"react-select\";\nimport { useInfiniteQuery, useQuery } from \"@tanstack/react-query\";\n\nimport usePagination from \"@/hooks/usePagination\";\nimport { getAllTemplates, getTemplateById } from \"../api\";\nimport usePermissions from \"@/hooks/usePermissions\";\nimport Spinner from \"@/components/Loader/Spinner\";\n\nconst TemplateDropdownList = ({\n  onChange,\n  value,\n  customStyles,\n  isDisabled,\n  name,\n  placeholder,\n  defaultValue,\n}) => {\n  const [selectedOption, setSelectedOption] = useState(value);\n  const { page, setPage } = usePagination();\n  const { can } = usePermissions();\n\n  const { data, fetchNextPage, hasNextPage, isFetching, isFetchingNextPage } =\n    useInfiniteQuery({\n      queryKey: [\"templates\"],\n      queryFn: ({ pageParam }) => {\n        setPage(pageParam);\n        return getAllTemplates(pageParam);\n      },\n      initialPageParam: 1,\n      getNextPageParam: (lastPage, pages) =>\n        lastPage.data?.length ? page + 1 : null,\n      enabled: can(\"groups\", \"view\"),\n      staleTime: Infinity,\n    });\n\n  const { refetch } = useQuery({\n    queryKey: [\"template\", defaultValue],\n    queryFn: () => getTemplateById(defaultValue),\n    enabled: false,\n    staleTime: Infinity,\n  });\n\n  const options = useMemo(() => {\n    let flatData = [];\n    data?.pages.forEach((pageData) => {\n      pageData.data.forEach((template) => {\n        flatData.push({\n          value: template._id,\n          label: template.name,\n        });\n      });\n    });\n    return flatData;\n  }, [data]);\n\n  useEffect(() => {\n    if (value?.value != selectedOption?.value) {\n      setSelectedOption(value);\n    }\n\n    return () => {};\n  }, [value, options]);\n\n  useEffect(() => {\n    const initializeValue = async () => {\n      if (defaultValue && !value) {\n        const selected = options.find(\n          (option) => option.value === defaultValue\n        );\n        if (selected) {\n          setSelectedOption(selected);\n          onChange(selected);\n          return;\n        }\n        try {\n          const { data: template } = await refetch();\n          console.log({ template });\n\n          if (template) {\n            const newOption = {\n              label: template.name,\n              value: template._id,\n            };\n            setSelectedOption(newOption);\n            onChange(newOption);\n            return;\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    initializeValue();\n    return () => {};\n  }, [defaultValue, value]);\n\n  const handleMenuScroll = async (event) => {\n    const bottom =\n      event.target.scrollHeight - event.target.scrollTop ===\n      event.target.clientHeight;\n    if (bottom && !isFetching && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage();\n    }\n  };\n\n  return (\n    <Select\n      options={options}\n      value={selectedOption}\n      onChange={onChange}\n      styles={customStyles}\n      name={name}\n      placeholder={placeholder}\n      isDisabled={isDisabled || !can(\"groups\", \"view\")}\n      onMenuScrollToBottom={handleMenuScroll}\n      menuShouldScrollIntoView={false}\n      isLoading={isFetching}\n      components={{\n        LoadingIndicator: Spinner,\n      }}\n    />\n  );\n};\n\nexport default TemplateDropdownList;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport Select from \"react-select\";\nimport { t } from \"i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { useInfiniteQuery, useQuery } from \"@tanstack/react-query\";\n\nimport usePagination from \"@/hooks/usePagination\";\nimport { getAllVehicles, getVehicleById } from \"../api\";\nimport usePermissions from \"@/hooks/usePermissions\";\nimport Spinner from \"@/components/Loader/Spinner\";\n\nconst VehicleDropdownList = ({\n  branchIds,\n  companyId,\n  groupId,\n  ref,\n  onChange,\n  value,\n  defaultValue,\n  customStyles,\n  isDisabled,\n  isMulti,\n  name,\n}) => {\n  const [selectedOption, setSelectedOption] = useState(value);\n  const { page, setPage } = usePagination();\n  const { can } = usePermissions();\n  const { pathname } = useLocation();\n\n  const { data, fetchNextPage, hasNextPage, isFetching, isFetchingNextPage } =\n    useInfiniteQuery({\n      queryKey: [\"vehicles\", branchIds, companyId, groupId],\n      queryFn: ({ pageParam }) => {\n        setPage(pageParam);\n        return getAllVehicles(pageParam, 10, {\n          branchIds: Array.isArray(branchIds) ? branchIds.join(\",\") : branchIds,\n          companyId,\n          groupId,\n        });\n      },\n      initialPageParam: 1,\n      getNextPageParam: (lastPage, pages) =>\n        lastPage.data?.length ? page + 1 : null,\n      enabled: can(\"vehicle\", \"view\"),\n      staleTime: Infinity,\n    });\n\n  const getVehiclesById = async (ids) => {\n    let vehicleIds = ids;\n    const result = [];\n    if (!Array.isArray(ids)) vehicleIds = [ids];\n    for (let id of vehicleIds) {\n      const data = await getVehicleById(id);\n      result.push(data);\n    }\n    console.log({ result });\n\n    return result;\n  };\n\n  const { refetch } = useQuery({\n    queryKey: [\"vehicle\", defaultValue],\n    queryFn: () => getVehiclesById(defaultValue),\n    enabled: false,\n    staleTime: Infinity,\n  });\n\n  const options = useMemo(() => {\n    let flatData = [];\n    data?.pages.forEach((pageData) => {\n      pageData.data.forEach((item) => {\n        flatData.push({\n          label: item?.vehicleName,\n          value: item?._id,\n        });\n      });\n    });\n    return flatData;\n  }, [data]);\n\n  useEffect(() => {\n    console.log({ value });\n\n    if (value && value.length) setSelectedOption(value);\n    else setSelectedOption(undefined);\n  }, [JSON.stringify(value)]);\n\n  useEffect(() => {\n    const initializeValue = async () => {\n      if (defaultValue && !value) {\n        if (Array.isArray(defaultValue)) {\n          if (!defaultValue.length) return;\n          const selected = options.filter((option) =>\n            defaultValue.some((val) => option.value === val)\n          );\n          if (selected.length === defaultValue.length) {\n            setSelectedOption(selected);\n            onChange(selected);\n            return;\n          }\n          try {\n            const { data: vehicleData } = await refetch();\n            if (vehicleData) {\n              const newOption = vehicleData?.map((el) => ({\n                label: el.vehicleName,\n                value: el._id,\n              }));\n              setSelectedOption(newOption);\n              onChange(newOption);\n            }\n          } catch (error) {\n            console.error(\"Error fetching vehicle details:\", error);\n          }\n        } else {\n          const selected = options.find(\n            (option) => defaultValue === option.value\n          );\n          if (selected) {\n            setSelectedOption(selected);\n            onChange(selected);\n            return;\n          }\n          try {\n            const { data: vehicleData } = await refetch();\n            if (vehicleData && vehicleData.length) {\n              const newOption = {\n                label: vehicleData?.[0].vehicleName,\n                value: vehicleData?.[0]._id,\n              };\n              setSelectedOption(newOption);\n              onChange(newOption);\n            }\n          } catch (error) {\n            console.error(\"Error fetching vehicle details:\", error);\n          }\n        }\n      } else {\n        setSelectedOption(value);\n      }\n    };\n    initializeValue();\n  }, [JSON.stringify(defaultValue), pathname, JSON.stringify(value)]);\n\n  const handleMenuScroll = async (event) => {\n    const bottom =\n      event.target.scrollHeight - event.target.scrollTop ===\n      event.target.clientHeight;\n    if (bottom && !isFetching && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage();\n    }\n  };\n\n  return (\n    <Select\n      options={options}\n      value={selectedOption}\n      onChange={onChange}\n      styles={customStyles}\n      ref={ref}\n      name={name}\n      placeholder={t(\"selectVehicles\")}\n      isDisabled={isDisabled || !can(\"vehicle\", \"view\")}\n      isClearable\n      onMenuScrollToBottom={handleMenuScroll}\n      menuShouldScrollIntoView={false}\n      isLoading={isFetching}\n      components={{\n        LoadingIndicator: Spinner,\n      }}\n      isMulti={isMulti}\n    />\n  );\n};\nexport default VehicleDropdownList;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport BranchDropdown from \"@/features/branch/components/DropDownList\";\nimport VehicleDropdown from \"@/features/vehicle/components/DropdownList\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nimport { unitOfDistanceOptions } from \"../../../constants/options\";\nimport LocationSelector from \"../../../components/Input/LocationSelector\";\nimport TemplateDropdownList from \"@/features/featureTemplate/components/DropdownList\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \"0.25rem 0 \", // Adjust the height as needed\n  }),\n};\n\nconst UserForm = ({\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n  watch,\n  isFormSubmitting,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const { location: locationData, error: locationError } = useUserLocation();\n  const [template, setTemplate] = useState();\n\n  const [company, setCompany] = useState();\n  const [branch, setBranch] = useState();\n  const [vehicles, setVehicles] = useState();\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\", margin: \"auto\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                onChange={async (newValue) => {\n                  if (newValue.value != getValues(\"businessGroupId\")) {\n                    setValue(\"businessGroupId\", newValue.value);\n                    setCompany(null);\n                    setValue(\"companyId\", \"\");\n                    setBranch(null);\n                    setValue(\"branchIds\", \"\");\n                    setValue(\"vehicleIds\", \"\");\n                    setVehicles([]);\n                  }\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n          <Error errorName={errors.businessGroupId} />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { value, name, ref } }) => (\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  if (newValue.value != getValues(\"companyId\")) {\n                    setValue(\"companyId\", newValue.value);\n                    setCompany(newValue);\n                    setBranch([]);\n                    setValue(\"branchIds\", \"\");\n                    setValue(\"vehicleIds\", \"\");\n                    setVehicles([]);\n                  }\n                }}\n                groupId={watch(\"businessGroupId\")}\n                defaultValue={value}\n                value={company}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n              />\n            )}\n          />\n          <Error errorName={errors.companyId} />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"branchIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <BranchDropdown\n                companyId={watch(\"companyId\")}\n                groupId={watch(\"businessGroupId\")}\n                onChange={(newValue) => {\n                  setValue(\n                    \"branchIds\",\n                    newValue?.map((el) => el.value)\n                  );\n                  setValue(\"vehicleIds\", \"\");\n                  setBranch(newValue);\n                  setVehicles([]);\n                }}\n                defaultValue={getValues(\"branchIds\")}\n                value={branch}\n                isMulti\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n          <Error errorName={errors.branchId} />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"vehicle\")}</label>\n          <Controller\n            name=\"vehicleIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <VehicleDropdown\n                onChange={(newValue) => {\n                  const newArray = newValue?.map((temp) => temp.value);\n                  setValue(\"vehicleIds\", newArray);\n                  setVehicles(newValue);\n                }}\n                defaultValue={getValues(\"vehicleIds\")}\n                value={vehicles}\n                branchIds={watch(\"branchIds\")}\n                companyId={watch(\"companyId\")}\n                groupId={watch(\"businessGroupId\")}\n                customStyles={customStyles}\n                ref={ref}\n                isMulti\n                name={name}\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          dValues={{\n            state: getValues(\"state\"),\n            country: getValues(\"country\"),\n          }}\n          locationData={locationData}\n          id={id}\n          showCity={false}\n        />\n        {!id && (\n          <>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <TemplateDropdownList\n                onChange={(e) => {\n                  setValue(\"featureTemplateId\", e.value);\n                  setTemplate(e);\n                }}\n                ref={ref}\n                name={name}\n                defaultValue={getValues(\"featureTemplateId\")}\n                value={template}\n                styles={customStyles}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput6\" className=\"form-label\">\n            {t(\"unitOfDistance\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"unitOfDistance\", newValue.value);\n                }}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{\n                  label: getValues(\"unitOfDistance\"),\n                  value: getValues(\"unitOfDistance\"),\n                }}\n              />\n            )}\n          />\n          {!getValues(\"unitOfDistance\") && (\n            <Error errorName={errors.unitOfDistance} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useSelector } from \"react-redux\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport UserForm from \"../components/Form\";\nimport { subUserAccountSchema, subUserEditAccountSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport { createUser, getUserById, updateUser } from \"../api\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport Loader from \"@/components/Loader\";\n\nconst CreateUser = () => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [t(\"account\")];\n  const component = [UserForm];\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const userDetails = useSelector((state) => state.auth.user);\n\n  const {\n    data: userData,\n    isError,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"user\", id],\n    queryFn: () => getUserById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  const parsedUserData = useMemo(() => {\n    return {\n      ...userData,\n    };\n  }, [userData]);\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch user data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n    watch,\n  } = useForm({\n    resolver: yupResolver(id ? subUserEditAccountSchema : subUserAccountSchema),\n    values: parsedUserData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: ediUserMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => updateUser(id, data),\n    onSuccess: () => {\n      notifySuccess(\"User Updated Successfully\");\n      queryClient.invalidateQueries([\"users\"]);\n      navigate(\"/user\");\n    },\n    onError,\n  });\n\n  const { mutate: createUserMutation, isPending: createPending } = useMutation({\n    mutationFn: createUser,\n    onSuccess: () => {\n      notifySuccess(\"New User Created\");\n      queryClient.invalidateQueries([\"users\"]);\n      navigate(\"/user\");\n    },\n    onError,\n  });\n\n  const onSubmit = (data) => {\n    if (id) {\n      ediUserMutation({ id, data });\n    } else {\n      data.role = \"USER\";\n      data.parent = userDetails.userName;\n      data.type = \"STAFF\";\n      createUserMutation(data);\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            onSubmit={onSubmit}\n                            handleSubmit={handleSubmit}\n                            isFormSubmitting={createPending || editPending}\n                            watch={watch}\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CreateUser;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n"],"names":["_ref","countryCode","customStyle","setValue","id","dValues","Comptype","t","useTranslation","timezones","setTimezones","useState","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","label","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","_jsxs","className","children","htmlFor","_jsx","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","register","errors","getValues","locationData","showCity","selectedCountry","setSelectedCountry","selectedState","setSelectedState","countriesList","setCountriesList","stateList","setStateList","setCountryCode","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","_locationData$country","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$locatio","_locationData$locatio2","_locationData$locatio3","_locationData$country5","isoAlpha3","isoName","isoAlpha2","location","principalSubdivision","selectedCountryId","isoToCountryId","GetState","isoCode","iso3","async","selectedIsoCode","iso2","name","getStateName","endsWith","replace","stateOptions","_Fragment","Error","errorName","selectedStateId","CustomInput","type","placeholder","defaultValue","TimeZoneSelector","getAllModules","data","axios","get","getAllTemplates","url","undefined","page","totalPage","totalCount","deleteTemplate","delete","createTemplate","post","body","updateTemplate","patch","getTemplateById","_data$data","isDisabled","setSelectedOption","setPage","usePagination","can","usePermissions","fetchNextPage","hasNextPage","isFetching","isFetchingNextPage","useInfiniteQuery","queryKey","queryFn","_ref2","pageParam","initialPageParam","getNextPageParam","lastPage","pages","_lastPage$data","enabled","staleTime","Infinity","refetch","useQuery","useMemo","flatData","forEach","pageData","template","push","_id","selected","newOption","error","initializeValue","onMenuScrollToBottom","event","target","scrollHeight","scrollTop","clientHeight","menuShouldScrollIntoView","isLoading","components","LoadingIndicator","Spinner","branchIds","groupId","ref","isMulti","pathname","useLocation","getAllVehicles","Array","isArray","join","vehicleIds","ids","getVehicleById","getVehiclesById","item","vehicleName","JSON","stringify","filter","some","val","vehicleData","el","isClearable","onSubmit","handleSubmit","watch","isFormSubmitting","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","useParams","locationError","useUserLocation","setTemplate","company","setCompany","branch","setBranch","vehicles","setVehicles","style","width","margin","Controller","rules","required","render","field","GroupDropdown","newValue","_ref3","CompanyDropdown","_ref4","BranchDropdown","branchId","_ref5","VehicleDropdown","newArray","temp","parent","email","userName","min","onInput","e","max","mobileNumber","LocationSelector","onClick","LuEyeOff","LuEye","password","confirmPassword","_ref6","TemplateDropdownList","featureTemplateId","_ref7","unitOfDistanceOptions","unitOfDistance","display","justifyContent","Button","disabled","CreateUser","activeIndex","setActiveIndex","tabHeading","component","UserForm","navigate","useNavigate","queryClient","useQueryClient","userDetails","useSelector","auth","user","userData","isError","getUserById","parsedUserData","notifyError","formState","useForm","resolver","yupResolver","subUserEditAccountSchema","subUserAccountSchema","values","onError","err","getApiErrorMessage","mutate","ediUserMutation","isPending","editPending","useMutation","mutationFn","updateUser","onSuccess","notifySuccess","invalidateQueries","createUserMutation","createPending","createUser","role","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Loader","height","Component","Pane","lat","setLat","lng","setLng","setError","setLocation","setIsLoading","API_KEY","process","response","latitude","longitude","message","getLocation"],"sourceRoot":""}