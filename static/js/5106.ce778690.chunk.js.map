{"version":3,"file":"static/js/5106.ce778690.chunk.js","mappings":"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","sources":["jsx/components/Tables/ClassifyTripTable.jsx","jsx/constant/ClassifyTripsFilterOffcanvas.js","jsx/constant/ClassifyTripsOffcanvas.js","jsx/pages/ClassifyTrips.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from \"../Modal/DeleteModal\";\nimport { Link } from \"react-router-dom\";\nimport { FaLocationDot } from \"react-icons/fa6\";\n\nconst ClassifyTripTable = ({\n  tableData,\n  onConfirmDelete,\n  editDrawerOpen,\n  active,\n}) => {\n  return (\n    <>\n      {tableData.map((item, index) => (\n        <tr key={index}>\n          <td>\n            <span>{item.tripId}</span>\n          </td>\n          <td>\n            <span>{item.startTime}</span>\n          </td>\n          <td>\n            <span>{item.startLocation}</span>\n          </td>\n          <td>\n            <span>{item.reachTime}</span>\n          </td>\n          <td>\n            <span>{item.reachLocation}</span>\n          </td>\n          <td>\n            <span className=\"text-primary\">{item.distance}</span>\n          </td>\n          <td>\n            <span>{item.fuelConsumption}</span>\n          </td>\n          <td>\n            <span>{item.driver}</span>\n          </td>\n\n          <td>\n            <span className=\"d-flex justify-content-center\">\n              {active && (\n                <span className=\"cursor-pointer\" title=\"tracking\">\n                  <Link to={`/vehicle-tracking/${item.tripId}`}>\n                    <FaLocationDot\n                      style={{ color: \"#ff9f00\", fontSize: \"18px\" }}\n                    />\n                  </Link>\n                </span>\n              )}\n              <span\n                className=\"cursor-pointer\"\n                style={{ marginRight: \"3px\", marginLeft: \"7px\" }}\n              >\n                <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n              </span>\n              <DeleteModal\n                className=\"cursor-pointer \"\n                onConfirmDelete={onConfirmDelete}\n                id={item.tripId}\n              >\n                <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n              </DeleteModal>\n            </span>\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n// onClick={() => editDrawerOpen(item.id)}\nexport default ClassifyTripTable;\n","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\nimport \"../../scss/pages/_driver-tracking.scss\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider } from \"react-hook-form\";\nimport Error from \"../components/Error/Error\";\nimport {\n  branchOptions,\n  subCompanyOptions,\n} from \"../components/TabComponent/VehicleTabs/Options\";\nimport {\n  FaBatteryFull,\n  FaCircle,\n  FaKey,\n  FaSearch,\n  FaWifi,\n} from \"react-icons/fa\";\nimport CustomInput from \"../components/Input/CustomInput\";\nimport { findHighestAndLowestDates } from \"../../utils/helper\";\n\nconst ClassifyTripsFilterOffcanvas = forwardRef(\n  (\n    {\n      data,\n      Title,\n      errors,\n      control,\n      register,\n      setValue,\n      getValues,\n      handleSubmit,\n      onSubmit,\n      filterData,\n      setFilterData,\n      submitFilterHandler\n    },\n    ref\n  ) => {\n    const [addEmploye, setAddEmploye] = useState(false);\n    const [tempValue, setTempValue] = useState();\n\n    useImperativeHandle(ref, () => ({\n      showModal() {\n        setAddEmploye(true);\n      },\n    }));\n    const nav = useNavigate();\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        padding: \".25rem 0 \", // Adjust the height as needed\n      }),\n    };\n    const filterSubmitHandler = (e)=>{\n      e.preventDefault();\n      submitFilterHandler(filterData);\n    }\n\n    return (\n      <>\n        <Offcanvas\n          show={addEmploye}\n          onHide={setAddEmploye}\n          className=\"offcanvas-end customeoff classy_filter\"\n          placement=\"end\"\n        >\n          <div className=\"offcanvas-header\">\n            <h5 className=\"modal-title\" id=\"#gridSystemModal\">\n              {Title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setAddEmploye(false)}\n            >\n              <i className=\"fa-solid fa-xmark\"></i>\n            </button>\n          </div>\n          <div className=\"offcanvas-body\">\n            <div className=\"container-fluid\">\n              <FormProvider>\n                <form onSubmit={filterSubmitHandler}>\n                  <div className=\"container\">\n                    <div className=\"row \">\n                      <div className=\"col-xl-12 mb-3 \">\n                        <label className=\"form-label\">Branch</label>\n                        <Controller\n                          name=\"branch\"\n                          control={control}\n                          render={({\n                            field: { onChange, value, name, ref },\n                          }) => (\n                            <Select\n                              onChange={(newValue) =>{\n                                setFilterData((prev)=>({\n                                  ...prev , \n                                  branch : newValue\n                                }));\n                                setValue(\"branch\", newValue.label)}\n                              }\n                              options={branchOptions}\n                              ref={ref}\n                              name={name}\n                              styles={customStyles}\n                              defaultValue={branchOptions[0]}\n                            />\n                          )}\n                        />\n                      </div>\n                      <div className=\"col-xl-12 mb-3 d-flex flex-column\">\n                        <label className=\"form-label\">From Date</label>\n                        <Controller\n                          name=\"fromDate\"\n                          control={control}\n                          render={({ value, name }) => (\n                            <DatePicker\n                              selected={filterData.from}\n                              className=\"form-control\"\n                              onChange={(newValue) => {\n                                setFilterData((prev)=>({\n                                  ...prev , \n                                  from : newValue\n                                }));\n                              }}\n                            />\n                          )}\n                        />\n                      </div>\n                      <div className=\"col-xl-12 mb-3 d-flex flex-column\">\n                        <label className=\"form-label\">To Date</label>\n                        <Controller\n                          name=\"toDate\"\n                          control={control}\n                          render={({ value, name }) => (\n                            <DatePicker\n                              selected={filterData.to}\n                              className=\"form-control\"\n                              onChange={(newValue) => {\n                                setFilterData((prev)=>({\n                                  ...prev , \n                                  to : newValue\n                                }));\n                                setTempValue(newValue);\n                                setValue(\"toDate\", newValue);\n                              }}\n                            />\n                          )}\n                        />\n                      </div>\n\n                      <div className=\"col-xl-12 mb-3\">\n                        <div className=\"search-driver-tab p-2 rounded-1 w-100\">\n                          <input\n                            type=\"text\"\n                            {...register(\"search\")}\n                            label=\"Search\"\n                            placeholder=\"search\"\n                            onChange={(newValue)=> setFilterData((prev)=>({\n                              ...prev , \n                              search : newValue.target.value\n                            })) }\n                            className=\"form-control-driver-tab\"\n                          />\n                          <FaSearch\n                            style={{ fontSize: \"1.5rem\", padding: \"2px\" }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <div className=\"mb-4\">\n                          <button\n                            type=\"submit\"\n                            onClick={() => setAddEmploye(false)}\n                            className=\"btn btn-primary me-4 w-100\"\n                          >\n                            Apply\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </FormProvider>\n            </div>\n          </div>\n        </Offcanvas>\n      </>\n    );\n  }\n);\n\nexport default ClassifyTripsFilterOffcanvas;\n","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport Error from \"../components/Error/Error\";\nimport {\n  tripStatusOptions\n} from \"../components/TabComponent/VehicleTabs/Options\";\nimport CustomInput from \"../components/Input/CustomInput\";\nimport '../../scss/pages/_driver-tracking.scss'\nconst ClassifyTripsOffcanvas = forwardRef(\n  (\n    {\n      Title,\n      editData,\n      setEditData,\n      register,\n      setValue,\n      getValues,\n      handleSubmit,\n      onSubmit,\n      errors,\n      control,\n      clearErrors,\n    },\n    ref\n  ) => {\n    const [addEmploye, setAddEmploye] = useState(false);\n    const [tempValue, setTempValue] = useState();\n\n    useImperativeHandle(ref, () => ({\n      showModal() {\n        setAddEmploye(true);\n      },\n    }));\n    const nav = useNavigate();\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        padding: \".25rem 0 \", // Adjust the height as needed\n      }),\n    };\n    useEffect(()=>{\n      if(addEmploye === true){\n        clearErrors(\"startTime\")\n        clearErrors('startLocation')\n        clearErrors('reachTime')\n        clearErrors('reachLocation')\n        clearErrors('driver')\n        setValue('startTime','')\n        setValue('startLocation','')\n        setValue('reachTime','')\n        setValue('reachLocation','')\n        setValue('driver','')\n        setValue('distance','')\n        setValue('fuelConsumption','')\n        setValue('lastModifiedBy','')\n\n      }\n    },[addEmploye])\n\n    return (\n      <>\n        <Offcanvas\n          show={addEmploye}\n          onHide={setAddEmploye}\n          className=\"offcanvas-end customeoff\"\n          placement=\"end\"\n        >\n          <div className=\"offcanvas-header\">\n            <h5 className=\"modal-title\" id=\"#gridSystemModal\">\n              {Title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setAddEmploye(false)}\n            >\n              <i className=\"fa-solid fa-xmark\"></i>\n            </button>\n          </div>\n          <div className=\"offcanvas-body\">\n            <div className=\"container-fluid\">\n              <FormProvider>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Start Time <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"time\"\n                        register={register}\n                        label=\"Start Time\"\n                        name=\"startTime\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.startTime} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Start Location <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Start Location\"\n                        name=\"startLocation\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.startLocation} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Reach Time <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"time\"\n                        register={register}\n                        label=\"Reach Time\"\n                        name=\"reachTime\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.reachTime} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Reach Location <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Reach Location\"\n                        name=\"reachLocation\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.reachLocation} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Distance\n                      </label>\n                      <CustomInput\n                        type=\"number\"\n                        register={register}\n                        label=\"Distance\"\n                        name=\"distance\"\n                        placeholder=\"\"\n                      />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Fuel Consumption\n                      </label>\n                      <CustomInput\n                        type=\"number\"\n                        register={register}\n                        label=\"Fuel Consumption\"\n                        name=\"fuelConsumption\"\n                        placeholder=\"\"\n                      />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Driver <span className=\"text-danger\">*</span>\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Driver\"\n                        name=\"driver\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.driver} />\n                    </div>\n                    <div className=\"col-xl-6 mb-3\">\n                      <label\n                        htmlFor=\"exampleFormControlInput3\"\n                        className=\"form-label\"\n                      >\n                        Last Modified By\n                      </label>\n                      <CustomInput\n                        type=\"text\"\n                        register={register}\n                        label=\"Last Modified By\"\n                        name=\"lastModifiedBy\"\n                        placeholder=\"\"\n                      />\n                    </div>\n                    <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n                      <label className=\"form-label\">\n                        Last Modified Date\n                      </label>\n                      <Controller\n                        name=\"lastModifiedDate\"\n                        control={control}\n                        render={({ value, name }) => (\n                          <DatePicker\n                            selected={getValues(\"lastModifiedDate\") || new Date()}\n                            className=\"form-control customDateHeight\"\n                            onChange={(newValue) =>\n                              {setTempValue(newValue.value)\n                              setValue(\"lastModifiedDate\", newValue)}\n                            }\n                          />\n                        )}\n                      />\n                    </div>\n                    <div className=\"col-xl-6 mb-3 \">\n                    <label className=\"form-label\">Trip Status</label>\n                    <Controller\n                      name=\"tripStatus\"\n                      control={control}\n                      render={({ field: { onChange, value, name, ref } }) => (\n                        <Select\n                          onChange={(newValue) =>\n                            {setTempValue(newValue.value)\n                            setValue(\"tripStatus\", newValue.value)}\n                          }\n                          options={tripStatusOptions}\n                          ref={ref}\n                          name={name}\n                          styles={customStyles}\n                          defaultValue={tripStatusOptions[0]}\n                        />\n                      )}\n                    />\n                  </div>\n\n                  </div>\n                  <div>\n                    <button\n                      type=\"submit\"\n                      onClick={() => {\n                        handleSubmit(onSubmit);\n                      }}\n                      className=\"btn btn-primary me-1\"\n                    >\n                      Submit\n                    </button>\n                    <Link\n                      to={\"#\"}\n                      onClick={() => setAddEmploye(false)}\n                      className=\"btn btn-danger light ms-1\"\n                    >\n                      Cancel\n                    </Link>\n                  </div>\n                </form>\n              </FormProvider>\n            </div>\n          </div>\n        </Offcanvas>\n      </>\n    );\n  }\n);\n\nexport default ClassifyTripsOffcanvas;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\n\nimport { IMAGES } from \"../constant/theme\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport InviteCustomer from \"../constant/ModalList\";\nimport ClassifyTripTable from \"../components/Tables/ClassifyTripTable\";\nimport { ClassifyTripData } from \"../components/Tables/Tables\";\nimport ClassifyTripsFilterOffcanvas from \"../constant/ClassifyTripsFilterOffcanvas\";\nimport ClassifyTripsOffcanvas from \"../constant/ClassifyTripsOffcanvas\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { classifyTripsSchema } from \"../../yup\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { filterClassifyTable } from \"../../utils/helper\";\n\nconst ClassifyTrip = (ref) => {\n  const [filterData, setFilterData] = useState({\n    from: new Date(),\n    to: new Date(),\n    branch: \"All\",\n    search: \"\",\n  });\n  const tabHeading = [\"Active Trips\", \"Planned Trips\", \"Completed Trips\"];\n  const component = [ActiveTab, PlannedTab, CompletedTab];\n\n  const [tableData, setTableData] = useState(ClassifyTripData);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        // data[i].classList.remove(\"d-none\");\n      } else {\n        // data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  const submitFilterHandler = (val) => {\n    console.log(val);\n    const data = filterClassifyTable(val, ClassifyTripData);\n    console.log(data)\n    setTableData(data);\n  };\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n    classifyTrips.current.showModal();\n  };\n\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n\n  const onSubmit = (data) => {\n    console.log(\"Submit botn\", data);\n  };\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Classify Trip\"\n        pageTitle={\"Classify Trip\"}\n        parentTitle={\"Settings\"}\n      />\n      <div className=\"m-2 p-2 classify_trip-container\">\n        <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n          <Nav as=\"ul\" className=\"nav-tabs classify-trips\">\n            <div>\n              {tabHeading.map((data, i) => (\n                <Nav.Item as=\"li\" key={i}>\n                  <Nav.Link\n                    style={{ padding: \".5rem 2rem\" }}\n                    eventKey={data.toLowerCase()}\n                    active={i === activeIndex}\n                    onClick={() => setActiveIndex(i)}\n                  >\n                    {data}\n                  </Nav.Link>\n                </Nav.Item>\n              ))}\n            </div>\n\n            <div className=\"\">\n              <Link\n                to={\"#\"}\n                className=\"btn btn-primary btn-sm ms-1\"\n                data-bs-toggle=\"offcanvas\"\n                onClick={() => classifyTripsFilter.current.showModal()}\n              >\n                + Filter\n              </Link>{\" \"}\n              <Link\n                to={\"#\"}\n                className=\"btn btn-primary btn-sm ms-1\"\n                data-bs-toggle=\"offcanvas\"\n                onClick={() => classifyTrips.current.showModal()}\n              >\n                + Add Trips\n              </Link>{\" \"}\n            </div>\n          </Nav>\n          <Tab.Content className=\"pt-4\">\n            {tabHeading.map((data, i) => {\n              const Component = component[i];\n              return (\n                <Tab.Pane\n                  eventKey={data.toLowerCase()}\n                  key={i}\n                  active={i === activeIndex}\n                >\n                  <Component\n                    tableData1={tableData}\n                    data={tabHeading}\n                    control={control}\n                    setValue={setValue}\n                    register={register}\n                    getValues={getValues}\n                    errors={errors}\n                    handleSubmit={handleSubmit}\n                    onSubmit={onSubmit}\n                  />\n                </Tab.Pane>\n              );\n            })}\n          </Tab.Content>\n        </Tab.Container>\n        <ClassifyTripsFilterOffcanvas\n          submitFilterHandler={submitFilterHandler}\n          ref={classifyTripsFilter}\n          handleSubmit={handleSubmit}\n          filterData={filterData}\n          setFilterData={setFilterData}\n          onSubmit={onSubmit}\n          register={register}\n          control={control}\n          errors={errors}\n          setValue={setValue}\n          getValues={getValues}\n          Title={\"Add Filter\"}\n          data={ClassifyTripData}\n        />\n        <ClassifyTripsOffcanvas\n          ref={classifyTrips}\n          // editData={editData}\n          // setEditData={setEditData}\n          handleSubmit={handleSubmit}\n          onSubmit={onSubmit}\n          register={register}\n          control={control}\n          errors={errors}\n          setValue={setValue}\n          getValues={getValues}\n          clearErrors={clearErrors}\n          Title={\"Add Trips\"}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ClassifyTrip;\n\nconst ActiveTab = ({tableData1}) => {\n  const [tableData, setTableData] = useState(tableData1);\n  console.log(tableData)\n  useEffect(() => {\n    const data = tableData1.filter((data) => data.status === \"active\");\n    console.log(data)\n    setTableData(data);\n  }, [tableData1]);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        // data[i].classList.remove(\"d-none\");\n      } else {\n        // data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  // const[formData, setFormData] = useState()\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n    classifyTrips.current.showModal();\n  };\n\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n  console.log(tableData)\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-xl-12\">\n          <div className=\"card\">\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                <div\n                  id=\"employee-tbl_wrapper\"\n                  className=\"dataTables_wrapper no-footer\"\n                >\n                  <table\n                    id=\"empoloyees-tblwrapper\"\n                    className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Trip ID</th>\n                        <th>Start Time</th>\n                        <th>Start Location</th>\n                        <th>Reach Time</th>\n                        <th>Reach Location</th>\n                        <th>Distance</th>\n                        <th>Fuel Consumption</th>\n                        <th>Driver</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <ClassifyTripTable\n                        active={true}\n                        editData={editData}\n                        tableData={tableData}\n                        onConfirmDelete={onConfirmDelete}\n                        editDrawerOpen={editDrawerOpen}\n                        setEditData={setEditData}\n                      />\n                    </tbody>\n                  </table>\n                  <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                    <div className=\"dataTables_info\">\n                      Showing {activePag.current * sort + 1} to{\" \"}\n                      {data.length > (activePag.current + 1) * sort\n                        ? (activePag.current + 1) * sort\n                        : data.length}{\" \"}\n                      of {data.length} entries\n                    </div>\n                    <div\n                      className=\"dataTables_paginate paging_simple_numbers\"\n                      id=\"example2_paginate\"\n                    >\n                      <Link\n                        className=\"paginate_button previous disabled\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current > 0 &&\n                          onClick(activePag.current - 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-left\" />\n                      </Link>\n                      <span>\n                        {paggination.map((number, i) => (\n                          <Link\n                            key={i}\n                            to=\"/settings/classifyTrips\"\n                            className={`paginate_button  ${\n                              activePag.current === i ? \"current\" : \"\"\n                            } `}\n                            onClick={() => onClick(i)}\n                          >\n                            {number}\n                          </Link>\n                        ))}\n                      </span>\n                      <Link\n                        className=\"paginate_button next\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current + 1 < paggination.length &&\n                          onClick(activePag.current + 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-right\" />\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PlannedTab = ({tableData1}) => {\n  const [tableData, setTableData] = useState(tableData1);\n\n  useEffect(()=>{setTableData(tableData1)},[tableData1])\n  useEffect(() => {\n    const data = tableData.filter((data) => data.status === \"planned\");\n    setTableData(data);\n  }, []);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        // data[i].classList.remove(\"d-none\");\n      } else {\n        // data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  // const[formData, setFormData] = useState()\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n\n    // setEditTableData(item);\n    classifyTrips.current.showModal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-xl-12\">\n          <div className=\"card\">\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                <div\n                  id=\"employee-tbl_wrapper\"\n                  className=\"dataTables_wrapper no-footer\"\n                >\n                  <table\n                    id=\"empoloyees-tblwrapper\"\n                    className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Trip ID</th>\n                        <th>Start Time</th>\n                        <th>Start Location</th>\n                        <th>Reach Time</th>\n                        <th>Reach Location</th>\n                        <th>Distance</th>\n                        <th>Fuel Consumption</th>\n                        <th>Driver</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <ClassifyTripTable\n                        active={false}\n                        editData={editData}\n                        tableData={tableData}\n                        onConfirmDelete={onConfirmDelete}\n                        editDrawerOpen={editDrawerOpen}\n                        setEditData={setEditData}\n                      />\n                    </tbody>\n                  </table>\n                  <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                    <div className=\"dataTables_info\">\n                      Showing {activePag.current * sort + 1} to{\" \"}\n                      {data.length > (activePag.current + 1) * sort\n                        ? (activePag.current + 1) * sort\n                        : data.length}{\" \"}\n                      of {data.length} entries\n                    </div>\n                    <div\n                      className=\"dataTables_paginate paging_simple_numbers\"\n                      id=\"example2_paginate\"\n                    >\n                      <Link\n                        className=\"paginate_button previous disabled\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current > 0 &&\n                          onClick(activePag.current - 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-left\" />\n                      </Link>\n                      <span>\n                        {paggination.map((number, i) => (\n                          <Link\n                            key={i}\n                            to=\"/settings/classifyTrips\"\n                            className={`paginate_button  ${\n                              activePag.current === i ? \"current\" : \"\"\n                            } `}\n                            onClick={() => onClick(i)}\n                          >\n                            {number}\n                          </Link>\n                        ))}\n                      </span>\n                      <Link\n                        className=\"paginate_button next\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current + 1 < paggination.length &&\n                          onClick(activePag.current + 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-right\" />\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CompletedTab = ({tableData1}) => {\n  const [tableData, setTableData] = useState(tableData1);\n  useEffect(() => {\n    const data = tableData.filter((data) => data.status === \"completed\");\n    setTableData(data);\n  }, [tableData1]);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        // data[i].classList.remove(\"d-none\");\n      } else {\n        // data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  // const[formData, setFormData] = useState()\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n\n    // setEditTableData(item);\n    classifyTrips.current.showModal();\n  };\n  // const handleSubmit=(e)=>{\n  //     e.preventDefault();\n  //     const updateTable = tableData.map((table)=>{\n  //         if(table.id === editData.id) {\n  //             console.log(table.id)\n  //             return {...table, ...editData };\n  //         }\n  //         return table;\n  //     })\n  //     setTableData(updateTable)\n  // }\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-xl-12\">\n          <div className=\"card\">\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                <div\n                  id=\"employee-tbl_wrapper\"\n                  className=\"dataTables_wrapper no-footer\"\n                >\n                  <table\n                    id=\"empoloyees-tblwrapper\"\n                    className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Trip ID</th>\n                        <th>Start Time</th>\n                        <th>Start Location</th>\n                        <th>Reach Time</th>\n                        <th>Reach Location</th>\n                        <th>Distance</th>\n                        <th>Fuel Consumption</th>\n                        <th>Driver</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <ClassifyTripTable\n                        active={false}\n                        editData={editData}\n                        tableData={tableData}\n                        onConfirmDelete={onConfirmDelete}\n                        editDrawerOpen={editDrawerOpen}\n                        setEditData={setEditData}\n                      />\n                    </tbody>\n                  </table>\n                  <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                    <div className=\"dataTables_info\">\n                      Showing {activePag.current * sort + 1} to{\" \"}\n                      {data.length > (activePag.current + 1) * sort\n                        ? (activePag.current + 1) * sort\n                        : data.length}{\" \"}\n                      of {data.length} entries\n                    </div>\n                    <div\n                      className=\"dataTables_paginate paging_simple_numbers\"\n                      id=\"example2_paginate\"\n                    >\n                      <Link\n                        className=\"paginate_button previous disabled\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current > 0 &&\n                          onClick(activePag.current - 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-left\" />\n                      </Link>\n                      <span>\n                        {paggination.map((number, i) => (\n                          <Link\n                            key={i}\n                            to=\"/settings/classifyTrips\"\n                            className={`paginate_button  ${\n                              activePag.current === i ? \"current\" : \"\"\n                            } `}\n                            onClick={() => onClick(i)}\n                          >\n                            {number}\n                          </Link>\n                        ))}\n                      </span>\n                      <Link\n                        className=\"paginate_button next\"\n                        to=\"/settings/classifyTrips\"\n                        onClick={() =>\n                          activePag.current + 1 < paggination.length &&\n                          onClick(activePag.current + 1)\n                        }\n                      >\n                        <i className=\"fa-solid fa-angle-right\" />\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["_ref","tableData","onConfirmDelete","editDrawerOpen","active","_jsx","_Fragment","children","map","item","index","_jsxs","tripId","startTime","startLocation","reachTime","reachLocation","className","distance","fuelConsumption","driver","title","Link","to","concat","FaLocationDot","style","color","fontSize","marginRight","marginLeft","FaEdit","DeleteModal","id","MdDelete","forwardRef","ref","data","Title","errors","control","register","setValue","getValues","handleSubmit","onSubmit","filterData","setFilterData","submitFilterHandler","addEmploye","setAddEmploye","useState","tempValue","setTempValue","useImperativeHandle","showModal","useNavigate","customStyles","base","padding","Offcanvas","show","onHide","placement","type","onClick","FormProvider","e","preventDefault","Controller","name","render","_ref2","field","onChange","value","Select","newValue","prev","branch","label","options","branchOptions","styles","defaultValue","_ref3","DatePicker","selected","from","_ref4","placeholder","search","target","FaSearch","editData","setEditData","clearErrors","useEffect","htmlFor","CustomInput","Error","errorName","Date","tripStatusOptions","tabHeading","component","ActiveTab","PlannedTab","CompletedTab","setTableData","ClassifyTripData","formState","useForm","resolver","yupResolver","classifyTripsSchema","status","contact","age","drivingExperience","gender","location","setData","document","querySelectorAll","activePag","useRef","test","settest","chageData","frist","sec","i","length","current","Array","Math","ceil","fill","_","classifyTrips","classifyTripsFilter","console","log","activeIndex","setActiveIndex","MainPagetitle","mainTitle","pageTitle","parentTitle","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","Item","eventKey","Content","Component","Pane","tableData1","ClassifyTripsFilterOffcanvas","val","filterClassifyTable","ClassifyTripsOffcanvas","filter","sort","paggination","ClassifyTripTable","updatedData","table","number"],"sourceRoot":""}