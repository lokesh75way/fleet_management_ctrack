{"version":3,"file":"static/js/8619.9762998f.chunk.js","mappings":"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","sources":["../node_modules/react-country-state-city/src/utils/index.ts","../node_modules/react-country-state-city/src/components/Dropdown.tsx","../node_modules/react-country-state-city/src/components/LanguageDropdown.tsx","../node_modules/react-country-state-city/src/components/CitySelect.tsx","../node_modules/react-country-state-city/src/components/CountrySelect.tsx","../node_modules/countries-and-timezones/src/build-country.js","../node_modules/countries-and-timezones/src/build-timezone.js","../node_modules/countries-and-timezones/src/index.js"],"sourcesContent":["import {\n  City,\n  Country,\n  CountryState,\n  CountryStateCity,\n  Language,\n  State,\n} from \"../types\";\n\nexport const GetCountries = async (): Promise<Country[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/countriesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Country>;\n};\n\nexport const GetLanguages = async (): Promise<Language[] | []> => {\n  const countries = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/languagesminified.json\"\n  ).then((res) => res.json());\n  return countries as Array<Language>;\n};\n\nexport const GetState = async (id: number): Promise<Array<State> | []> => {\n  const states = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/statesminified.json\"\n  ).then((res) => res.json());\n  const record = states as Array<CountryState>;\n  const statesone = record.find((e: CountryState) => e.id === id);\n  const state = statesone && statesone.states ? statesone.states : [];\n  return state;\n};\n\nexport const GetCity = async (\n  countryid: number,\n  stateid: number\n): Promise<Array<City> | []> => {\n  const cities = await fetch(\n    \"https://venkatmcajj.github.io/react-country-state-city/data/citiesminified.json\"\n  ).then((res) => res.json());\n  const record = cities as Array<CountryStateCity>;\n  const countries = record.find((e: CountryStateCity) => e.id === countryid);\n  if (countries) {\n    const states = countries && countries.states ? countries.states : [];\n    const city = states.find((e) => e.id === stateid);\n    return city && city.cities ? city.cities : [];\n  } else {\n    return [];\n  }\n};\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { City, Country, State } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Country | State | City>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Country | State | City;\n  onChange: (e: Country | State | City) => void;\n  showFlag?: boolean;\n};\nconst Dropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  showFlag = true,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Country | State | City>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${\n      showFlag && \"emoji\" in selectedValue ? selectedValue.emoji : \"\"\n    } ${selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Country | State | City) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Country | State | City) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.id === option.id;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.id}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {showFlag && <span>{\"emoji\" in option ? option.emoji : \"\"}</span>}{\" \"}\n              {option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { Language } from \"../types\";\nconst Icon = () => {\n  return (\n    <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n      <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n    </svg>\n  );\n};\n\ntype ComponentProps = {\n  placeHolder?: string;\n  options: Array<Language>;\n  inputClassName?: string;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: Language;\n  onChange: (e: Language) => void;\n  displayNative?: boolean;\n};\nconst LanguageDropdown = ({\n  placeHolder,\n  options,\n  onChange,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  displayNative,\n}: ComponentProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<Language>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultValue) setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  useEffect(() => {\n    setSearchValue(\"\");\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(e.target as Element)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n  const handleInputClick = () => {\n    setShowMenu(true);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue) {\n      return searchValue ? searchValue : \"\";\n    }\n    return `${displayNative ? selectedValue.native : selectedValue.name}`;\n  };\n\n  const onItemClick = (option: Language) => {\n    setSelectedValue(option);\n    onChange(option);\n  };\n\n  const isSelected = (option: Language) => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.code === option.code;\n  };\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n    setSelectedValue(undefined);\n    if (onTextChange) {\n      onTextChange(e);\n    }\n  };\n\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n    );\n  };\n\n  return (\n    <div className={\"stdropdown-container\"}>\n      <div\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={\"stdropdown-input stsearch-box\"}\n      >\n        <input\n          className={inputClassName}\n          onChange={onSearch}\n          value={getDisplay()}\n          placeholder={placeHolder}\n          ref={searchRef}\n        />\n        <div className={\"stdropdown-tools\"}>\n          <div className={\"stdropdown-tool\"}>\n            <Icon />\n          </div>\n        </div>\n      </div>\n      {showMenu && (\n        <div className={\"stdropdown-menu\"}>\n          {getOptions().map((option) => (\n            <div\n              onClick={() => onItemClick(option)}\n              key={option.code}\n              className={`${\"stdropdown-item\"} ${\n                isSelected(option) && \"selected\"\n              }`}\n            >\n              {displayNative ? option.native : option.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageDropdown;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { City } from \"../types\";\nimport { GetCity } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\ntype PageProps = {\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: City) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  defaultValue?: City;\n  countryid: number;\n  stateid: number;\n  placeHolder?: string;\n};\n\nconst CitySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  countryid,\n  stateid,\n  placeHolder,\n}: PageProps) => {\n  const [cities, setCities] = useState<City[]>([]);\n  useEffect(() => {\n    if (countryid) {\n      GetCity(countryid, stateid).then((data) => {\n        setCities(data);\n      });\n    }\n  }, [countryid, stateid]);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={cities}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as City);\n            }\n          }}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CitySelect;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Country } from \"../types\";\nimport { GetCountries } from \"../utils\";\nimport Dropdown from \"./Dropdown\";\n\ntype PageProps = {\n  defaultValue?: Country;\n  containerClassName?: string;\n  inputClassName?: string;\n  onChange?: (e: Country) => void;\n  onTextChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  placeHolder?: string;\n  showFlag?: boolean;\n};\nconst CountrySelect = ({\n  containerClassName,\n  inputClassName,\n  onTextChange,\n  defaultValue,\n  onChange,\n  placeHolder,\n  showFlag,\n}: PageProps) => {\n  const [countriesunfiltered, setCountries] = useState<Country[]>([]);\n  useEffect(() => {\n    GetCountries().then((data) => {\n      setCountries(data);\n    });\n  }, []);\n  return (\n    <>\n      <div className={containerClassName} style={{ position: \"relative\" }}>\n        <Dropdown\n          placeHolder={placeHolder}\n          options={countriesunfiltered}\n          onChange={(value) => {\n            if (onChange) {\n              onChange(value as Country);\n            }\n          }}\n          showFlag={showFlag}\n          onTextChange={onTextChange}\n          defaultValue={defaultValue}\n          inputClassName={inputClassName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CountrySelect;\n","let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(Math.abs(offset) / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((prev, id) => {\n    return Object.assign(prev, { [id]: getCountry(id, options) });\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n\nfunction deliverTimezones(tzs, options) {\n  const { deprecated } = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((prev, key) => {\n    if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });\n    return prev;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const { deprecated } = options || {};\n  const { allTimezones, ...other } = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return { ...other, timezones: tz };\n}\n\nexport default {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n"],"names":["a","t","n","e","label","fetch","then","json","sent","o","r","find","id","states","c","cities","i","createElement","height","width","viewBox","d","u","placeHolder","options","onChange","inputClassName","onTextChange","defaultValue","s","showFlag","l","f","useState","m","p","h","v","g","C","E","w","useRef","y","useEffect","current","focus","contains","target","window","addEventListener","removeEventListener","N","className","ref","onClick","value","concat","emoji","name","placeholder","filter","toLowerCase","indexOf","map","key","displayNative","code","native","exports","containerClassName","Fragment","style","position","timezonesMap","buildCountry","data","countries","tzMap","Object","keys","timezones","reduce","result","tz","aliasTz","forEach","country","assign","_defineProperty","all","undefined","push","buildTimezonesMap","getTimezonesMap","allTimezones","getOffsetStr","offset","hours","Math","floor","abs","min","getNumStr","input","num","totalTimezones","length","memoizedTimezones","getCountry","arguments","memoizeCountry","_ref2","deprecated","other","_objectWithoutProperties","_excluded","_objectSpread2","deliverCountry","getTimezone","timezone","memoizeTimezone","_timezone$a","aliasOf","utcOffset","dstOffset","Number","isInteger","utcOffsetStr","dstOffsetStr","buildTimezone","getCountriesForTimezone","tzName","index","getAllCountries","prev","getAllTimezones","tzs","_ref","deliverTimezones","getTimezonesForCountry","countryId","getCountryForTimezone","_slicedToArray"],"sourceRoot":""}