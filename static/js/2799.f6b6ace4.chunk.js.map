{"version":3,"file":"static/js/2799.f6b6ace4.chunk.js","mappings":"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","sources":["jsx/components/VehicleDropdown/index.jsx","jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from \"react-select\";\nimport { getDrivers } from '../../../services/api/driverService';\nimport { getVehicles } from '../../../services/api/VehicleService';\nimport usePagination from '../../../hooks/usePagination';\nconst VehicleDropdown = ({\n    onChange,\n    value,\n    customStyles,\n    branchids,\n    ref,\n    isDisabled,\n    name\n}) => {\n    const [dropDownOptions, setdropDownOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(value);\n    const { page } = usePagination();\n    useEffect(() => {\n        const fetchVehicles = async () => {\n            const response = await getVehicles(page, branchids ? branchids : undefined);\n            const vehicleOptions = response.data.map((item) => ({\n                label: item?.vehicleName,\n                value: item?._id,\n            }));\n\n            setdropDownOptions(vehicleOptions);\n        };\n        fetchVehicles();\n    }\n    , [page,branchids]);\n    useEffect(() => {\n        if (value && Array.isArray(value)) {\n          const selected = dropDownOptions.filter((option) =>\n            value.some((val) => val === option.value)\n          );\n          setSelectedOption(selected);\n        } else {\n          setSelectedOption(value);\n        }\n      }, [value, dropDownOptions,branchids]);\n\n    return (\n            <Select\n                options = {dropDownOptions}\n                value={selectedOption}\n                onChange={(newValue) => onChange(newValue)}\n                styles={customStyles}\n                ref={ref}\n                name={name}\n                isMulti\n                />\n    );\n}\nexport default VehicleDropdown;","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\nimport { getTemplates } from \"../../../../services/api/TemplateServices\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError } from \"../../../../utils/toast\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { getGroups } from \"../../../../services/api/BusinessGroup\";\nimport { getCompany } from \"../../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../BranchDropdown\";\nimport CompanyDropdown from \"../../CompanyDropdown\";\nimport GroupDropdown from \"../../GroupDropdown\";\nimport ParentBranchDropdown from \"../../ParentBranch\";\nimport VehicleDropdown from \"../../VehicleDropdown\";\nimport { unitOfDistanceOptions } from \"../VehicleTabs/Options\";\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n  formData,\n}) => {\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const [defaultCountry,setDefaultCountry] = useState();\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const { checkRole, checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEdit, setIsEdit] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const [companyId, setCompanyId] = useState(null);\n  const [branchId, setBranchId] = useState([])\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const { t } = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  async function onGroupChange(groupId) {\n    const companies = allCompanies\n      .filter((item) => item?.companyId?.businessGroupId?._id == groupId)\n      .map((item) => ({\n        value: item?.companyId?._id,\n        label: item?.companyId?.companyName,\n      }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\n\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter((item) => item?.companyId?._id == companyId)\n      .map((item) => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error);\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error);\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    fetchOptions();\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const role = checkRole();\n  const { id } = useParams();\n  // const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if (role === \"SUPER_ADMIN\") {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  } else {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  }\n\n\n  const [filteredUserData, setFilteredUserData] = useState([]);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n  const [businessDisabled, setBusinessDisabled] = useState(false);\n  const [companyDisabled, setCompanyDisabled] = useState(false);\n\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState([]);\n  useEffect(() => {\n    if (userDetails.user.role === \"COMPANY\") {\n      setValue(\"businessGroupId\", userDetails?.user.businessGroupId[0]?._id);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId[0]?._id);\n      setGroupId(userDetails?.user.businessGroupId[0]?._id);\n      setBusinessDisabled(true);\n      setValue(\"parentCompany\", userDetails?.user.companyId[0]?._id);\n      setCompanyId(userDetails?.user.companyId[0]?._id);\n      setCompanyDisabled(true);\n    }\n    if (userDetails.user.role === \"BUSINESS_GROUP\") {\n      // setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId?._id);\n      setValue(\"businessUser\", userDetails?.user?.businessGroupId[0]?._id);\n      setBusinessDisabled(true);\n    }\n  }, []);\n\n  useEffect(()=>{\n    if(formData && id){\n      setValue(\"businessUser\",formData?.[0]?.businessGroupId)\n      setValue(\"companyId\",formData?.[0]?.companyId)\n      setValue(\"branchIds\",formData?.[0]?.branchIds)\n      setValue(\"vehicleIds\",formData?.[0]?.vehicleIds)\n      setValue(\"email\",formData?.[0]?.email)\n      setValue(\"userName\",formData?.[0]?.userName)\n      setValue(\"mobileNumber\",formData?.[0]?.mobileNumber)\n      setValue(\"country\",formData[0].country)\n      setDefaultCountry({ name:formData[0].country })\n      setValue(\"state\",formData[0].state || '' )\n      setSelectStateName({name : formData[0].state || ''})    \n      setValue(\"featureTemplateId\",formData?.[0]?.featureTemplateId)\n      setValue(\"unitOfDistance\", formData?.[0].unitOfDistance);\n    }\n  },[formData,id])\n\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                key={groupId}\n                onChange={async (newValue) => {\n                  setValue(\"businessUser\", newValue.value);\n                  setGroupId(newValue.value);\n                  setCompanyId(null);\n                }}\n                value={value}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={businessDisabled}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  setValue(\"companyId\", newValue.value);\n                  setCompanyId(newValue.value);\n                }}\n                key={groupId}\n                groupId={groupId}\n                value={value}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={companyDisabled}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"branchIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <BranchDropdown\n              onChange={(newValue) => {\n                const newArray = newValue.map((temp)=> temp.value)\n                setValue(\"branchIds\", newArray);\n                setBranchId(newArray)\n              }}\n              value={value}\n              customStyles={customStyles}\n              ref={ref}\n              companyId={companyId}\n              name={name}\n              isDisabled={companyId  ? false  : true}\n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"vehicle\")}</label>\n          <Controller\n            name=\"vehicleIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <VehicleDropdown\n              onChange={(newValue) => {\n                const newArray = newValue.map((temp)=> temp.value)\n                setValue(\"vehicleIds\", newArray);\n              }}\n              value={value}\n              branchids={branchId}\n              customStyles={customStyles}\n              ref={ref}\n              name={name}\n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t(\"country\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setSelectStateName({ name: \"\" });\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n            // value={getValues(\"country\")}\n            defaultValue={defaultCountry}\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">{t(\"state\")}</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n              defaultValue={selectStateName}\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        {!id && (\n          \n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0] ? filteredUserData[0].password : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0]\n                      ? filteredUserData[0].confirmPassword\n                      : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setTempValue(e);\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(\n                  (option) => option.value === field.value\n                )}\n                // defaultValue={filteredUserData[0] ? TemplateOptions.find(option => option._id === filteredUserData[0].featureTemplateId) : \"\"}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput6\" className=\"form-label\">\n            {t(\"unitOfDistance\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"unitOfDistance\", newValue.value);\n                  setTempValue(newValue.value);\n                }}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{\n                  label: getValues(\"unitOfDistance\"),\n                  value: getValues(\"unitOfDistance\"),\n                }}\n              />\n            )}\n          />\n          {!getValues(\"unitOfDistance\") && (\n            <Error errorName={errors.unitOfDistance} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema, subUserEditAccountSchema } from \"../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\nimport { createUser, updateUser } from \"../../../services/api/UserServices\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { checkRole, checkUserName } = useStorage();\n  const role = checkRole();\n  const userName = checkUserName();\n  const tabHeading = [t(\"account\")];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { formData } = location.state || {};\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver( id ? subUserEditAccountSchema: subUserAccountSchema),\n  });\n\n  console.log(errors, \"erroe:-\")\n\n  const onSubmit = async (data) => {\n    if (data.businessUser) {\n      data.businessGroupId = data.businessUser;\n    }\n    if (data.parentCompany) {\n      data.companyId = data.parentCompany;\n    }\n    if (data.Branch) {\n      console.log(data.Branch);\n      data.branchId = data.Branch;\n    }\n    if(id){\n      try {\n        // data.role = \"USER\";\n        // data.parent = userName;\n        // data.type = \"STAFF\";\n        const response = await updateUser(id,data);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User updated successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n    else{\n      try {\n        data.role = \"USER\";\n        data.parent = userName;\n        data.type = \"STAFF\";\n        const response = await createUser(data);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User created successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n  };\n \n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                          formData = {formData}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n","import requests from \"./Axios\";\nimport axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios()\n\n\nexport const getTemplates = async (page) => {\n  try {\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n    const response = await axios.get(url);\n      return response.data;\n  } catch(error){\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" }\n  }\n}\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  \n//   getStaffById: async (id, body) => {\n//     return requests.post(`/admin/${id}`, body);\n//   },\n\n\n  createTemplate: async (body) => {\n\n    try {\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  }\n};\n\nexport default TemplateServices;\n"],"names":["_ref","onChange","value","customStyles","branchids","ref","isDisabled","name","dropDownOptions","setdropDownOptions","useState","selectedOption","setSelectedOption","page","usePagination","useEffect","async","vehicleOptions","getVehicles","undefined","data","map","item","label","vehicleName","_id","fetchVehicles","Array","isArray","selected","filter","option","some","val","_jsx","Select","options","newValue","styles","isMulti","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","formData","selectStateName","setSelectStateName","defaultCountry","setDefaultCountry","defaultValue","setDefaultValue","allGroups","setAllGroups","allCompanies","setAllCompanies","allBranches","setAllBranches","checkRole","checkUser","useStorage","tempValue","setTempValue","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","isEdit","setIsEdit","groupId","setGroupId","companyId","setCompanyId","branchId","setBranchId","userDetails","JSON","parse","localStorage","getItem","t","useTranslation","base","padding","response","getGroups","companyResponse","getCompany","branchResponse","getAllBranch","error","notifyError","groups","groupOptions","_item$businessGroupId","_item$businessGroupId2","businessGroupId","groupName","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyName","branches","branchOptions","branchName","setParentOptions","fetchOptions","getTemplates","tempOptions","role","id","useParams","loggedinemail","defaultCompanyOptions","DummyData","userName","parent","filteredUserData","setFilteredUserData","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","businessDisabled","setBusinessDisabled","companyDisabled","setCompanyDisabled","filteredCompanyData","setFilteredCompanyData","_userDetails$user$bus","_userDetails$user$bus2","_userDetails$user$bus3","_userDetails$user$com","_userDetails$user$com2","_userDetails$user$bus4","_userDetails$user","_userDetails$user$bus5","user","_formData$","_formData$2","_formData$3","_formData$4","_formData$5","_formData$6","_formData$7","_formData$8","branchIds","vehicleIds","email","mobileNumber","country","state","featureTemplateId","unitOfDistance","children","_jsxs","className","style","width","margin","Controller","rules","required","render","_ref2","field","GroupDropdown","_ref3","CompanyDropdown","_ref4","BranchDropdown","newArray","temp","Error","errorName","_ref5","VehicleDropdown","htmlFor","CustomInput","type","placeholder","min","onInput","e","Math","max","target","CountrySelect","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref6","find","_ref7","unitOfDistanceOptions","display","justifyContent","Button","Title","editData","setEditData","activeIndex","setActiveIndex","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","location","useLocation","formState","useForm","resolver","yupResolver","subUserEditAccountSchema","subUserAccountSchema","console","log","businessUser","parentCompany","Branch","updateUser","notifySuccess","createUser","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane","initAxios","url","axios","get","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}