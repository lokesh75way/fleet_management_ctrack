{"version":3,"file":"static/js/2799.b398009d.chunk.js","mappings":"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","sources":["jsx/components/BranchDropdown/index.jsx","jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getAllBranch } from '../../../services/api/BranchServices';\nimport Select from \"react-select\";\nimport usePagination from '../../../hooks/usePagination';\n\nconst BranchDropdown = ({\n    onChange,\n    value,\n    customStyles,\n    name,\n    companyId,\n    isDisabled,\n    ref\n}) => {\n    const [dropDownOptions, setdropDownOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(value);\n    const {page} = usePagination()\n    useEffect(() => {\n        const fetchBusinessGroups = async () => {\n            const response = await getAllBranch(undefined,companyId ? companyId : undefined);\n            const groupOptions = response.data.data.map(item => ({ value: item?._id, label: item?.branchName }));\n            console.log(response.data, \"this is Branch data\")\n            console.log(groupOptions, \"this is Branch options\")\n            setdropDownOptions(groupOptions);\n        };\n        fetchBusinessGroups();\n    }\n    , []);\n    useEffect(() => {\n        const selected = dropDownOptions.filter((option) => value && value.includes(option.value));\n        setSelectedOption(selected);\n    }, [value, dropDownOptions]);\n\n    return (\n            <Select\n                options = {dropDownOptions}\n                value={selectedOption}\n                onChange={(newValue) => onChange(newValue)}\n                styles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={isDisabled || !companyId}\n                isMulti\n                />         \n    );\n}\nexport default BranchDropdown;","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\nimport { getTemplates } from \"../../../../services/api/TemplateServices\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError } from \"../../../../utils/toast\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { getGroups } from \"../../../../services/api/BusinessGroup\";\nimport { getCompany } from \"../../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../BranchDropdown\";\nimport CompanyDropdown from \"../../CompanyDropdown\";\nimport GroupDropdown from \"../../GroupDropdown\";\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n}) => {\n\n  console.log(errors);\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const { checkRole, checkUser } = useStorage()\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEdit, setIsEdit] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const [companyId, setCompanyId] = useState(null);\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const { t } = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n\n\n  };\n  async function onGroupChange(groupId) {\n    console.log(\"groupId\", groupId)\n    console.log(\"allCompanies\", allCompanies)\n    const companies = allCompanies\n      .filter(item => item?.companyId?.businessGroupId?._id == groupId)\n      .map(item => ({ value: item?.companyId?._id, label: item?.companyId?.companyName }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\n\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter(item => item?.companyId?._id == companyId)\n      .map(item => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error)\n      }\n      else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error)\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error)\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    }\n    setIsLoading(true);\n    fetchOptions()\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error)\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    }\n    fetchOptions()\n  }, []);\n\n\n  const role = checkRole()\n  const { id } = useParams();\n  const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if (role === \"SUPER_ADMIN\") {\n\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n\n  } else {\n\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  }\n\n  let parentbgname;\n  if (role === 'COMPANY') {\n    const parentbgnamefilter = User.filter(user => user.parentCompany === loggedinemail);\n    parentbgname = parentbgnamefilter[0]?.parentBusinessGroup;\n  }\n\n  const branchData = User.filter(\n    (item) => item.role === \"branch\" && item._id == id\n  );\n\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const newData = userData.filter((data) => data._id == id);\n\n  // const defaultValues = getSelectValues();\n\n  const [filteredUserData, setFilteredUserData] = useState(newData);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n  const [businessDisabled, setBusinessDisabled] = useState(false);\n  const [companyDisabled, setCompanyDisabled] = useState(false);\n\n\n  useEffect(() => {\n    let tempcompanyOptions;\n    if (role === \"BUSINESS_GROUP\") {\n\n      tempcompanyOptions = DummyData.filter(\n        (item) => item.role === \"company\"\n      )\n        .filter((cp) => cp.parent === checkUser())\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n\n    } else {\n\n      tempcompanyOptions = DummyData.filter(\n        (item) => item.role === \"company\"\n      )\n        .filter((cp) => cp.parent === businessUserValue)\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n\n    }\n\n\n    let tempparentOptions;\n\n    if (role === 'COMPANY') {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === checkUser())\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    } else {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === companyValue)\n        .map((item) => ({\n          label: item.userName,\n          value: item._id,\n        }));\n    }\n\n    let tempvehicleOptions;\n    if (role === 'COMPANY') {\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === checkUser()).map((item) => ({\n        label: item.vehicleName,\n        value: item._id,\n      }));\n\n    } else {\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === companyValue).map((item) => ({\n        label: item.vehicleName,\n        value: item._id,\n      }));\n\n\n    }\n\n\n\n    tempcompanyOptions.push({ label: \"None\", value: 0 });\n\n    // setBusinessUserOptions(tempbusinessUserOptions);\n    if (businessUserValue) {\n      // setCompanyOptions(tempcompanyOptions);\n    }\n    else {\n\n      // setCompanyOptions([...defaultCompanyOptions, { label: \"None\", value: 0 }]);\n    }\n    setVehiclesOptions(tempvehicleOptions);\n\n\n    setParentOptions(tempparentOptions);\n  }, [businessUserValue, companyValue, parentValue]);\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState(branchData);\n  useEffect(() => {\n    if(userDetails.user.role === 'COMPANY'){\n      setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId);\n      setBusinessDisabled(true);\n      \n      setValue(\"parentCompany\", userDetails?.user.companyId)\n      setCompanyId(userDetails?.user.companyId);\n      setCompanyDisabled(true);\n      console.log(\"parentCompany\", userDetails?.user.businessGroupId)\n    }\n    if(userDetails.user.role === 'BUSINESS_GROUP'){\n      \n      // setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId);\n      console.log(userDetails?.user.businessGroupId, \"dsggsgs\")\n      setBusinessDisabled(true);\n    }\n},[])\n  useEffect(() => {\n    const id = filteredUserData[0]?._id;\n    id ? setIsEdit(true) : setIsEdit(false);\n    if(id){\n      const selectedTemplateId = filteredUserData[0]?.featureTemplateId;\n      const selectedGroupId = filteredUserData[0]?.businessGroupId;\n      const selectedCompanyId = filteredUserData[0]?.companyId;\n      const selectedBranchId = filteredUserData[0]?.branchIds;\n      setValue(\"featureTemplateId\", selectedTemplateId);\n      setValue(\"businessUser\", selectedGroupId);\n      console.log(\"selectedGroupId\", selectedGroupId)\n      loadDatainDropdowns();\n      setValue(\"parentCompany\", selectedCompanyId);\n      setValue(\"Branch\", selectedBranchId);\n      setValue(\"branchIds\", selectedBranchId);\n\n      setValue(\n        \"parentBusinessGroup\",\n        filteredCompanyData[0] ? filteredCompanyData[0].parentBusinessGroup : \"\"\n      );\n      setValue(\n        \"parentBranch\",\n        filteredCompanyData[0] ? filteredCompanyData[0].parentBranch : \"\"\n      );\n      if (id) {\n\n        setValue(\n          \"country\",\n          filteredUserData[0] ? filteredUserData[0]?.country : \"\"\n        );\n\n        setDefaultValue({ name: filteredUserData[0]?.country })\n        setValue(\n          \"state\",\n          filteredUserData[0] ? filteredUserData[0]?.state : \"\"\n        );\n        setSelectStateName({ name: filteredUserData[0]?.state || '' })\n      }\n\n      setValue(\n        \"_id\",\n        filteredUserData[0] ? filteredUserData[0]?._id : id \n      );\n      async function loadDatainDropdowns() {\n        await onGroupChange(selectedGroupId);\n        await onCompanyChange(selectedCompanyId);\n      }\n    }\n    setValue(\"isEdit\", isEdit);\n    \n\n  }, [TemplateOptions, allBranches, allCompanies, allGroups,]);\n\n\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('businessGroup')}</label>\n\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n              //     await onGroupChange(newValue.value);\n              //     setBusinessUserValue(newValue.label);\n              //     setValue(\"parentBusinessGroup\", newValue.value);\n              //     setValue(\"businessUser\", newValue.value);\n              //   }}\n              //   options={businessUserOptions}\n              //   ref={ref}\n              //   isDisabled={defaultValues?.business?.disabled}\n              //   name={name}\n              //   value={businessUserOptions.find(option => option.value === value)}\n              //   styles={customStyles}\n              // />\n              <GroupDropdown\n              key={groupId}\n                onChange={async (newValue) => {\n                  setValue(\"businessUser\", newValue.value);\n                  setGroupId(newValue.value);\n                  setCompanyId(null);\n                }}\n                value={value}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={businessDisabled}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t('company')}\n          </label>\n\n          <Controller\n            name=\"parentCompany\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n              //     await onCompanyChange(newValue.value);\n              //     setCompanyValue(newValue.label);\n              //     setValue(\"parentCompany\", newValue.value);\n              //   }}\n              //   isDisabled={defaultValues?.company?.disabled}\n              //   options={companyOptions}\n              //   ref={ref}\n              //   name={name}\n              //   styles={customStyles}\n              //   value={companyOptions.find(option => option.value === value)}\n\n              // />\n              <CompanyDropdown\n              onChange={async (newValue) => {\n                setValue(\"parentCompany\", newValue.value);\n                setCompanyId(newValue.value);\n              }}\n              key={groupId}\n              groupId={groupId}\n              value={value}\n              customStyles={customStyles}\n              name={name}\n              ref={ref}\n              isDisabled={companyDisabled}\n            />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('branch')}</label>\n          <Controller\n            name=\"Branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              // <Select\n              //   onChange={async (newValue) => {\n\n              //     const selectedValues = newValue.map(option => option.value);\n              //     setValue(\"Branch\", selectedValues);\n              //     setValue(\"branchIds\", selectedValues);\n              //   }}\n              //   options={branchOptions}\n              //   ref={ref}\n              //   name={name}\n              //   styles={customStyles}\n              //   isMulti={true}\n              //   value={Array.isArray(value) ? value.map(val => branchOptions.find(option => option.value === val)) : []}\n              // />\n              <BranchDropdown\n                onChange={(newValue) => {\n                console.log(\"newValue\", newValue)\n                const valuesArray = newValue.map(item => item.value);\n                setValue(\"Branch\", valuesArray);\n                setValue(\"branchIds\", valuesArray);\n              }}\n              key={companyId}\n              companyId={companyId}\n              value={value}\n              customStyles={customStyles}\n              name={name}\n              ref={ref}\n              isDisabled={false}\n  \n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        {/* <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('vehicle')}</label>\n          <Controller\n            name=\"accessibleVehicles\"\n            control={control}\n            \n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"vehicle\", newValue);\n                }}\n                options={vehiclesOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].vehicle : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"vehicle\") && <Error errorName={errors.parent} />}\n        </div> */}\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t('email')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('username')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('mobileNumber')} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => { const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '' : temp }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t('country')}<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setSelectStateName({ name: \"\" });\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n            // value={getValues(\"country\")}\n            defaultValue={defaultValue}\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n            }`}\n        >\n          <label className=\"form-label\">\n            {t('state')}\n          </label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n              defaultValue={selectStateName}\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        {!isEdit && (<><div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('password')} <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"position-relative\">\n            <CustomInput\n              type={showPassword ? \"text\" : \"password\"}\n              register={register}\n              label=\"Password\"\n              name=\"password\"\n              placeholder=\"\"\n              defaultValue={\n                filteredUserData[0] ? filteredUserData[0].password : \"\"\n              }\n            />\n            <span\n              className=\"showPasswordIcon\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n            >\n              {showPassword ? <LuEyeOff /> : <LuEye />}\n\n            </span>\n          </div>\n          <Error errorName={errors.password} />\n        </div>\n          <div className=\"col-xl-6 mb-3 \">\n            <label className=\"form-label\">\n              {t('confirmPassword')} <span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                register={register}\n                label=\"Confirm Password\"\n                name=\"confirmPassword\"\n                placeholder=\"\"\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].confirmPassword : \"\"\n                }\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setConfirmShowPassword(!showConfirmPassword);\n                }}\n              >\n                {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n\n              </span>\n            </div>\n            <Error errorName={errors.confirmPassword} />\n          </div> </>)}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t('featureTemplate')} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setTempValue(e);\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(option => option.value === field.value)}\n              // defaultValue={filteredUserData[0] ? TemplateOptions.find(option => option._id === filteredUserData[0].featureTemplateId) : \"\"}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t('submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema } from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from 'react-i18next'\nimport { createUser, updateUser } from '../../../services/api/UserServices'\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { checkRole, checkUserName } = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [t('account')];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = async (data) => {\n    console.log(data, 'this is data')\n    //if data.businessUser exists create new field named businessGroupId in data with value of businessUser\n    if (data.businessUser) {\n      data.businessGroupId = data.businessUser;\n    }\n    if(data.parentCompany){\n      data.companyId = data.parentCompany;\n    }\n    if(data.Branch){\n      console.log(data.Branch)\n      data.branchId = data.Branch;\n    }\n    console.log(data, 'this is data')\n    if (data.hasOwnProperty('_id') && data._id) {\n\n      try {\n        const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n        const index = existingData.findIndex((item) => item._id === data._id);\n\n        existingData[index] = { ...existingData[index], ...data };\n        const response = await updateUser(data, data._id)\n        console.log('this is updateResponse', response)\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          notifySuccess(\"User updated successfully !!\");\n          navigate('/subUser')\n        }\n          // UserServices.updateuser(data, data._id)\n          // .then(response => {\n          //   if(response?.data?.success === true){\n          //     localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          //     notifySuccess(\"User updated successfully !!\");\n          //     navigate('/subUser')\n          //   }else{\n          //     notifyError(response?.message?.message)\n          //   }\n          // }).catch(error => {\n          //   notifyError(error?.message?.message);\n          // })\n        } catch (error) {\n          notifyError(\"Error Occured !!\");\n        }\n      }else {\n        try {\n          const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n          // data.id = existingData.length + 1;\n          data.role = \"USER\";\n          data.parent = userName;\n          data.type = \"STAFF\";\n          const response = await createUser(data)\n          console.log('this is response', response)\n          if (response.error) {\n            notifyError(response.error);\n          } else {\n            data._id = response._id\n            existingData.unshift(data);\n            localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n            notifySuccess(\"User created successfully !!\");\n            navigate('/subUser')\n          }\n\n          // UserServices.createUser(data)\n          // .then(response => {\n          //   if(response?.data?.success === true){\n          //   console.log('this is response',response)\n          //   data._id = response.data.data._id\n          //   existingData.push(data);\n          //   localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          //   notifySuccess(\"User created successfully !!\");\n          //   navigate('/subUser')\n          //   }else{\n          //     notifyError(response?.message?.message)\n          //   }\n          // }).catch(error => {\n          //   notifyError(error?.message?.message);\n          // })\n\n        } catch (error) {\n          notifyError(\"Something Went Wrong\");\n        }\n      }\n    }\n    const { id } = useParams();\n    return (\n      <>\n        <MainPagetitle\n          mainTitle=\"User\"\n          pageTitle={id ? \"Edit\" : \"Create\"}\n          parentTitle={\"User\"}\n        />\n        <div className=\"m-2 p-2\">\n          <FormProvider>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"default-tab\">\n                <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                  <Nav as=\"ul\" className=\"nav-tabs\">\n                    {tabHeading.map((data, i) => (\n                      <Nav.Item as=\"li\" key={i}>\n                        <Nav.Link\n                          style={{ padding: \".5rem 2rem\" }}\n                          eventKey={data.toLowerCase()}\n                          active={i === activeIndex}\n                          onClick={() => setActiveIndex(i)}\n                        >\n                          {data}\n                        </Nav.Link>\n                      </Nav.Item>\n                    ))}\n                  </Nav>\n                  <Tab.Content className=\"pt-4\">\n                    {tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            onSubmit={onSubmit}\n                            handleSubmit={handleSubmit}\n                          />\n                        </Tab.Pane>\n                      );\n                    })}\n                  </Tab.Content>\n                </Tab.Container>\n              </div>\n            </form>\n          </FormProvider>\n        </div>\n      </>\n    );\n  };\n  export default SubUserForm;\n","import { get } from \"react-scroll/modules/mixins/scroller\";\nimport requests from \"./Axios\";\nimport axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios()\n\n\nexport const getTemplates = async (page) => {\n  try {\n    console.log(\"page is here \", page)\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n    const response = await axios.get(url);\n      return response.data;\n  } catch(error){\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" }\n  }\n}\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  \n//   getStaffById: async (id, body) => {\n//     return requests.post(`/admin/${id}`, body);\n//   },\n\n\n  createTemplate: async (body) => {\n\n    try {\n      console.log(body)\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  }\n};\n\nexport default TemplateServices;\n"],"names":["_ref","onChange","value","customStyles","name","companyId","isDisabled","ref","dropDownOptions","setdropDownOptions","useState","selectedOption","setSelectedOption","page","usePagination","useEffect","async","response","getAllBranch","undefined","groupOptions","data","map","item","_id","label","branchName","console","log","fetchBusinessGroups","selected","filter","option","includes","_jsx","Select","options","newValue","styles","isMulti","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","selectStateName","setSelectStateName","defaultValue","setDefaultValue","allGroups","setAllGroups","allCompanies","setAllCompanies","allBranches","setAllBranches","checkRole","checkUser","useStorage","tempValue","setTempValue","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","isEdit","setIsEdit","groupId","setGroupId","setCompanyId","userDetails","JSON","parse","localStorage","getItem","t","useTranslation","base","padding","getGroups","companyResponse","getCompany","branchResponse","error","notifyError","groups","_item$businessGroupId","_item$businessGroupId2","businessGroupId","groupName","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyName","branches","branchOptions","setParentOptions","fetchOptions","getTemplates","tempOptions","role","id","useParams","User","loggedinemail","defaultCompanyOptions","parentbgname","DummyData","userName","parent","_parentbgnamefilter$","user","parentCompany","parentBusinessGroup","branchData","newData","filteredUserData","setFilteredUserData","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","businessDisabled","setBusinessDisabled","companyDisabled","setCompanyDisabled","tempcompanyOptions","tempparentOptions","tempvehicleOptions","cp","br","vehicleName","company","push","filteredCompanyData","setFilteredCompanyData","_filteredUserData$","_filteredUserData$2","_filteredUserData$3","_filteredUserData$4","_filteredUserData$5","_filteredUserData$10","selectedTemplateId","featureTemplateId","selectedGroupId","selectedCompanyId","selectedBranchId","branchIds","_filteredUserData$6","_filteredUserData$7","_filteredUserData$8","_filteredUserData$9","loadDatainDropdowns","parentBranch","country","state","_item$companyId","_item$companyId$busin","_item$companyId2","_item$companyId3","onGroupChange","_item$companyId4","onCompanyChange","children","_jsxs","className","style","width","margin","Controller","rules","required","render","_ref2","field","GroupDropdown","_ref3","CompanyDropdown","_ref4","BranchDropdown","valuesArray","Error","errorName","htmlFor","CustomInput","type","email","placeholder","min","onInput","e","temp","Math","max","target","mobileNumber","CountrySelect","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref5","find","display","justifyContent","Button","Title","editData","setEditData","activeIndex","setActiveIndex","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","businessUser","Branch","branchId","hasOwnProperty","existingData","index","findIndex","updateUser","setItem","stringify","notifySuccess","createUser","unshift","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane","initAxios","url","axios","get","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}