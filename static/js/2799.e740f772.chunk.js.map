{"version":3,"file":"static/js/2799.e740f772.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {  Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  featureTemplateOptions,\n} from \"../VehicleTabs/Options\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\n\nconst Account = ({ handleNext, register, setValue, onSubmit, handleSubmit, getValues, errors, control}) => {\n  \n  const {checkUser} = useStorage()\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n\n  const { id } = useParams();\n\n\n  const userData = JSON.parse(localStorage.getItem('userJsonData'))\n\n  const newData = userData.filter(data => data.id === parseInt(id,10));\n\n  const [filteredUserData,setFilteredUserData] = useState(newData);\n\n  \n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n      <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n           Email  <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : ''}\n            placeholder=\"\"\n          />\n           <Error errorName={errors.email} />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].userName : ''}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country<span className=\"text-danger\">*</span></label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n         { !getValues('country') && <Error errorName={errors.country} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">State<span className=\"text-danger\">*</span></label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues('state') && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Mobile Number <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].contact : ''}\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Feature Template <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplate\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {setTempValue(newValue.label); setValue(\"featureTemplate\", newValue.label)}}\n                options={featureTemplateOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={featureTemplateOptions[0]} \n              />\n            )}\n          />\n          {!getValues('featureTemplate') && <Error errorName={errors.featureTemplate} />}\n        </div>\n        \n        </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button type=\"submit\" onClick={handleSubmit(onSubmit)} style={{ width: \"10%\" }}> Submit</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {subUserAccountSchema} from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {checkRole,checkUserName} = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [\"Account\"];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = (data) => {\n    try {\n      const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = existingData.length + 1;\n      data.role = \"user\";\n      data.parent = userName;\n      data.type = role;\n      existingData.push(data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n      notifySuccess(\"User created successfully !!\");\n      navigate('/subUser')\n    } catch (error) {\n      notifyError(\"Error Occured !!\");\n      navigate('/subUser')\n    }\n  }\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={\"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","checkUser","useStorage","tempValue","setTempValue","useState","countryid","setCountryid","stateid","setstateid","customStyles","base","padding","id","useParams","newData","JSON","parse","localStorage","getItem","filter","data","parseInt","filteredUserData","setFilteredUserData","_jsxs","className","children","style","width","margin","htmlFor","_jsx","CustomInput","type","label","name","defaultValue","email","placeholder","Error","errorName","userName","CountrySelect","onChange","e","containerClassName","inputClassName","placeHolder","country","background","StateSelect","state","contact","mobileNumber","Controller","rules","required","render","_ref2","field","value","ref","Select","newValue","options","featureTemplateOptions","styles","featureTemplate","display","justifyContent","Button","onClick","Title","editData","setEditData","activeIndex","setActiveIndex","checkRole","checkUserName","role","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","existingData","parent","push","setItem","stringify","notifySuccess","error","notifyError","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}