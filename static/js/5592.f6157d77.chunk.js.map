{"version":3,"file":"static/js/5592.f6157d77.chunk.js","mappings":"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","sources":["jsx/components/Tables/TechnicianTaskTable.jsx","jsx/constant/TechnicianTaskOffcanvas.js","jsx/pages/TechnicianTask.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from '../Modal/DeleteModal';\n\nconst TechnicianTaskTable = ({tableData, onConfirmDelete, editDrawerOpen}) => {\n    return (\n        <>\n            {tableData.map((item, index) => (\n                <tr key={index}>\n                    <td><span>{item.id}</span></td>\n                    <td>\n                        <div className=\"products\">\n                            <div>\n                                <h6>{item.taskName}</h6>\n                            </div>\n                        </div>\n                    </td>\n                    <td><span>{item.taskCategory}</span></td>\n                    <td>\n                        <span>{item.technicianName}</span>\n                    </td>\n                    <td>\n                        <span>{item.serviceLocation}</span>\n                    </td>\n                    <td><span className=\"text-primary\">{item.reportingTime}</span></td>\n                    <td>\n                        <span className='d-flex justify-content-center'>\n                            <span className='cursor-pointer'  ><FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} /></span>\n                            <DeleteModal className='cursor-pointer ' onConfirmDelete={onConfirmDelete} id={item.id} ><MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} /></DeleteModal>\n\n                        </span>\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n// onClick={() => editDrawerOpen(item.id)}\nexport default TechnicianTaskTable","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport {\n  CitySelect,\n  CountrySelect,\n  StateSelect,\n} from \"react-country-state-city\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { useForm, Controller, FormProvider } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../components/Error/Error\";\nimport CustomInput from \"../components/Input/CustomInput\";\nimport '../../scss/pages/_driver-tracking.scss'\nimport {taskCategoryOptions, severityOptions, technicianOptions, branchOptions} from '../components/TabComponent/VehicleTabs/Options'\n\nconst TechnicianOffcanvas = forwardRef(\n  ({ Title, handleSubmit, editData, setEditData, control, setValue, getValues,register, errors, onSubmit }, ref) => {\n    const [addEmploye, setAddEmploye] = useState(false);\n    const [tempValue, setTempValue] = useState();\n    useImperativeHandle(ref, () => ({\n      showModal() {\n        setAddEmploye(true);\n      },\n    }));\n    const nav = useNavigate();\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      console.log(e.target.value);\n      setEditData({ ...editData, [name]: value });\n    };\n\n    const [selectedOption, setSelectedOption] = useState(null);\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        padding: \".25rem 0 \", // Adjust the height as needed\n      }),\n    };\n\n    return (\n      <>\n        <Offcanvas\n          show={addEmploye}\n          onHide={setAddEmploye}\n          className=\"offcanvas-end customeoff\"\n          placement=\"end\"\n        >\n          <div className=\"offcanvas-header\">\n            <h5 className=\"modal-title\" id=\"#gridSystemModal\">\n              {Title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setAddEmploye(false)}\n            >\n              <i className=\"fa-solid fa-xmark\"></i>\n            </button>\n          </div>\n          <div className=\"offcanvas-body\">\n            <div className=\"container-fluid\">\n              <FormProvider>\n              <form onSubmit={ handleSubmit(onSubmit)}>\n                <div className=\"row\"> \n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Technicnan <span className=\"text-danger\">*</span>\n                    </label>\n                    <Controller\n                      name=\"technician\"\n                      control={control}\n                      rules={{ required: true }}\n                      render={({ field: { onChange, value, name, ref } }) => (\n                        <Select\n                          onChange={(newValue) => {setTempValue(newValue.value);setValue(\"technician\", newValue.value)}}\n                          options={technicianOptions}\n                          ref={ref}\n                          name={name}\n                          styles={customStyles}\n                          defaultValue={technicianOptions[0]}\n                        />\n                      )}\n                    />\n                    {!getValues('technician') && <Error errorName={errors.technician} />}\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Task Category <span className=\"text-danger\">*</span>\n                    </label>\n                    <Controller\n                      name=\"c\"\n                      control={control}\n                      rules={{ required: true }}\n                      render={({ field: { onChange, value, name, ref } }) => (\n                        <Select\n                          onChange={(newValue) =>{setTempValue(newValue.value); setValue(\"taskCategory\", newValue.value)}}\n                          options={taskCategoryOptions}\n                          ref={ref}\n                          name={name}\n                          styles={customStyles}\n                          defaultValue={taskCategoryOptions[0]}\n                        />\n                      )}\n                    />\n                     { !getValues('taskCategory') && <Error errorName={errors.taskCategory} />}\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label\n                      htmlFor=\"exampleFormControlInput2\"\n                      className=\"form-label\"\n                    >\n                      Task Name <span className=\"text-danger\">*</span>\n                    </label>\n                    <CustomInput\n                      type=\"text\"\n                      register={register}\n                      name=\"taskName\"\n                      label=\"Task Name\"\n                      placeholder=\"\"\n                    />\n                    <Error errorName={errors.taskName} />\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Task Priority <span className=\"text-danger\">*</span>\n                    </label>\n                    <Controller\n                      name=\"taskPriority\"\n                      control={control}\n                      rules={{ required: true }}\n                      render={({ field: { onChange, value, name, ref } }) => (\n                        <Select\n                          onChange={(newValue) => {setTempValue(newValue.value); setValue(\"taskPriority\", newValue.value)}}\n                          options={severityOptions}\n                          ref={ref}\n                          name={name}\n                          styles={customStyles}\n                          defaultValue={severityOptions[0]}\n                        />\n                      )}\n                    />\n                   { !getValues('taskPriority') && <Error errorName={errors.taskPriority} />}\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Contact Person Name \n                    </label>\n                    <CustomInput\n                      type=\"text\"\n                      register={register}\n                      name=\"contactPersonName\"\n                      label=\"Contact Person Name\"\n                      placeholder=\"\"\n                    />\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label\n                      htmlFor=\"exampleFormControlInput3\"\n                      className=\"form-label\"\n                    >\n                      Contact Person Number\n                    </label>\n                    <CustomInput\n                      type=\"number\"\n                      register={register}\n                      name=\"contactPersonNumber\"\n                      label=\"Contact Person Number\"\n                      placeholder=\"\"\n                    />\n                    <Error errorName={errors.contactPersonNumber} />\n                  </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Service Location<span className=\"text-danger\">*</span>\n                    </label>\n                    <CustomInput\n                      type=\"text\"\n                      name=\"serviceLocation\"\n                      register={register}\n                      label=\"Service Location\"\n                      placeholder=\"\"\n                    />\n                    <Error errorName={errors.serviceLocation} />\n                  </div>\n                  <div className=\"col-xl-6 mb-3 d-flex flex-column\">\n                    <label className=\"form-label\">\n                      Planned Reporting <span className=\"text-danger\">*</span>\n                    </label>\n                    <Controller\n                      name=\"plannedReportingDate\"\n                      control={control}\n                      render={({ value, name }) => (\n                        <DatePicker\n                          selected={\n                            getValues(\"plannedReportingDate\") || new Date()\n                          }\n                          className=\"form-control customDateHeight\"\n                          onChange={(newValue) => setValue(\"plannedReportingDate\", newValue)}\n                        />\n                      )}\n                    />\n                    {!getValues(\"serviceLocation\") && <Error errorName={errors.serviceLocation} />}\n                  </div>\n                  <div className=\"col-xl-6 mb-3 \">\n                    <label className=\"form-label\">Reporting Time <span className=\"text-danger\">*</span></label>\n                      <CustomInput\n                        type=\"time\"\n                        register={register}\n                        name=\"reportingTime\"\n                        label=\"Reporting Time\"\n                        placeholder=\"\"\n                      />\n                      <Error errorName={errors.reportingTime} />\n                      </div>\n                  <div className=\"col-xl-6 mb-3\">\n                    <label className=\"form-label\">\n                      Description \n                    </label>\n                    <div className=\"mb-3 \">\n                      <textarea\n                        className=\"form-txtarea form-control\"\n                        {...register}\n                        name='description'\n                        label=\"Description\"\n                        rows=\"8\"\n                        id=\"comment\"\n                      ></textarea>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <button\n                    type=\"submit\"\n                    onClick={() => {handleSubmit(onSubmit)}}\n                    className=\"btn btn-primary me-1\"\n                  >\n                    Submit\n                  </button>\n                  <Link\n                    to={\"#\"}\n                    onClick={() => setAddEmploye(false)}\n                    className=\"btn btn-danger light ms-1\"\n                  >\n                    Cancel\n                  </Link>\n                </div>\n              </form>\n              </FormProvider>\n            </div>\n          </div>\n        </Offcanvas>\n      </>\n    );\n  }\n);\n\nexport default TechnicianOffcanvas;\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\n\nimport { IMAGES } from '../constant/theme';\nimport MainPagetitle from '../layouts/MainPagetitle';\nimport InviteCustomer from '../constant/ModalList';\nimport {TechnicianTaskData} from '../components/Tables/Tables'\nimport TechnicianTaskTable from '../components/Tables/TechnicianTaskTable';\nimport TechnicianTaskOffcanvas from '../constant/TechnicianTaskOffcanvas';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {technicianTaskSchema} from '../../yup'\n\nconst headers = [\n    { label: \"Employee ID\", key: \"emplid\" },\n    { label: \"Employee Name\", key: \"title\" },\n    { label: \"Department\", key: \"department\" },\n    { label: \"Email Address\", key: \"email\" },\n    { label: \"Contact Number\", key: \"contact\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Location\", key: \"location\" },\n    { label: \"Status\", key: \"status\" },\n]\n\nconst TechnicianTask = (ref) => {\n    const[tableData, setTableData] = useState(TechnicianTaskData)\n    const [editData , setEditData] = useState({\n        id:0,\n        status:'',    \n        title:'',\n        contact:0,\n        age:0,\n        drivingExperience:0,\n        gender:'',\n        location:''\n    });\n    const [data, setData] = useState(\n        document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n    );\n    const sort = 10;\n    const activePag = useRef(0);\n    const [test, settest] = useState(0);\n    const chageData = (frist, sec) => {\n        for (var i = 0; i < data.length; ++i) {\n            if (i >= frist && i < sec) {\n                data[i].classList.remove(\"d-none\");\n            } else {\n                data[i].classList.add(\"d-none\");\n            }\n        }\n    };\n\n    // const[formData, setFormData] = useState()\n\n    \n\n    useEffect(() => {\n        setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n    }, [test]);\n\n    activePag.current === 0 && chageData(0, sort);\n    let paggination = Array(Math.ceil(data.length / sort))\n        .fill()\n        .map((_, i) => i + 1);\n    const onClick = (i) => {\n        activePag.current = i;\n        chageData(activePag.current * sort, (activePag.current + 1) * sort);\n        settest(i);\n    };\n    const onConfirmDelete = (id) => {\n        const updatedData = tableData.filter(item => item.id !== id);\n        setTableData(updatedData);\n    }\n    const editDrawerOpen = (item)=>{\n        tableData.map((table)=>(\n            table.id === item && setEditData(table)\n        ))\n\n        // setEditTableData(item);\n        \n        \n    }\n    // const handleSubmit=(e)=>{\n    //     e.preventDefault();\n    //     const updateTable = tableData.map((table)=>{\n    //         if(table.id === editData.id) {\n    //             console.log(table.id)   \n    //             return {...table, ...editData };\n    //         }\n    //         return table;\n    //     })\n    //     setTableData(updateTable)\n    // } \n    const {register, formState:{errors}, setValue, getValues, control, handleSubmit} = useForm({\n        resolver: yupResolver(technicianTaskSchema )\n      })\n    \n      const onSubmit = (data)=>{\n        console.log(data)\n      } \n\n    const technicianTask = useRef();\n    return (\n        <>\n            <MainPagetitle mainTitle=\"Technician Task\" pageTitle={'Technician Task'} parentTitle={'Technician'} />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body p-0\">\n                                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                                    <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                                        <h4 className=\"heading mb-0\">Technician Task</h4>\n                                        <div>\n \n                                            <Link to={\"#\"} className=\"btn btn-primary btn-sm ms-1\" data-bs-toggle=\"offcanvas\"\n                                                onClick={() => technicianTask.current.showModal()}\n                                            >+ Add Technician Task</Link> {\" \"}\n                                           \n                                        </div>\n                                    </div>\n                                    <div id=\"employee-tbl_wrapper\" className=\"dataTables_wrapper no-footer\">\n                                        <table id=\"empoloyees-tblwrapper\" className=\"table ItemsCheckboxSec dataTable no-footer mb-0\">\n                                            <thead>\n                                                <tr>\n                                                    <th>ID</th>\n                                                    <th>Task Name</th>\n                                                    <th>Task Category</th>\n                                                    <th>Technician Name</th>\n                                                    <th>Service Location</th>\n                                                    <th>Reporting Time </th>\n                                                    <th>Action</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <TechnicianTaskTable editData={editData} tableData={tableData} onConfirmDelete={onConfirmDelete} editDrawerOpen={editDrawerOpen} setEditData={setEditData}/>\n                                            </tbody>\n                                            \n                                        </table>\n                                        <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                                            <div className=\"dataTables_info\">\n                                                Showing {activePag.current * sort + 1} to{\" \"}\n                                                {data.length > (activePag.current + 1) * sort\n                                                    ? (activePag.current + 1) * sort\n                                                    : data.length}{\" \"}\n                                                of {data.length} entries\n                                            </div>\n                                            <div\n                                                className=\"dataTables_paginate paging_simple_numbers\"\n                                                id=\"example2_paginate\"\n                                            >\n                                                <Link\n                                                    className=\"paginate_button previous disabled\"\n                                                    to=\"/technicianTask\"\n                                                    onClick={() =>\n                                                        activePag.current > 0 &&\n                                                        onClick(activePag.current - 1)\n                                                    }\n                                                >\n                                                    <i className=\"fa-solid fa-angle-left\" />\n                                                </Link>\n                                                <span>\n                                                    {paggination.map((number, i) => (\n                                                    <Link\n                                                        key={i}\n                                                        to=\"/technicianTask\"\n                                                        className={`paginate_button  ${\n                                                            activePag.current === i ? \"current\" : \"\"\n                                                        } `}\n                                                        onClick={() => onClick(i)}\n                                                    >\n                                                        {number}\n                                                    </Link>\n                                                    ))}\n                                                </span>\n                                                <Link\n                                                    className=\"paginate_button next\"\n                                                    to=\"/technicianTask\"\n                                                    onClick={() =>\n                                                        activePag.current + 1 < paggination.length &&\n                                                        onClick(activePag.current + 1)\n                                                    }\n                                                >\n                                                    <i className=\"fa-solid fa-angle-right\" />\n                                                </Link>\n                                            </div>\n                                        </div> \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <TechnicianTaskOffcanvas \n                ref={technicianTask}\n                editData={editData}\n                control={control}\n                setValue={setValue}\n                getValues={getValues}\n                onSubmit={onSubmit}\n                register={register}\n                errors={errors}\n                setEditData={setEditData}\n                handleSubmit={handleSubmit}\n                Title={ editData.id === 0 ? \"Add Task\" : \"Edit Task\"}\n            />\n        </>\n    );\n};\n\nexport default TechnicianTask;"],"names":["_ref","tableData","onConfirmDelete","editDrawerOpen","_jsx","_Fragment","children","map","item","index","_jsxs","id","className","taskName","taskCategory","technicianName","serviceLocation","reportingTime","FaEdit","style","color","fontSize","DeleteModal","MdDelete","forwardRef","ref","Title","handleSubmit","editData","setEditData","control","setValue","getValues","register","errors","onSubmit","addEmploye","setAddEmploye","useState","tempValue","setTempValue","useImperativeHandle","showModal","useNavigate","selectedOption","setSelectedOption","customStyles","base","padding","Offcanvas","show","onHide","placement","type","onClick","FormProvider","Controller","name","rules","required","render","_ref2","field","onChange","value","Select","newValue","options","technicianOptions","styles","defaultValue","Error","errorName","technician","_ref3","taskCategoryOptions","htmlFor","CustomInput","label","placeholder","_ref4","severityOptions","taskPriority","contactPersonNumber","_ref5","DatePicker","selected","Date","rows","Link","to","setTableData","TechnicianTaskData","status","title","contact","age","drivingExperience","gender","location","data","setData","document","querySelectorAll","sort","activePag","useRef","test","settest","chageData","frist","sec","i","length","classList","remove","add","useEffect","current","paggination","Array","Math","ceil","fill","_","formState","useForm","resolver","yupResolver","technicianTaskSchema","technicianTask","MainPagetitle","mainTitle","pageTitle","parentTitle","TechnicianTaskTable","updatedData","filter","table","number","concat","TechnicianTaskOffcanvas","console","log"],"sourceRoot":""}