{"version":3,"file":"static/js/2799.9166bc8a.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport { featureTemplateOptions } from \"../VehicleTabs/Options\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\n\nimport {useTranslation} from \"react-i18next\";\n\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n}) => {\n  const { checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const {t} = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n\n    \n  };\n\n  const role = localStorage.getItem(\"role\");\n  const { id } = useParams();\n  const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if(role === \"admin\") {\n\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n\n  }else{\n\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n  }\n\n\n  console.log('ye he default company data', defaultCompanyOptions);\n\n\n\n  \n  \n  let parentbgname;\n  if(role === 'company') {\n    const parentbgnamefilter = User.filter(user => user.parentCompany === loggedinemail);\n    parentbgname = parentbgnamefilter[0].parentBusinessGroup;\n  }\n\n  const branchData = User.filter(\n    (item) => item.role === \"branch\" && item.id == id\n  );\n\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const newData = userData.filter((data) => data.id === parseInt(id, 10));\n\n  const defaultValues = getSelectValues();\n\n  const [filteredUserData, setFilteredUserData] = useState(newData);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n\n  useEffect(() => {\n    const tempbusinessUserOptions = DummyData.filter(\n      (item) => item.role === \"businessgroup\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n\n    let tempcompanyOptions;\n    if(role === \"businessgroup\"){\n\n      tempcompanyOptions = DummyData.filter(\n        (item) => item.role === \"company\"\n      )\n        .filter((cp) => cp.parent === loggedinemail)\n        .map((item) => ({\n          label: item.userName,\n          value: item.id,\n        }));\n        \n      }else{\n        \n        tempcompanyOptions = DummyData.filter(\n          (item) => item.role === \"company\"\n        )\n          .filter((cp) => cp.parent === businessUserValue)\n          .map((item) => ({\n            label: item.userName,\n            value: item.id,\n          }));\n        \n    }\n\n\n    let tempparentOptions;\n\n    if(role === 'company') {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === loggedinemail)\n        .map((item) => ({\n          label: item.userName,\n          value: item.id,\n        }));\n      }else{\n        tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n          .filter((br) => br.parentCompany === companyValue)\n          .map((item) => ({\n            label: item.userName,\n            value: item.id,\n          }));\n    }\n\n    let tempvehicleOptions;\n    if(role === 'company') {\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === loggedinemail ).map((item) => ({\n        label: item.vehicleName,\n        value: item.id,\n      }));\n      \n    }else{\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === companyValue ).map((item) => ({\n        label: item.vehicleName,\n        value: item.id,\n      }));\n      \n\n    }\n\n\n\n    tempcompanyOptions.push({ label: \"None\", value: 0 });\n\n    setBusinessUserOptions(tempbusinessUserOptions);\n\n    console.log('ye he value ',businessUserValue);\n    if(businessUserValue) {\n      setCompanyOptions(tempcompanyOptions);\n    }\n    else{\n\n      setCompanyOptions([...defaultCompanyOptions,{ label: \"None\", value: 0 }]);\n    }\n    setVehiclesOptions(tempvehicleOptions);\n\n\n    setParentOptions(tempparentOptions);\n  }, [businessUserValue, companyValue, parentValue]);\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState(branchData);\n\n  useEffect(() => {\n    setValue(\n      \"parentBusinessGroup\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentBusinessGroup : \"\"\n    );\n    setValue(\n      \"parentCompany\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentCompany : \"\"\n    );\n    setValue(\n      \"parentBranch\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentBranch : \"\"\n    );\n    setValue(\n      \"country\",\n      filteredCompanyData[0] ? filteredCompanyData[0].country : \"\"\n    );\n    setValue(\n      \"state\",\n      filteredCompanyData[0] ? filteredCompanyData[0].state : \"\"\n    );\n  }, []);\n\n\n  \n  \n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('businessGroup')}</label>\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setBusinessUserValue(newValue.label);\n                  setValue(\"parentBusinessGroup\", newValue.label);\n                }}\n                options={businessUserOptions}\n                ref={ref}\n                isDisabled={defaultValues.business.disabled}\n                name={name}\n                styles={customStyles}\n\n                defaultValue={role === 'company' && {\n                  label: parentbgname,\n                  value: parentbgname,\n                } || role === 'businessgroup' && {\n                  label: loggedinemail,\n                  value: loggedinemail,\n                } \n              }\n              />\n            )}\n          />\n        </div>\n\n\n        \n\n\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Company\n          </label>\n\n          <Controller\n            name=\"parentCompany\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setCompanyValue(newValue.label);\n                  setValue(\"parentCompany\", newValue.label);\n                }}\n                isDisabled={defaultValues.company.disabled}\n                options={companyOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n\n                defaultValue={role === 'company' && {\n                  label: loggedinemail,\n                  value: loggedinemail,\n                } }\n\n                \n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Branch</label>\n          <Controller\n            name=\"Branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"Branch\", newValue);\n                }}\n                options={parentOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].Branch : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Vehicle</label>\n          <Controller\n            name=\"accessibleVehicles\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"vehicle\", newValue);\n                }}\n                options={vehiclesOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].vehicle : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"vehicle\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Email <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Mobile Number <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e)=>{const temp = Math.max(0, e.target.value); e.target.value = temp < 1 ? '': temp}}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Country<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setstateid(null);\n              setTempValue(e.name)\n              setValue(\"state\", 'Select State');\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">\n            State\n          </label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Password\"\n            name=\"password\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].password : \"\"\n            }\n          />\n          <Error errorName={errors.password} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Confirm Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].confirmPassword : \"\"\n            }\n          />\n          <Error errorName={errors.confirmPassword} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Feature Template <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplate\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setTempValue(newValue.label);\n                  setValue(\"featureTemplate\", newValue.label);\n                }}\n                options={featureTemplateOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={featureTemplateOptions[0]}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplate\") && (\n            <Error errorName={errors.featureTemplate} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate,useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {subUserAccountSchema} from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {checkRole,checkUserName} = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [\"Account\"];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = (data) => {\n    try {\n      const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = existingData.length + 1;\n      data.role = \"user\";\n      data.parent = userName;\n      data.type = role;\n      existingData.push(data);\n      console.log('this is dataaaaaaaaaaaaaaaaa',data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n      notifySuccess(\"User created successfully !!\");\n      navigate('/subUser')\n    } catch (error) {\n      notifyError(\"Error Occured !!\");\n      navigate('/subUser')\n    }\n  }\n  const {id} = useParams();\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id?\"Edit\":\"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","checkUser","useStorage","tempValue","setTempValue","useState","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","t","useTranslation","customStyles","base","padding","role","localStorage","getItem","id","useParams","User","JSON","parse","loggedinemail","defaultCompanyOptions","parentbgname","DummyData","filter","item","map","label","userName","value","parent","console","log","parentbgnamefilter","user","parentCompany","parentBusinessGroup","branchData","newData","data","parseInt","defaultValues","getSelectValues","filteredUserData","setFilteredUserData","businessUserOptions","setBusinessUserOptions","companyOptions","setCompanyOptions","parentOptions","setParentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","useEffect","tempbusinessUserOptions","tempcompanyOptions","tempparentOptions","tempvehicleOptions","cp","br","vehicleName","company","push","filteredCompanyData","setFilteredCompanyData","parentBranch","country","state","_jsxs","className","children","style","width","margin","_jsx","Controller","name","rules","required","render","_ref2","field","onChange","ref","Select","newValue","options","isDisabled","business","disabled","styles","defaultValue","_ref3","_ref4","isMulti","Branch","Error","errorName","_ref5","vehicle","htmlFor","CustomInput","type","email","placeholder","min","onInput","e","temp","Math","max","target","mobileNumber","CountrySelect","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","password","confirmPassword","_ref6","featureTemplateOptions","featureTemplate","display","justifyContent","Button","onClick","Title","editData","setEditData","activeIndex","setActiveIndex","checkRole","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","existingData","setItem","stringify","notifySuccess","error","notifyError","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}