{"version":3,"file":"static/js/5163.f1d17ff1.chunk.js","mappings":"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","sources":["jsx/components/maps/EditControl.jsx","jsx/components/maps/ShowMap.jsx","jsx/components/Tracking/CompanyItem.jsx","jsx/components/Tracking/DriverTabComponent3.jsx","jsx/components/maps/DriverTab.jsx","jsx/pages/DriverTracking.jsx"],"sourcesContent":["import React,{useEffect, useRef} from 'react';\nimport * as L from 'leaflet';\nimport { FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\n\nexport default function EditControlFC({ geojson, setGeojson }) {\n  const ref =useRef(null);\n\n  useEffect(() => {\n    if (ref.current?.getLayers().length === 0 && geojson) {\n      L.geoJSON(geojson).eachLayer((layer) => {\n        if (\n          layer instanceof L.Polyline ||\n          layer instanceof L.Polygon ||\n          layer instanceof L.Marker\n        ) {\n          if (layer?.feature?.properties.radius && ref.current) {\n            new L.Circle(layer.feature.geometry.coordinates.slice().reverse(), {\n              radius: layer.feature?.properties.radius,\n            }).addTo(ref.current);\n          } else {\n            ref.current?.addLayer(layer);\n          }\n        }\n      });\n    }\n  }, [geojson]);\n\n  const handleChange = () => {\n    const geo = ref.current?.toGeoJSON();\n    console.log(geo);\n    if (geo?.type === 'FeatureCollection') {\n      setGeojson(geo);\n    }\n  };\n\n  return (\n    <FeatureGroup ref={ref}>\n      <EditControl\n        position=\"topright\"\n        onEdited={handleChange}\n        onCreated={handleChange}\n        onDeleted={handleChange}\n        draw={{\n          rectangle: false,\n          circle: true,\n          polyline: true,\n          polygon: true,\n          marker: true,\n          circlemarker: false,\n        }}\n      />\n    </FeatureGroup>\n  );\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport MapModes from \"./MapModes\";\nimport \"../../../scss/pages/_driver-tracking.scss\"\nimport { createRoot } from 'react-dom/client';\nimport { MapContainer, TileLayer, GeoJSON,Marker,Popup ,Tooltip} from 'react-leaflet';\nimport EditControlFC from './EditControl';\n\nconst ShowMapContainer = ({ data }) => {\n\n  return (\n    <div style={{ display: 'flex', height: '85vh' }}>\n    <div style={{ width: '100%' }}>\n      <MapContainer\n        center={[ 25.2233, 55.2869]}\n        zoom={14}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n        />       \n        <Marker styles={{background:'red'}} position={[ 25.2233, 55.2869]} ><Popup>Dubai Trade Center</Popup><Tooltip>Dubai Trade Center</Tooltip></Marker>\n      </MapContainer>\n    </div>\n  </div>\n  );\n};\n\nexport default ShowMapContainer;\n// const { isTrafficClick, setIsTrafficClick } = useContext(ThemeContext);\n\n// const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n// const { isLoaded } = useLoadScript({\n//   googleMapsApiKey: `${apiKey}`,\n// });\n{/* <div className=\"vehicle_tracking\">\n      <MapModes />\n      {!isLoaded ? (\n        <h3> Loading....</h3>\n      ) : (\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"80vh\" }}\n          center={data[0]}\n          zoom={13}\n        >\n          {!isTrafficClick ? (\n            data?.map(({ lat, lng }, index) => {\n              return <Marker key={index} position={{ lat, lng }} />;\n            })\n          ) : (\n            <TrafficLayer />\n          )}\n        </GoogleMap>\n      )}\n\n      \n    </div> */}\n","import React, { useEffect, useState } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nconst CompanyItem = (props) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n  useEffect(() => {\n    const data = Object.entries(props.vehicles).map((data) => {\n      const childNode = data[1].map((data) => {\n        return { label: data.vehicleName, value: data.id };\n      });\n\n      return { value: data[0], label: data[0], children: childNode };\n    });\n    setNodes([...data]);\n  }, [props.vehicles]);\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject)\n    props.handleToggleCardPositionHandler();\n  };\n  return (\n    <>\n    <div className=\"checkboxTree\">\n      <CheckboxTree\n        nodes={nodes}\n        checked={checked}\n        expanded={expanded}\n        onCheck={handleCheck}\n        onExpand={handleExpand}\n        showNodeIcon={false}\n        icons={{\n          expandOpen: <i class=\"fa-solid fa-minus\"></i>,\n          expandClose: <i class=\"fa-solid fa-plus\"></i>,\n          uncheck: (\n            <i\n              class=\"fa-regular fa-square\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          check: (\n            <i\n              class=\"fa-solid fa-square-check\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          halfCheck: (\n            <i\n              class=\"fa-regular fa-square-minus\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n        }}\n      />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default CompanyItem;\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nconst GeoFenceItem = ({ geoFences, handleToggleCardPositionHandler }) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n\nuseEffect(() => {\n    const data = Object.entries(geoFences).map(([company, fences]) => {\n      const childNodes = fences.map(fence => ({\n        label: fence.name,\n        value: fence.id\n      }));\n      return { value: company, label: company, children: childNodes };\n    });\n    setNodes(data);\n  }, [geoFences]);\n\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject);\n    handleToggleCardPositionHandler();\n  };\n\n  return (\n    <>\n      <div className=\"checkboxTree\">\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          onCheck={handleCheck}\n          onExpand={handleExpand}\n          showNodeIcon={false}\n          icons={{\n            expandOpen: <i className=\"fa-solid fa-minus\"></i>,\n            expandClose: <i className=\"fa-solid fa-plus\"></i>,\n            uncheck: (\n              <i\n                className=\"fa-regular fa-square\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            check: (\n              <i\n                className=\"fa-solid fa-square-check\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            halfCheck: (\n              <i\n                className=\"fa-regular fa-square-minus\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n          }}\n        />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default GeoFenceItem;","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Nav, Tab } from \"react-bootstrap\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport {\n  FaSearch,\n  FaFilter,\n  FaSortAlphaDown,\n  FaCircle,\n  FaWifi,\n  FaBatteryFull,\n  FaEdit,\n  FaTrashAlt,\n  FaLocationArrow,\n} from \"react-icons/fa\";\nimport { GrUserPolice } from \"react-icons/gr\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nimport { MdFence, MdDelete, MdAddLocationAlt } from \"react-icons/md\";\nimport { IoIosNavigate } from \"react-icons/io\";\nimport { IoIosArrowForward, IoIosArrowBack } from \"react-icons/io\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteModal from \"../Modal/DeleteModal\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { companyOptions } from \"../TabComponent/VehicleTabs/Options\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport CompanyItem from \"../Tracking/CompanyItem\";\nimport { getVehicles, statusData } from \"../../../utils/helper\";\nimport CheckboxTree from 'react-checkbox-tree'\nimport DriverCompanyItem from \"../Tracking/DriverTabComponent3\";\nimport GeoFenceItem from \"../Tracking/DriverTabComponent3\";\nconst DriverTab = ({ tabData, handleToggleCardPosition, isOutside }) => {\n  const componentData = {\n    name: \"Company1\",\n    drivers: [\n      { name: \"driver1\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver2\", timeStamp: \"22-02-2024 3:00 PM\", status: \"idle\" },\n      { name: \"driver3\", timeStamp: \"22-02-2024 3:00 PM\", status: \"inactive\" },\n      { name: \"driver4\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver5\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver6\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver7\", timeStamp: \"22-02-2024 3:00 PM\" },\n    ],\n    allocatedDriver: 4,\n    notAllocatedDriver: 3,\n    totalDriver: 7,\n  };\n\n  const components = [\n    DriverTabComponent1,\n    DriverTabComponent2,\n    DriverTabComponent3,\n  ];\n\n  return (\n    <>\n      <div\n        className={`default-tab outer-container ${\n          isOutside ? \"toggleBarInside\" : \"toggleBarOutside\"\n        }`}\n      >\n        <button\n          onClick={handleToggleCardPosition}\n          className=\"driver_tracking_button\"\n        >\n          {!isOutside ? <IoIosArrowForward /> : <IoIosArrowBack />}\n        </button>\n        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n          <Nav as=\"ul\" className=\"nav-tabs tracking_navTabs\">\n            {tabData.map((data, i) => {\n              const Icon = data.icon;\n              return (\n                <Nav.Item as=\"li\" key={i}>\n                  <Nav.Link eventKey={data.name.toLowerCase()}>\n                    <Icon className=\"tab-icon\" />\n                    {data.name}\n                  </Nav.Link>\n                </Nav.Item>\n              );\n            })}\n          </Nav>\n          <Tab.Content\n            className=\"p-2 py-4\"\n            style={{\n              background: \"#f5f5f5\",\n              overflow: \"scroll\",\n              height: \"100vh\",\n            }}\n          >\n            {tabData.map((data, i) => {\n              const Component = components[i];\n              return (\n                <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                  <Component\n                    data={componentData}\n                    handleToggleCardPosition={handleToggleCardPosition}\n                  />\n                </Tab.Pane>\n              );\n            })}\n          </Tab.Content>\n        </Tab.Container>\n      </div>\n    </>\n  );\n};\n\nconst DriverTabComponent1 = (props) => {\n  const status = statusData();\n  const { Running, Idle, Stopped, Inactive, nodata, total } = status;\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    const data = getVehicles(selectValue);\n    setVehicles(data);\n  }, [selectValue]);\n  const items = JSON.parse(localStorage.getItem(\"userJsonData\"))\n    .filter((item) => item.designation === \"vehicle\")\n    .map((data) => ({\n      id: data.id,\n      name: data.vehicleName,\n    }));\n  const handleSearch = (item) => {\n    const vehicleData = getVehicles(selectValue);\n    console.log(vehicleData);\n    const filteredData = Object.entries(vehicleData).filter((vehicle) => {\n      const vec = vehicle[1].filter((data) => data.id == item.id);\n      return vec.length > 0;\n    });\n    const convertedData = filteredData.reduce((acc, [company, dataArray]) => {\n      dataArray.map((data) => {\n        if (data.vehicleName === item.name) {\n          acc[company] = [data];\n        }\n      });\n      return acc;\n    }, {});\n    setVehicles(convertedData);\n  };\n  return (\n    <>\n      <div className=\"vehicle_tracking-object\">\n        <span\n          className={`light fs-9 running ${\n            selectValue === \"Running\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Running\")}\n        >\n          <p>{Running}</p>\n          <span>Running</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 idle ${\n            selectValue === \"Idle\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Idle\")}\n        >\n          <p>{Idle}</p>\n          <span>Idle</span>\n        </span>\n        <span\n          pill\n          className={`light stopped fs-9 ${\n            selectValue === \"Stopped\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Stopped\")}\n        >\n          <p>{Stopped}</p>\n          <span>Stopped</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 inActive ${\n            selectValue === \"Inactive\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Inactive\")}\n        >\n          <p>{Inactive}</p>\n          <span>InActive</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 noData ${\n            selectValue === \"NoData\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"NoData\")}\n        >\n          <p>{nodata}</p>\n          <span>NoData</span>\n        </span>\n        <span\n          className={`light fs-9 total ${\n            selectValue === \"All\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"All\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#4A4646\",\n          }}\n          onSearch={(string) => {\n            if (string === \"\") {\n              const data = getVehicles(selectValue);\n              setVehicles(data);\n            }\n          }}\n          onSelect={handleSearch}\n        />\n      </div>\n      {\n        <CompanyItem\n          vehicles={vehicles}\n          handleToggleCardPositionHandler={props.handleToggleCardPosition}\n        />\n      }\n    </>\n  );\n};\n\nconst DriverTabComponent2 = (props) => {\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [selectAll, setSelectAll] = useState([]);\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\n  const [selectDriver, setSelectDriver] = useState([]);\n  const [filterApplied, setFilterApplied] = useState(false);\n  const [isDisable, setIsDisable] = useState(false);\n  const jsonData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const [company, setCompany] = useState(\n    jsonData.filter((item) => item.role === \"company\")\n  );\n  const [drivers, setDrivers] = useState(\n    jsonData.filter((item) => item.designation === \"Driver\")\n  );\n  const allocated = drivers.filter(\n    (item) => item.activityStatus === \"Allocated\"\n  );\n  const notAllocated = drivers.filter(\n    (item) => item.activityStatus === \"Not Allocated\"\n  );\n  const total = drivers.length;\n  console.log(drivers)\n  const handleOnSelect = (results) => {\n    setSelectValue(\"All\");\n    setFilterApplied(true);\n    setIsDisable(true);\n    var companyDriver = jsonData.filter(\n      (item) => item.designation === \"Driver\" && item.id === results.id\n    );\n    var search = company.filter(\n      (item) => item.userName === companyDriver[0].parentCompany\n    );\n    setDrivers(companyDriver);\n    setCompany(search);\n  };\n  const handleOnSearch = (string, results) => {\n    setSelectValue(\"All\");\n    setIsDisable(false);\n    setFilterApplied(false);\n    setDrivers(jsonData.filter((item) => item.designation === \"Driver\"));\n    setCompany(jsonData.filter((item) => item.role === \"company\"));\n  };\n  const handleSelectAll = (id, company, drivers, index) => {\n    var checkboxArray = [...selectedDrivers];\n    if (!selectAll[index]) {\n      drivers.map((item) => checkboxArray[index].push(item.id));\n    } else {\n      checkboxArray[index] = [];\n      setSelectedDrivers(checkboxArray);\n    }\n    console.log(checkboxArray);\n  };\n  const handleSelect = (ind) => {\n    console.log(selectAll);\n    setSelectAll((prev) => {\n      const newArr = [...prev];\n      newArr[ind] = !newArr[ind];\n      return newArr;\n    });\n  };\n  const handleDriverSelect = (id, ind) => {\n    const updatedDrivers = [...selectedDrivers];\n    if (updatedDrivers[ind].includes(id)) {\n      const index = updatedDrivers[ind].indexOf(id);\n      updatedDrivers[ind].splice(index, 1);\n      if (updatedDrivers[ind].length === 2) {\n        handleSelect(ind);\n      }\n    } else {\n      updatedDrivers[ind].push(id);\n      if (updatedDrivers[ind].length === 3) {\n        handleSelect(ind);\n      }\n    }\n    console.log(updatedDrivers);\n    setSelectedDrivers(updatedDrivers);\n  };\n  useEffect(() => {\n    if (selectValue !== \"All\") {\n      setCompany(jsonData.filter((item) => item.role === \"company\"));\n      setFilterApplied(true);\n      if (selectValue === \"Allocated\") {\n        const companyName = allocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n      if (selectValue === \"Not Allocated\") {\n        const companyName = notAllocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n    } else setFilterApplied(false);\n  }, [selectValue]);\n  const items = jsonData\n    .filter((item) => item.designation === \"Driver\")\n    .map((item) => {\n      return { id: item.id, name: item.firstName + \" \" + item.lastName };\n    });\n  return (\n    <>\n      <div className=\"px-2 vehicle_tracking-object\">\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9  running ${\n            selectValue === \"Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Allocated\")}\n        >\n          <p>{allocated.length}</p>\n          <span>Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 idle ${\n            selectValue === \"Not Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Not Allocated\")}\n        >\n          <p>{notAllocated.length}</p>\n          <span>Not Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 total ${\n            selectValue === \"Total\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Total\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#red\",\n          }}\n          onSearch={handleOnSearch}\n          onSelect={handleOnSelect}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column  p-2\"\n        style={{\n          marginTop: \".5rem\",\n          height: \"65vh\",\n          overflowY: \"scroll\",\n        }}\n      >\n        {company.map((d, i) => {\n          var driver = [];\n          if (selectedDrivers.length === 0)\n            company.map(\n              (item) => selectedDrivers.push([]) && selectAll.push(false)\n            );\n          if (filterApplied) {\n            if (selectValue === \"All\") driver = drivers;\n            else if (selectValue === \"Allocated\")\n              driver = allocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Not Allocated\")\n              driver = notAllocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Total\")\n              driver = jsonData.filter(\n                (item) =>\n                  item.designation === \"Driver\" &&\n                  item.parentCompany === d.userName\n              );\n          } else {\n            driver = jsonData.filter(\n              (item) =>\n                item.designation === \"Driver\" &&\n                item.parentCompany === d.userName\n            );\n          }\n          return (\n            <Accordion\n              className=\"accordion accordion-primary\"\n              defaultActiveKey=\"0\"\n            >\n              <Accordion.Item\n                className=\"accordion-item\"\n                key={i}\n                eventKey={`$/{i}`}\n              >\n                <Accordion.Header className=\"accordian-header rounded-sm\">\n                  <div\n                    className=\"form-check custom-checkbox bs_exam_topper_all\"\n                    style={{ marginRight: \"10px\" }}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      id={`customCheckBox${i}`}\n                      onChange={() => handleSelectAll(d.id, company, driver, i)}\n                      onClick={() => handleSelect(i)}\n                      checked={selectAll[i]}\n                      required\n                    />\n                  </div>\n                  {d.userName}\n                </Accordion.Header>\n                {driver.length === 0 ? (\n                  <Accordion.Body className=\"p-2 text-center fs-4 heading \">\n                    No Record Found\n                  </Accordion.Body>\n                ) : (\n                  driver.map((item, index) => {\n                    return (\n                      <Accordion.Body\n                        className=\"accordian-body\"\n                        eventKey={`${i}`}\n                      >\n                        <div\n                          key={index}\n                          onClick={() => {\n                            setSelectDriver(selectDriver.concat(item.id));\n                          }}\n                          className={`d-flex align-items-center border-bottom heading driver-select-object p-2`}\n                        >\n                          <div className=\"form-check custom-checkbox ms-3 me-3 bs_exam_topper\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              onChange={() => handleDriverSelect(item.id, i)}\n                              checked={selectedDrivers[i].includes(item.id)}\n                              required\n                            />\n                          </div>\n                          <span className=\"fs-4 ms-2\">\n                            {item.firstName} {item.lastName}\n                          </span>\n                        </div>\n                      </Accordion.Body>\n                    );\n                  })\n                )}\n              </Accordion.Item>\n            </Accordion>\n          );\n        })}\n      </div>\n      <div className=\"mt-3 text-center\">\n        <Button className=\"btn-md\" variant=\"primary\">\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\n\nconst DriverTabComponent3 = (props) => {\n  const geoData = JSON.parse(localStorage.getItem(\"geofenceData\"));\n  const [tableData, setTableData] = useState(geoData);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Function to handle search\n  const handleSearch = (query) => {\n    console.log(\"Search Query:\", query);\n    const fenceData = geoData.filter((item) => item.id === query.id);\n    setTableData(fenceData);\n  };\n\n  // Function to reset search\n  const resetSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  // Filter tableData based on searchQuery\n  const filteredTableData = tableData.filter((item) =>\n    item.company.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n\n    const updatedLocalStorageData = geoData.filter((item) => item.id !== id);\n    localStorage.setItem(\n      \"geofenceData\",\n      JSON.stringify(updatedLocalStorageData)\n    );\n  };\n\n  const editDrawerOpen = (d) => {\n    // navigate(`/geofence/map/edit/${d.id}`);\n  };\n\n  const toggleAllData = (company) => {\n    let newSelectedCompanies;\n    if (selectedCompanies.includes(company)) {\n      newSelectedCompanies = selectedCompanies.filter((c) => c !== company);\n    } else {\n      newSelectedCompanies = [...selectedCompanies, company];\n    }\n    setSelectedCompanies(newSelectedCompanies);\n\n    const updatedData = tableData.map((item) => {\n      if (item.company === company) {\n        return { ...item, selected: !selectedCompanies.includes(company) };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  const toggleSingleData = (id) => {\n    const updatedData = tableData.map((item) => {\n      if (item.id === id) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  // Group tableData by company name\n  const groupedData = tableData.reduce((acc, cur) => {\n    if (!acc[cur.company]) {\n      acc[cur.company] = [];\n    }\n    acc[cur.company].push(cur);\n    return acc;\n  }, {});\n\n  const items = tableData.map((data) => ({\n    id: data.id,\n    name: data.name,\n  }));\n\n  return (\n    <>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          // onSearch={handleSearch}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#red\",\n          }}\n          onSelect={handleSearch}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column p-2\"\n        style={{\n          marginTop: \".5rem\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <GeoFenceItem\n          geoFences={groupedData}\n          handleToggleCardPositionHandler={props.handleToggleCardPosition}\n        />\n      </div>\n    </>\n  );\n};\nexport default DriverTab;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport ShowMap from \"../components/maps/ShowMap\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport DriverTab from \"../components/maps/DriverTab\";\nimport { TbLocationFilled } from \"react-icons/tb\";\nimport { FaUser } from \"react-icons/fa\";\nimport { FaMapLocationDot } from \"react-icons/fa6\";\nimport { MdFence } from \"react-icons/md\";\nimport \"../../scss/pages/_driver-tracking.scss\";\nconst DriverTracking = () => {\n  const { currentPosition, setCurrentPosition } = useContext(ThemeContext);\n  const data = [\n    { lat: 30.7099475, lng: 76.6900474 },\n    { lat: 30.7333, lng: 76.7794 },\n  ];\n  const [isOutside, setIsOutside] = useState(true);\n  const tabData = [\n    { name: \"Object\", icon: TbLocationFilled },\n    { name: \"Driver\", icon: FaUser },\n    { name: \"Geofence\", icon: MdFence },\n  ];\n  const handleToggleCardPosition = () => {\n    setIsOutside(!isOutside);\n  };\n  // const getCurrentPosition = () => {\n  //   navigator.geolocation.getCurrentPosition((position) => {\n  //     setCurrentPosition({\n  //       lat: position.coords.latitude,\n  //       lng: position.coords.longitude\n  //     });\n  //   });\n  // };\n  // const [locationData, setLocationData] = useState([{lat:30.7099475,lng:76.6900474}])\n  // useEffect(() => {\n  //   getCurrentPosition()\n  // }, []);\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Vehicle Tracking\"\n        pageTitle={\"Vehicle Tracking\"}\n        parentTitle={\"Tracking\"}\n      />\n      <div\n        className={`backdrop ${isOutside ? \"d-none\" : \"d-block\"}`}\n        onClick={() => setIsOutside(true)}\n      />\n      <div className=\"p-2\" >\n        <ShowMap data={data} />\n      </div>\n      {/* <div style={{zIndex : 20}}> */}\n        <DriverTab\n          tabData={tabData}\n          handleToggleCardPosition={handleToggleCardPosition}\n          isOutside={isOutside}\n        />\n      {/* </div> */}\n    </>\n  );\n};\nexport default DriverTracking;"],"names":["EditControlFC","_ref","geojson","setGeojson","ref","useRef","useEffect","_ref$current","current","getLayers","length","L","eachLayer","layer","_layer$feature","_layer$feature2","_ref$current2","feature","properties","radius","geometry","coordinates","slice","reverse","addTo","addLayer","handleChange","_ref$current3","geo","toGeoJSON","console","log","type","_jsx","FeatureGroup","children","EditControl","position","onEdited","onCreated","onDeleted","draw","rectangle","circle","polyline","polygon","marker","circlemarker","data","style","display","height","width","_jsxs","MapContainer","center","zoom","zoomControl","TileLayer","attribution","url","Marker","styles","background","Popup","Tooltip","props","checked","setChecked","useState","expanded","setExpanded","nodes","setNodes","Object","entries","vehicles","map","childNode","label","vehicleName","value","id","_Fragment","className","CheckboxTree","onCheck","onExpand","showNodeIcon","icons","expandOpen","class","expandClose","uncheck","fontSize","check","halfCheck","Button","variant","onClick","handleSubmit","selectedObject","JSON","parse","handleToggleCardPositionHandler","geoFences","_ref2","company","fences","fence","name","DriverTabComponent1","status","statusData","Running","Idle","Stopped","Inactive","nodata","total","selectValue","setSelectValue","setVehicles","getVehicles","items","localStorage","getItem","filter","item","designation","concat","pill","ReactSearchAutocomplete","styling","marginRight","color","onSearch","string","onSelect","vehicleData","convertedData","vehicle","reduce","acc","dataArray","CompanyItem","handleToggleCardPosition","DriverTabComponent2","selectAll","setSelectAll","selectedDrivers","setSelectedDrivers","selectDriver","setSelectDriver","filterApplied","setFilterApplied","isDisable","setIsDisable","jsonData","setCompany","role","drivers","setDrivers","allocated","activityStatus","notAllocated","handleSelect","ind","prev","newArr","companyName","parentCompany","index","array","indexOf","item1","some","item2","userName","firstName","lastName","bg","handleOnSearch","results","companyDriver","search","marginTop","overflowY","d","i","driver","push","Accordion","defaultActiveKey","Item","eventKey","Header","e","stopPropagation","onChange","handleSelectAll","checkboxArray","required","Body","handleDriverSelect","updatedDrivers","includes","splice","DriverTabComponent3","geoData","tableData","setTableData","selectedCompanies","setSelectedCompanies","searchQuery","setSearchQuery","groupedData","toLowerCase","cur","query","fenceData","GeoFenceItem","tabData","isOutside","componentData","timeStamp","allocatedDriver","notAllocatedDriver","totalDriver","components","IoIosArrowBack","IoIosArrowForward","Tab","Container","Nav","as","Icon","icon","Link","Content","overflow","Component","Pane","DriverTracking","currentPosition","setCurrentPosition","useContext","ThemeContext","setIsOutside","TbLocationFilled","FaUser","MdFence","MainPagetitle","mainTitle","pageTitle","parentTitle","ShowMap","lat","lng","DriverTab"],"sourceRoot":""}