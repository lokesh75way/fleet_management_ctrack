{"version":3,"file":"static/js/5163.48dd44bd.chunk.js","mappings":"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","sources":["jsx/components/Tracking/CompanyItem.jsx","jsx/components/Tracking/DriverTabComponent3.jsx","jsx/components/maps/DriverTab.jsx","jsx/pages/DriverTracking.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nconst CompanyItem = (props) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n  useEffect(() => {\n    const data = Object.entries(props.vehicles).map((data) => {\n      const childNode = data[1].map((data) => {\n        return { label: data.vehicleName, value: data.id };\n      });\n\n      return { value: data[0], label: data[0], children: childNode };\n    });\n    setNodes([...data]);\n  }, [props.vehicles]);\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject)\n    props.handleToggleCardPositionHandler();\n  };\n  return (\n    <>\n    <div className=\"checkboxTree\">\n      <CheckboxTree\n        nodes={nodes}\n        checked={checked}\n        expanded={expanded}\n        onCheck={handleCheck}\n        onExpand={handleExpand}\n        showNodeIcon={false}\n        icons={{\n          expandOpen: <i class=\"fa-solid fa-minus\"></i>,\n          expandClose: <i class=\"fa-solid fa-plus\"></i>,\n          uncheck: (\n            <i\n              class=\"fa-regular fa-square\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          check: (\n            <i\n              class=\"fa-solid fa-square-check\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          halfCheck: (\n            <i\n              class=\"fa-regular fa-square-minus\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n        }}\n      />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default CompanyItem;\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nconst GeoFenceItem = ({ geoFences, handleToggleCardPositionHandler }) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n\nuseEffect(() => {\n    const data = Object.entries(geoFences).map(([company, fences]) => {\n      const childNodes = fences.map(fence => ({\n        label: fence.name,\n        value: fence.id\n      }));\n      return { value: company, label: company, children: childNodes };\n    });\n    setNodes(data);\n  }, [geoFences]);\n\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject);\n    handleToggleCardPositionHandler();\n  };\n\n  return (\n    <>\n      <div className=\"checkboxTree\">\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          onCheck={handleCheck}\n          onExpand={handleExpand}\n          showNodeIcon={false}\n          icons={{\n            expandOpen: <i className=\"fa-solid fa-minus\"></i>,\n            expandClose: <i className=\"fa-solid fa-plus\"></i>,\n            uncheck: (\n              <i\n                className=\"fa-regular fa-square\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            check: (\n              <i\n                className=\"fa-solid fa-square-check\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            halfCheck: (\n              <i\n                className=\"fa-regular fa-square-minus\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n          }}\n        />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default GeoFenceItem;","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Nav, Tab } from \"react-bootstrap\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport {\n  FaSearch,\n  FaFilter,\n  FaSortAlphaDown,\n  FaCircle,\n  FaWifi,\n  FaBatteryFull,\n  FaEdit,\n  FaTrashAlt,\n  FaLocationArrow,\n} from \"react-icons/fa\";\nimport { GrUserPolice } from \"react-icons/gr\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nimport { MdFence, MdDelete, MdAddLocationAlt } from \"react-icons/md\";\nimport { IoIosNavigate } from \"react-icons/io\";\nimport { IoIosArrowForward, IoIosArrowBack } from \"react-icons/io\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteModal from \"../Modal/DeleteModal\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { companyOptions } from \"../TabComponent/VehicleTabs/Options\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport CompanyItem from \"../Tracking/CompanyItem\";\nimport { getVehicles, statusData } from \"../../../utils/helper\";\nimport CheckboxTree from 'react-checkbox-tree'\nimport DriverCompanyItem from \"../Tracking/DriverTabComponent3\";\nimport GeoFenceItem from \"../Tracking/DriverTabComponent3\";\nconst DriverTab = ({ tabData, handleToggleCardPosition, isOutside }) => {\n  const componentData = {\n    name: \"Company1\",\n    drivers: [\n      { name: \"driver1\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver2\", timeStamp: \"22-02-2024 3:00 PM\", status: \"idle\" },\n      { name: \"driver3\", timeStamp: \"22-02-2024 3:00 PM\", status: \"inactive\" },\n      { name: \"driver4\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver5\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver6\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver7\", timeStamp: \"22-02-2024 3:00 PM\" },\n    ],\n    allocatedDriver: 4,\n    notAllocatedDriver: 3,\n    totalDriver: 7,\n  };\n\n  const components = [\n    DriverTabComponent1,\n    DriverTabComponent2,\n    DriverTabComponent3,\n  ];\n\n  return (\n    <>\n      <div\n        className={`default-tab outer-container ${\n          isOutside ? \"toggleBarInside\" : \"toggleBarOutside\"\n        }`}\n      >\n        <button\n          onClick={handleToggleCardPosition}\n          className=\"driver_tracking_button\"\n        >\n          {!isOutside ? <IoIosArrowForward /> : <IoIosArrowBack />}\n        </button>\n        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n          <Nav as=\"ul\" className=\"nav-tabs tracking_navTabs\">\n            {tabData.map((data, i) => {\n              const Icon = data.icon;\n              return (\n                <Nav.Item as=\"li\" key={i}>\n                  <Nav.Link eventKey={data.name.toLowerCase()}>\n                    <Icon className=\"tab-icon\" />\n                    {data.name}\n                  </Nav.Link>\n                </Nav.Item>\n              );\n            })}\n          </Nav>\n          <Tab.Content\n            className=\"p-2 py-4\"\n            style={{\n              background: \"#f5f5f5\",\n              overflow: \"scroll\",\n              height: \"100vh\",\n            }}\n          >\n            {tabData.map((data, i) => {\n              const Component = components[i];\n              return (\n                <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                  <Component\n                    data={componentData}\n                    handleToggleCardPosition={handleToggleCardPosition}\n                  />\n                </Tab.Pane>\n              );\n            })}\n          </Tab.Content>\n        </Tab.Container>\n      </div>\n    </>\n  );\n};\n\nconst DriverTabComponent1 = (props) => {\n  const status = statusData();\n  const { Running, Idle, Stopped, Inactive, nodata, total } = status;\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    const data = getVehicles(selectValue);\n    setVehicles(data);\n  }, [selectValue]);\n  const items = JSON.parse(localStorage.getItem(\"userJsonData\"))\n    .filter((item) => item.designation === \"vehicle\")\n    .map((data) => ({\n      id: data.id,\n      name: data.vehicleName,\n    }));\n  const handleSearch = (item) => {\n    const vehicleData = getVehicles(selectValue);\n    console.log(vehicleData);\n    const filteredData = Object.entries(vehicleData).filter((vehicle) => {\n      const vec = vehicle[1].filter((data) => data.id == item.id);\n      return vec.length > 0;\n    });\n    const convertedData = filteredData.reduce((acc, [company, dataArray]) => {\n      dataArray.map((data) => {\n        if (data.vehicleName === item.name) {\n          acc[company] = [data];\n        }\n      });\n      return acc;\n    }, {});\n    setVehicles(convertedData);\n  };\n  return (\n    <>\n      <div className=\"vehicle_tracking-object\">\n        <span\n          className={`light fs-9 running ${\n            selectValue === \"Running\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Running\")}\n        >\n          <p>{Running}</p>\n          <span>Running</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 idle ${\n            selectValue === \"Idle\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Idle\")}\n        >\n          <p>{Idle}</p>\n          <span>Idle</span>\n        </span>\n        <span\n          pill\n          className={`light stopped fs-9 ${\n            selectValue === \"Stopped\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Stopped\")}\n        >\n          <p>{Stopped}</p>\n          <span>Stopped</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 inActive ${\n            selectValue === \"Inactive\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Inactive\")}\n        >\n          <p>{Inactive}</p>\n          <span>InActive</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 noData ${\n            selectValue === \"NoData\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"NoData\")}\n        >\n          <p>{nodata}</p>\n          <span>NoData</span>\n        </span>\n        <span\n          className={`light fs-9 total ${\n            selectValue === \"All\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"All\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#4A4646\",\n          }}\n          onSearch={(string) => {\n            if (string === \"\") {\n              const data = getVehicles(selectValue);\n              setVehicles(data);\n            }\n          }}\n          onSelect={handleSearch}\n        />\n      </div>\n      {\n        <CompanyItem\n          vehicles={vehicles}\n          handleToggleCardPositionHandler={props.handleToggleCardPosition}\n        />\n      }\n    </>\n  );\n};\n\nconst DriverTabComponent2 = (props) => {\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [selectAll, setSelectAll] = useState([]);\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\n  const [selectDriver, setSelectDriver] = useState([]);\n  const [filterApplied, setFilterApplied] = useState(false);\n  const [isDisable, setIsDisable] = useState(false);\n  const jsonData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const [company, setCompany] = useState(\n    jsonData.filter((item) => item.role === \"company\")\n  );\n  const [drivers, setDrivers] = useState(\n    jsonData.filter((item) => item.designation === \"Driver\")\n  );\n  const allocated = drivers.filter(\n    (item) => item.activityStatus === \"Allocated\"\n  );\n  const notAllocated = drivers.filter(\n    (item) => item.activityStatus === \"Not Allocated\"\n  );\n  const total = drivers.length;\n  console.log(drivers)\n  const handleOnSelect = (results) => {\n    setSelectValue(\"All\");\n    setFilterApplied(true);\n    setIsDisable(true);\n    var companyDriver = jsonData.filter(\n      (item) => item.designation === \"Driver\" && item.id === results.id\n    );\n    var search = company.filter(\n      (item) => item.userName === companyDriver[0].parentCompany\n    );\n    setDrivers(companyDriver);\n    setCompany(search);\n  };\n  const handleOnSearch = (string, results) => {\n    setSelectValue(\"All\");\n    setIsDisable(false);\n    setFilterApplied(false);\n    setDrivers(jsonData.filter((item) => item.designation === \"Driver\"));\n    setCompany(jsonData.filter((item) => item.role === \"company\"));\n  };\n  const handleSelectAll = (id, company, drivers, index) => {\n    var checkboxArray = [...selectedDrivers];\n    if (!selectAll[index]) {\n      drivers.map((item) => checkboxArray[index].push(item.id));\n    } else {\n      checkboxArray[index] = [];\n      setSelectedDrivers(checkboxArray);\n    }\n    console.log(checkboxArray);\n  };\n  const handleSelect = (ind) => {\n    console.log(selectAll);\n    setSelectAll((prev) => {\n      const newArr = [...prev];\n      newArr[ind] = !newArr[ind];\n      return newArr;\n    });\n  };\n  const handleDriverSelect = (id, ind) => {\n    const updatedDrivers = [...selectedDrivers];\n    if (updatedDrivers[ind].includes(id)) {\n      const index = updatedDrivers[ind].indexOf(id);\n      updatedDrivers[ind].splice(index, 1);\n      if (updatedDrivers[ind].length === 2) {\n        handleSelect(ind);\n      }\n    } else {\n      updatedDrivers[ind].push(id);\n      if (updatedDrivers[ind].length === 3) {\n        handleSelect(ind);\n      }\n    }\n    console.log(updatedDrivers);\n    setSelectedDrivers(updatedDrivers);\n  };\n  useEffect(() => {\n    if (selectValue !== \"All\") {\n      setCompany(jsonData.filter((item) => item.role === \"company\"));\n      setFilterApplied(true);\n      if (selectValue === \"Allocated\") {\n        const companyName = allocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n      if (selectValue === \"Not Allocated\") {\n        const companyName = notAllocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n    } else setFilterApplied(false);\n  }, [selectValue]);\n  const items = jsonData\n    .filter((item) => item.designation === \"Driver\")\n    .map((item) => {\n      return { id: item.id, name: item.firstName + \" \" + item.lastName };\n    });\n  return (\n    <>\n      <div className=\"px-2 vehicle_tracking-object\">\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9  running ${\n            selectValue === \"Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Allocated\")}\n        >\n          <p>{allocated.length}</p>\n          <span>Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 idle ${\n            selectValue === \"Not Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Not Allocated\")}\n        >\n          <p>{notAllocated.length}</p>\n          <span>Not Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 total ${\n            selectValue === \"Total\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Total\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#red\",\n          }}\n          onSearch={handleOnSearch}\n          onSelect={handleOnSelect}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column  p-2\"\n        style={{\n          marginTop: \".5rem\",\n          height: \"65vh\",\n          overflowY: \"scroll\",\n        }}\n      >\n        {company.map((d, i) => {\n          var driver = [];\n          if (selectedDrivers.length === 0)\n            company.map(\n              (item) => selectedDrivers.push([]) && selectAll.push(false)\n            );\n          if (filterApplied) {\n            if (selectValue === \"All\") driver = drivers;\n            else if (selectValue === \"Allocated\")\n              driver = allocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Not Allocated\")\n              driver = notAllocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Total\")\n              driver = jsonData.filter(\n                (item) =>\n                  item.designation === \"Driver\" &&\n                  item.parentCompany === d.userName\n              );\n          } else {\n            driver = jsonData.filter(\n              (item) =>\n                item.designation === \"Driver\" &&\n                item.parentCompany === d.userName\n            );\n          }\n          return (\n            <Accordion\n              className=\"accordion accordion-primary\"\n              defaultActiveKey=\"0\"\n            >\n              <Accordion.Item\n                className=\"accordion-item\"\n                key={i}\n                eventKey={`$/{i}`}\n              >\n                <Accordion.Header className=\"accordian-header rounded-sm\">\n                  <div\n                    className=\"form-check custom-checkbox bs_exam_topper_all\"\n                    style={{ marginRight: \"10px\" }}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      id={`customCheckBox${i}`}\n                      onChange={() => handleSelectAll(d.id, company, driver, i)}\n                      onClick={() => handleSelect(i)}\n                      checked={selectAll[i]}\n                      required\n                    />\n                  </div>\n                  {d.userName}\n                </Accordion.Header>\n                {driver.length === 0 ? (\n                  <Accordion.Body className=\"p-2 text-center fs-4 heading \">\n                    No Record Found\n                  </Accordion.Body>\n                ) : (\n                  driver.map((item, index) => {\n                    return (\n                      <Accordion.Body\n                        className=\"accordian-body\"\n                        eventKey={`${i}`}\n                      >\n                        <div\n                          key={index}\n                          onClick={() => {\n                            setSelectDriver(selectDriver.concat(item.id));\n                          }}\n                          className={`d-flex align-items-center border-bottom heading driver-select-object p-2`}\n                        >\n                          <div className=\"form-check custom-checkbox ms-3 me-3 bs_exam_topper\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              onChange={() => handleDriverSelect(item.id, i)}\n                              checked={selectedDrivers[i].includes(item.id)}\n                              required\n                            />\n                          </div>\n                          <span className=\"fs-4 ms-2\">\n                            {item.firstName} {item.lastName}\n                          </span>\n                        </div>\n                      </Accordion.Body>\n                    );\n                  })\n                )}\n              </Accordion.Item>\n            </Accordion>\n          );\n        })}\n      </div>\n      <div className=\"mt-3 text-center\">\n        <Button className=\"btn-md\" variant=\"primary\">\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\n\nconst DriverTabComponent3 = (props) => {\n  const geoData = JSON.parse(localStorage.getItem(\"geofenceData\"));\n  const [tableData, setTableData] = useState(geoData);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Function to handle search\n  const handleSearch = (query) => {\n    console.log(\"Search Query:\", query);\n    const fenceData = geoData.filter((item) => item.id === query.id);\n    setTableData(fenceData);\n  };\n\n  // Function to reset search\n  const resetSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  // Filter tableData based on searchQuery\n  const filteredTableData = tableData.filter((item) =>\n    item.company.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n\n    const updatedLocalStorageData = geoData.filter((item) => item.id !== id);\n    localStorage.setItem(\n      \"geofenceData\",\n      JSON.stringify(updatedLocalStorageData)\n    );\n  };\n\n  const editDrawerOpen = (d) => {\n    // navigate(`/geofence/map/edit/${d.id}`);\n  };\n\n  const toggleAllData = (company) => {\n    let newSelectedCompanies;\n    if (selectedCompanies.includes(company)) {\n      newSelectedCompanies = selectedCompanies.filter((c) => c !== company);\n    } else {\n      newSelectedCompanies = [...selectedCompanies, company];\n    }\n    setSelectedCompanies(newSelectedCompanies);\n\n    const updatedData = tableData.map((item) => {\n      if (item.company === company) {\n        return { ...item, selected: !selectedCompanies.includes(company) };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  const toggleSingleData = (id) => {\n    const updatedData = tableData.map((item) => {\n      if (item.id === id) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  // Group tableData by company name\n  const groupedData = tableData.reduce((acc, cur) => {\n    if (!acc[cur.company]) {\n      acc[cur.company] = [];\n    }\n    acc[cur.company].push(cur);\n    return acc;\n  }, {});\n\n  const items = tableData.map((data) => ({\n    id: data.id,\n    name: data.name,\n  }));\n\n  return (\n    <>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          // onSearch={handleSearch}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#red\",\n          }}\n          onSelect={handleSearch}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column p-2\"\n        style={{\n          marginTop: \".5rem\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <GeoFenceItem\n          geoFences={groupedData}\n          handleToggleCardPositionHandler={props.handleToggleCardPosition}\n        />\n      </div>\n    </>\n  );\n};\nexport default DriverTab;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport ShowMap from \"../components/maps/ShowMap\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport DriverTab from \"../components/maps/DriverTab\";\nimport { TbLocationFilled } from \"react-icons/tb\";\nimport { FaUser } from \"react-icons/fa\";\nimport { FaMapLocationDot } from \"react-icons/fa6\";\nimport { MdFence } from \"react-icons/md\";\nimport \"../../scss/pages/_driver-tracking.scss\";\n\nimport {useTranslation} from 'react-i18next'\nconst DriverTracking = () => {\n\n  const {t} = useTranslation();\n  const { currentPosition, setCurrentPosition } = useContext(ThemeContext);\n  const data = [\n    { lat: 30.7099475, lng: 76.6900474 },\n    { lat: 30.7333, lng: 76.7794 },\n  ];\n  const [isOutside, setIsOutside] = useState(true);\n  const tabData = [\n    { name: \"Object\", icon: TbLocationFilled },\n    { name: \"Driver\", icon: FaUser },\n    { name: \"Geofence\", icon: MdFence },\n  ];\n  const handleToggleCardPosition = () => {\n    setIsOutside(!isOutside);\n  };\n  // const getCurrentPosition = () => {\n  //   navigator.geolocation.getCurrentPosition((position) => {\n  //     setCurrentPosition({\n  //       lat: position.coords.latitude,\n  //       lng: position.coords.longitude\n  //     });\n  //   });\n  // };\n  // const [locationData, setLocationData] = useState([{lat:30.7099475,lng:76.6900474}])\n  // useEffect(() => {\n  //   getCurrentPosition()\n  // }, []);\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t('vehicleTracking')}\n        pageTitle={t('vehicleTracking')}\n        parentTitle={t('tracking')}\n      />\n      <div\n        className={`backdrop ${isOutside ? \"d-none\" : \"d-block\"}`}\n        onClick={() => setIsOutside(true)}\n      />\n      <div className=\"p-2\" >\n        <ShowMap data={data} />\n      </div>\n      {/* <div style={{zIndex : 20}}> */}\n        <DriverTab\n          tabData={tabData}\n          handleToggleCardPosition={handleToggleCardPosition}\n          isOutside={isOutside}\n        />\n      {/* </div> */}\n    </>\n  );\n};\nexport default DriverTracking;"],"names":["props","checked","setChecked","useState","expanded","setExpanded","nodes","setNodes","useEffect","data","Object","entries","vehicles","map","childNode","label","vehicleName","value","id","children","_jsxs","_Fragment","_jsx","className","CheckboxTree","onCheck","onExpand","showNodeIcon","icons","expandOpen","class","expandClose","uncheck","style","fontSize","check","halfCheck","Button","variant","type","onClick","handleSubmit","selectedObject","JSON","parse","console","log","handleToggleCardPositionHandler","_ref","geoFences","_ref2","company","fences","fence","name","DriverTabComponent1","status","statusData","Running","Idle","Stopped","Inactive","nodata","total","selectValue","setSelectValue","setVehicles","getVehicles","items","localStorage","getItem","filter","item","designation","concat","pill","ReactSearchAutocomplete","styling","height","marginRight","color","onSearch","string","onSelect","vehicleData","convertedData","vehicle","length","reduce","acc","dataArray","CompanyItem","handleToggleCardPosition","DriverTabComponent2","selectAll","setSelectAll","selectedDrivers","setSelectedDrivers","selectDriver","setSelectDriver","filterApplied","setFilterApplied","isDisable","setIsDisable","jsonData","setCompany","role","drivers","setDrivers","allocated","activityStatus","notAllocated","handleSelect","ind","prev","newArr","companyName","parentCompany","index","array","indexOf","item1","some","item2","userName","firstName","lastName","bg","handleOnSearch","results","companyDriver","search","marginTop","overflowY","d","i","driver","push","Accordion","defaultActiveKey","Item","eventKey","Header","e","stopPropagation","onChange","handleSelectAll","checkboxArray","required","Body","handleDriverSelect","updatedDrivers","includes","splice","DriverTabComponent3","geoData","tableData","setTableData","selectedCompanies","setSelectedCompanies","searchQuery","setSearchQuery","groupedData","toLowerCase","cur","query","fenceData","GeoFenceItem","tabData","isOutside","componentData","timeStamp","allocatedDriver","notAllocatedDriver","totalDriver","components","IoIosArrowBack","IoIosArrowForward","Tab","Container","Nav","as","Icon","icon","Link","Content","background","overflow","Component","Pane","DriverTracking","t","useTranslation","currentPosition","setCurrentPosition","useContext","ThemeContext","setIsOutside","TbLocationFilled","FaUser","MdFence","MainPagetitle","mainTitle","pageTitle","parentTitle","ShowMap","lat","lng","DriverTab"],"sourceRoot":""}