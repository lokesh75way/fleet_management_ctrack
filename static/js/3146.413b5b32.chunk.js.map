{"version":3,"file":"static/js/3146.413b5b32.chunk.js","mappings":"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","sources":["jsx/components/Tables/ExpenseTable.jsx","jsx/pages/Expense/Expense.jsx","services/api/ExpenseServices.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from '../Modal/DeleteModal';\n\nconst ExpenseTable = ({tableData,currentPage, itemsPerPage, onConfirmDelete, editDrawerOpen}) => {\n    const startIndex = (currentPage - 1) * itemsPerPage + 1;\n\n    return (\n        <>\n            {tableData.map((item, index) => (\n                <tr key={index}>\n                    <td><span>{startIndex + index}</span></td>\n                    <td>\n                        <div className=\"products\">\n                            <div>\n                                <h6>{item.vehicle}</h6>\n                                <span>Web Designer</span>\n                            </div>\n                        </div>\n                    </td>\n                    <td><span>{item.expenseDate}</span></td>\n                    <td>\n                        <span>{item.amount}</span>\n                    </td>\n                    <td>\n                        <span>{item.description}</span>\n                    </td>\n                    <td>\n                        <span className='d-flex justify-content-center'>\n                            <span onClick={()=>editDrawerOpen(item._id)} className='cursor-pointer' ><FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} /></span>\n                            <DeleteModal className='cursor-pointer ' onConfirmDelete={onConfirmDelete} id={item._id} ><MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} /></DeleteModal>\n                        </span>\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n// onClick={() => editDrawerOpen(item.id)}\nexport default ExpenseTable","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\n\nimport { ICON, IMAGES } from \"../../constant/theme\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport InviteCustomer from \"../../constant/ModalList\";\nimport { ExpenseData } from \"../../components/Tables/Tables\";\nimport ExpenseTable from \"../../components/Tables/ExpenseTable\";\n// import ExpenseOffcanvas from \"../constant/ExpenseOffcanvas\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {expenseSchema} from '../../../yup'\n\nimport {useTranslation} from 'react-i18next'\nimport { deleteExpense, getExpenses } from \"../../../services/api/ExpenseServices\";\nimport usePagination from \"../../../hooks/usePagination\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport clsx from \"clsx\";\nimport { notifySuccess } from \"../../../utils/toast\";\nimport ReactPaginate from \"react-paginate\";\nimport Paginate from \"../../components/Pagination/Paginate\";\n\nconst Expense = (ref) => {\n\n  const {t} = useTranslation();\n  const navigate = useNavigate();\n  const [tableData, setTableData] = useState([]);\n\n  const { isRtl } = useContext(ThemeContext);\n\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(\n        expenseSchema\n    ),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount,setPage } =\n    usePagination();\n\n    const itemsPerPage=10;\n\n    const handlePageClick = ({ selected }) => {\n      goToPage(selected + 1); \n    };\n  \n    const startIndex = (page - 1) * itemsPerPage;\n    const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n\n  // const[formData, setFormData] = useState()\n  const getAllExpenses = async()=>{\n    try {\n      const {data, success, totalLength} = await getExpenses(page);\n      // console.log(data,\"expense\")\n      setTableData(data);\n      setCount(totalLength)\n    } catch (error) {\n      console.log(\"Error\", error)\n    }\n  }\n  useEffect(()=>{\n    getAllExpenses();\n  },[])\n\n  console.log(errors, \"ds:-\", getValues())\n\n\n  const onConfirmDelete = async (id) => {\n    await deleteExpense(id);\n    notifySuccess(\"Expense Deleted\");\n    await getAllExpenses();\n  };\n  const editDrawerOpen = (item) => {\n    const filteredData = tableData.filter((data) => data._id === item);\n    navigate(`edit/${item}`, { state: filteredData });\n    // company.current.showModal();\n  };\n\n\n\n  const expense = useRef();\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t('expense')}\n        pageTitle={t('expense')}\n        parentTitle={t('settings')}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t('expense')}</h4>\n                    <div>\n                      <Link\n                        to={\"/settings/expense/create\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        // data-bs-toggle=\"offcanvas\"\n                        // onClick={() => {expense.current.showModal(); console.log(expense)}}\n                      >\n                        + {t('addExpense')}\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t('id')}</th>\n                          <th>{t('vehicleName')}</th>\n                          <th>{t('expenseDate')}</th>\n                          <th>{t('amount')}</th>\n                          <th>{t('description')}</th>\n                          <th>{t('action')}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <ExpenseTable\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                          currentPage={page} \n                            itemsPerPage={itemsPerPage} \n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Paginate\n                            totalCount={totalCount}\n                            itemsPerPage={itemsPerPage}\n                            handlePageClick={handlePageClick}\n                          />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <ExpenseOffcanvas\n        ref={expense}\n        editData={editData}\n        register={register}\n        onSubmit={onSubmit}\n        setValue={setValue}\n        getValues={getValues}\n        setEditData={setEditData}\n        handleSubmit={handleSubmit}\n        errors={errors}\n        control={control}\n        clearErrors={clearErrors}\n        Title={editData.id === 0 ? t('addExpense') :  t('editExpense')}\n      /> */}\n    </>\n  );\n};\n\nexport default Expense;\n","import axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios();\n\nexport const getExpenses = async (pageNo=1) => {\n  const { data } = await axios.get(`/expenses?page=${pageNo}&limit=${10}`);\n  console.log(data.data.data, \"ko:-\")\n  return { data: data.data.data, totalLength: data.data.totalCount };\n};\n\nexport const createExpense = async (body) => {\n  return axios.post(\"/expenses\", body);\n};\n\nexport const updateExpense = async (id,body) => {\n  return axios.patch(`/expenses/${id}`, body);\n};\n\nexport const deleteExpense = async (id) => {\n  return axios.delete(`/expenses/${id}`);\n};\n"],"names":["_ref","tableData","currentPage","itemsPerPage","onConfirmDelete","editDrawerOpen","startIndex","_jsx","_Fragment","children","map","item","index","_jsxs","className","vehicle","expenseDate","amount","description","onClick","_id","FaEdit","style","color","fontSize","DeleteModal","id","MdDelete","ref","t","useTranslation","navigate","useNavigate","setTableData","useState","isRtl","useContext","ThemeContext","register","setValue","getValues","handleSubmit","clearErrors","formState","errors","control","useForm","resolver","yupResolver","expenseSchema","editData","setEditData","status","title","contact","age","drivingExperience","gender","location","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","usePagination","getAllExpenses","slice","async","data","success","totalLength","getExpenses","error","console","log","useEffect","useRef","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","ExpenseTable","deleteExpense","notifySuccess","filteredData","filter","concat","state","Math","min","Paginate","handlePageClick","selected","initAxios","pageNo","arguments","length","undefined","axios","get","createExpense","post","body","updateExpense","patch","delete"],"sourceRoot":""}