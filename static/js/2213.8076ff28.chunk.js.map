{"version":3,"file":"static/js/2213.8076ff28.chunk.js","mappings":"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","sources":["components/Loader.jsx","features/user/components/Form.jsx","features/user/pages/Create.jsx","jsx/components/BranchDropdown/index.jsx","jsx/components/VehicleDropdown/index.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React from \"react\";\n\nconst Loader = ({ height = \"100vh\" }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        marginTop: \"-50px\",\n      }}\n    >\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { useSelector } from \"react-redux\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nimport { getTemplates } from \"../../../services/api/TemplateServices\";\nimport { notifyError } from \"@/utils/toast\";\nimport { getAllGroups } from \"@/features/businessGroup/api\";\nimport { getCompany } from \"../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../../jsx/components/BranchDropdown\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport VehicleDropdown from \"../../../jsx/components/VehicleDropdown\";\nimport { unitOfDistanceOptions } from \"../../../constants/options\";\nimport LocationSelector from \"../../../components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \"0.25rem 0 \", // Adjust the height as needed\n  }),\n};\n\nconst UserForm = ({\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n  watch,\n  isFormSubmitting,\n}) => {\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [branchId, setBranchId] = useState([]);\n  const userDetails = useSelector((state) => state.auth.user);\n  const { t } = useTranslation();\n\n  async function onGroupChange(groupId) {\n    const companies = allCompanies\n      .filter((item) => item?.companyId?.businessGroupId?._id == groupId)\n      .map((item) => ({\n        value: item?.companyId?._id,\n        label: item?.companyId?.companyName,\n      }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter((item) => item?.companyId?._id == companyId)\n      .map((item) => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getAllGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error);\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error);\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    fetchOptions();\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const { id } = useParams();\n  // const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n\n  const [filteredUserData, setFilteredUserData] = useState([]);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const { location: locationData, error: locationError } = useUserLocation();\n\n  const [company, setCompany] = useState();\n  const [branch, setBranch] = useState();\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\", margin: \"auto\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                onChange={async (newValue) => {\n                  if (newValue.value != getValues(\"businessGroupId\")) {\n                    setValue(\"businessGroupId\", newValue.value);\n                    setCompany(null);\n                    setValue(\"companyId\", \"\");\n                    setBranch(null);\n                    setValue(\"branchIds\", \"\");\n                  }\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { value, name, ref } }) => (\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  if (newValue.value != getValues(\"companyId\")) {\n                    setValue(\"companyId\", newValue.value);\n                    setCompany(newValue);\n                    setBranch(null);\n                    setValue(\"branchIds\", \"\");\n                  }\n                }}\n                groupId={watch(\"businessGroupId\")}\n                defaultValue={value}\n                value={company}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"branchIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <BranchDropdown\n                onChange={(newValue) => {\n                  const newArray = newValue.map((temp) => temp.value);\n                  setValue(\"branchIds\", newArray);\n                  setBranchId(newArray);\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                companyId={watch(\"companyId\")}\n                name={name}\n                isDisabled={!company?.value}\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"vehicle\")}</label>\n          <Controller\n            name=\"vehicleIds\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <VehicleDropdown\n                onChange={(newValue) => {\n                  const newArray = newValue.map((temp) => temp.value);\n                  setValue(\"vehicleIds\", newArray);\n                }}\n                value={value}\n                branchids={branchId}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={false}\n        />\n        {!id && (\n          <>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0] ? filteredUserData[0].password : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-3 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0]\n                      ? filteredUserData[0].confirmPassword\n                      : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(\n                  (option) => option.value === field.value\n                )}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label htmlFor=\"exampleFormControlInput6\" className=\"form-label\">\n            {t(\"unitOfDistance\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"unitOfDistance\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"unitOfDistance\", newValue.value);\n                }}\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{\n                  label: getValues(\"unitOfDistance\"),\n                  value: getValues(\"unitOfDistance\"),\n                }}\n              />\n            )}\n          />\n          {!getValues(\"unitOfDistance\") && (\n            <Error errorName={errors.unitOfDistance} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useSelector } from \"react-redux\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport UserForm from \"../components/Form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema, subUserEditAccountSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport { createUser, getUserById, updateUser } from \"../api\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport Loader from \"@/components/Loader\";\n\nconst CreateUser = () => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [t(\"account\")];\n  const component = [UserForm];\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const userDetails = useSelector((state) => state.auth.user);\n\n  const {\n    data: userData,\n    isError,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"user\", id],\n    queryFn: () => getUserById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  const parsedUserData = useMemo(() => {\n    return {\n      ...userData,\n    };\n  }, [userData]);\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch user data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n    watch,\n  } = useForm({\n    resolver: yupResolver(id ? subUserEditAccountSchema : subUserAccountSchema),\n    values: parsedUserData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: ediUserMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => updateUser(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Company Updated Successfully\");\n      queryClient.invalidateQueries([\"users\"]);\n      navigate(\"/user\");\n    },\n    onError,\n  });\n\n  const { mutate: createUserMutation, isPending: createPending } = useMutation({\n    mutationFn: createUser,\n    onSuccess: () => {\n      notifySuccess(\"New User Created\");\n      queryClient.invalidateQueries([\"users\"]);\n      navigate(\"/user\");\n    },\n    onError,\n  });\n\n  const onSubmit = (data) => {\n    if (id) {\n      ediUserMutation({ id, data });\n    } else {\n      data.role = \"USER\";\n      data.parent = userDetails.userName;\n      data.type = \"STAFF\";\n      createUserMutation(data);\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            onSubmit={onSubmit}\n                            handleSubmit={handleSubmit}\n                            isFormSubmitting={createPending || editPending}\n                            watch={watch}\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CreateUser;\n","import React, { useEffect, useState } from \"react\";\nimport { getAllBranch } from \"../../../services/api/BranchServices\";\nimport Select from \"react-select\";\nimport usePagination from \"../../../hooks/usePagination\";\n\nconst BranchDropdown = ({\n  onChange,\n  value,\n  customStyles,\n  name,\n  companyId,\n  isDisabled,\n  ref,\n  isMulti = true,\n}) => {\n  const [dropDownOptions, setdropDownOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(value);\n  const { page } = usePagination();\n  useEffect(() => {\n    const fetchBusinessGroups = async () => {\n      const response = await getAllBranch(\n        undefined,\n        companyId ? companyId : undefined\n      );\n      const groupOptions = response.data.data.map((item) => ({\n        value: item?._id,\n        label: item?.branchName,\n      }));\n      setdropDownOptions(groupOptions);\n    };\n    fetchBusinessGroups();\n  }, [page, companyId]);\n  useEffect(() => {\n    if (value && Array.isArray(value)) {\n      const selected = dropDownOptions.filter((option) =>\n        value.some((val) => val === option.value)\n      );\n      setSelectedOption(selected);\n    } else {\n      setSelectedOption(value);\n    }\n  }, [value, dropDownOptions]);\n  return (\n    <Select\n      options={dropDownOptions}\n      value={selectedOption}\n      onChange={(newValue) => onChange(newValue)}\n      styles={customStyles}\n      name={name}\n      ref={ref}\n      isDisabled={isDisabled}\n      isMulti\n    />\n  );\n};\nexport default BranchDropdown;\n","import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { getDrivers } from \"../../../features/driver/api\";\nimport { getVehicles } from \"../../../services/api/VehicleService\";\nimport usePagination from \"../../../hooks/usePagination\";\nconst VehicleDropdown = ({\n  onChange,\n  value,\n  customStyles,\n  branchids,\n  ref,\n  isDisabled,\n  name,\n}) => {\n  const [dropDownOptions, setdropDownOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(value);\n  const { page } = usePagination();\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      const response = await getVehicles(\n        page,\n        branchids ? branchids : undefined\n      );\n      const vehicleOptions = response.data.map((item) => ({\n        label: item?.vehicleName,\n        value: item?._id,\n      }));\n\n      setdropDownOptions(vehicleOptions);\n    };\n    fetchVehicles();\n  }, [page, branchids]);\n  useEffect(() => {\n    if (value && Array.isArray(value)) {\n      const selected = dropDownOptions.filter((option) =>\n        value.some((val) => val === option.value)\n      );\n      setSelectedOption(selected);\n    } else {\n      setSelectedOption(value);\n    }\n  }, [value, dropDownOptions, branchids]);\n\n  return (\n    <Select\n      options={dropDownOptions}\n      value={selectedOption}\n      onChange={(newValue) => onChange(newValue)}\n      styles={customStyles}\n      ref={ref}\n      name={name}\n      isMulti\n    />\n  );\n};\nexport default VehicleDropdown;\n","import requests from \"../api\";\nimport axios from \"axios\";\nimport initAxios from \"../api\";\ninitAxios();\n\nexport const getTemplates = async (page) => {\n  try {\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n      url += `?page=${page}&limit=${10}`;\n    }\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" };\n  }\n};\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  //   getStaffById: async (id, body) => {\n  //     return requests.post(`/admin/${id}`, body);\n  //   },\n\n  createTemplate: async (body) => {\n    try {\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n};\n\nexport default TemplateServices;\n"],"names":["_ref","height","_jsx","style","display","justifyContent","alignItems","marginTop","children","class","role","customStyles","control","base","padding","register","setValue","onSubmit","handleSubmit","getValues","errors","watch","isFormSubmitting","allGroups","setAllGroups","useState","allCompanies","setAllCompanies","allBranches","setAllBranches","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","branchId","setBranchId","t","useSelector","state","auth","user","useTranslation","useEffect","async","response","getAllGroups","companyResponse","getCompany","branchResponse","getAllBranch","error","notifyError","groups","data","groupOptions","map","item","_item$businessGroupId","_item$businessGroupId2","label","businessGroupId","groupName","value","_id","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyId","companyName","branches","branchOptions","branchName","setParentOptions","fetchOptions","getTemplates","tempOptions","name","id","useParams","filteredUserData","setFilteredUserData","localStorage","getItem","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","location","locationData","locationError","useUserLocation","company","setCompany","branch","setBranch","_jsxs","className","width","margin","Controller","rules","required","render","_ref2","field","onChange","ref","GroupDropdown","newValue","defaultValue","_ref3","CompanyDropdown","groupId","_ref4","BranchDropdown","newArray","temp","isDisabled","Error","errorName","parent","_ref5","VehicleDropdown","branchids","htmlFor","CustomInput","type","email","placeholder","userName","min","onInput","e","Math","max","target","mobileNumber","LocationSelector","showCity","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref6","Select","options","styles","find","option","featureTemplateId","_ref7","unitOfDistanceOptions","unitOfDistance","Button","disabled","CreateUser","activeIndex","setActiveIndex","tabHeading","component","UserForm","navigate","useNavigate","queryClient","useQueryClient","userDetails","userData","isError","useQuery","queryKey","queryFn","getUserById","enabled","staleTime","Infinity","parsedUserData","useMemo","formState","useForm","resolver","yupResolver","subUserEditAccountSchema","subUserAccountSchema","values","onError","err","getApiErrorMessage","mutate","ediUserMutation","isPending","editPending","useMutation","mutationFn","updateUser","onSuccess","notifySuccess","invalidateQueries","createUserMutation","createPending","createUser","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Loader","Component","Pane","isMulti","dropDownOptions","setdropDownOptions","selectedOption","setSelectedOption","page","usePagination","undefined","fetchBusinessGroups","Array","isArray","selected","filter","some","val","vehicleOptions","getVehicles","vehicleName","fetchVehicles","initAxios","url","axios","get","console","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}