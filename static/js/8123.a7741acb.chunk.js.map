{"version":3,"file":"static/js/8123.a7741acb.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","jsx/components/bootstrap/Carousel.js","jsx/layouts/PageTitle.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  indicatorLabels: [],\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide,\n    fade,\n    controls,\n    indicators,\n    indicatorLabels,\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval,\n    keyboard,\n    onKeyDown,\n    pause,\n    onMouseOver,\n    onMouseOut,\n    wrap,\n    touch,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon,\n    prevLabel,\n    nextIcon,\n    nextLabel,\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        });\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import React, {useState} from 'react'\r\nimport { Fragment } from 'react';\r\nimport Highlight from \"react-highlight\";\r\n//import PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {Link} from 'react-scroll';\r\n\r\n/// Page Title\r\nimport PageTitle from '../../layouts/PageTitle'\r\n\r\n\r\n/// Images\r\nimport img1 from '../../../images/big/img1.jpg'\r\nimport img2 from '../../../images/big/img2.jpg'\r\nimport img3 from '../../../images/big/img3.jpg'\r\nimport img4 from '../../../images/big/img4.jpg'\r\nimport img5 from '../../../images/big/img5.jpg'\r\nimport img6 from '../../../images/big/img6.jpg'\r\nimport img7 from '../../../images/big/img7.jpg'\r\n\r\n/// Bootstrap\r\nimport { Row, Col, Card, Carousel, Nav, Tab } from 'react-bootstrap'\r\n\r\n/// carousel data\r\nconst carousel1 = [img1, img2, img3]\r\nconst carousel2 = [\r\n  { img: img2, text: 'First' },\r\n  { img: img3, text: 'Second' },\r\n  { img: img4, text: 'Third' },\r\n]\r\nconst carousel3 = [img3, img4, img5]\r\n\r\nconst carousel5 = [\r\n  { img: img5, text: 'First' },\r\n  { img: img6, text: 'Second' },\r\n  { img: img7, text: 'Third' },\r\n]\r\n\r\nconst sidebarLink = [\r\n  {title:'Slides', to:'slides-only'},\r\n  {title:'With Captions', to:'with-captions'},\r\n  {title:'Only Slides', to:'slides-only-1'},\r\n  {title:'Slides With Indicators', to:'slides-indicators'},\r\n  {title:'Slides With Captions', to:'slides-captions'},\r\n]\r\nconst UiCarousel = () => {\r\n  const [activeLink ,setActiveLink] = useState(0);\r\n  return (\r\n    <Fragment>\r\n      <PageTitle motherMenu='Bootstrap' activeMenu='Carousel' />\r\n      <div className=\"container-fluid\">\r\n          <div className=\"element-area\">\r\n            <div className=\"demo-view\">\r\n              <div className=\"container-fluid pt-0 ps-0 pe-lg-4 pe-0\">\r\n                <Row>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-only\" className=\"dz-card\">\r\n                        <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title'>Slides</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                              <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                                <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                                <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                              </Nav.Item>\r\n                            </Nav>   \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel1.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel1.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n      <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>    \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"with-captions\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                          <h4 className='card-intro-title'>With Captions</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>  \r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                  {carousel2.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        className='d-block w-100'\r\n                                        src={carousel.img}\r\n                                        alt={`${carousel.text} slide`}\r\n                                      />\r\n                                      <Carousel.Caption className=' d-none d-md-block'>\r\n                                        <h5>{carousel.text} slide label</h5>\r\n                                        <p>\r\n                                          Nulla vitae elit libero, a pharetra augue mollis\r\n                                          interdum.\r\n                                        </p>\r\n                                      </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel controls={false} indicators={false}>\r\n    {carousel2.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          className='d-block w-100'\r\n          src={carousel.img}\r\n          alt={\\`$\\{carousel.text} slide\\`}\r\n        />\r\n        <Carousel.Caption className=' d-none d-md-block'>\r\n          <h5>{carousel.text} slide label</h5>\r\n          <p>\r\n            Nulla vitae elit libero, a pharetra augue mollis\r\n            interdum.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight> \r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>  \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-only-1\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title'>Only Slides</h4>                        \r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header> \r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\"> \r\n                              <Card.Body className='p-4'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                  {carousel3.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                              </Tab.Pane>\r\n                              <Tab.Pane eventKey=\"Code\">\r\n                              <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel controls={false} indicators={false}>\r\n    {carousel3.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n\r\n                              </Tab.Pane>\r\n                            </Tab.Content>\r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-indicators\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title mb-4'>Slides With indicators</h4>\r\n                          \r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel1.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel1.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>   \r\n                      </Card>\r\n                    </Tab.Container> \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-captions\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title mb-4'>Slides With captions</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel5.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        className='d-block w-100'\r\n                                        src={carousel.img}\r\n                                        alt={`${carousel.text} slide`}\r\n                                      />\r\n                                      <Carousel.Caption className=' d-none d-md-block'>\r\n                                        <h5>{carousel.text} slide label</h5>\r\n                                        <p>\r\n                                          Nulla vitae elit libero, a pharetra augue mollis\r\n                                          interdum.\r\n                                        </p>\r\n                                      </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel5.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          className='d-block w-100'\r\n          src={carousel.img}\r\n          alt={\\`$\\{carousel.text} slide\\`}\r\n        />\r\n        <Carousel.Caption className=' d-none d-md-block'>\r\n          <h5>{carousel.text} slide label</h5>\r\n          <p>\r\n            Nulla vitae elit libero, a pharetra augue mollis\r\n            interdum.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>    \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                </Row>               \r\n              </div>\r\n            </div>\r\n            <div className=\"demo-right \">\r\n                <div className=\"demo-right-inner dlab-scroll \" id=\"right-sidebar\">\r\n                    <h4 className=\"title\">Carousel</h4>\r\n                    <ul className=\"navbar-nav\" id=\"menu-bar\">\r\n                      {sidebarLink.map((item, ind)=>(\r\n                        <li key={ind}                          \r\n                        >\r\n                          <Link to={item.to} \r\n                            className={`scroll ${ind === activeLink ? 'active' :  ''} `}\r\n                            activeClass=\"active\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            onClick={()=>setActiveLink(ind)}\r\n                          > \r\n                            {item.title}\r\n                          </Link>\r\n                        </li>\r\n                      ))}                          \r\n                    </ul>\t\r\n                </div>\r\n            </div>\r\n          </div>      \r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UiCarousel\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageTitle = ({ motherMenu, activeMenu, pageContent }) => {\r\n  let path = window.location.pathname.split(\"/\");\r\n\r\n  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row page-titles mx-0\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><Link to={`/${path[path.length - 1]}`}>{motherMenu}</Link></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\"><Link to={`/${path[path.length - 1]}`}>{activeMenu}</Link></li>\r\n\t\t\t\t</ol>\r\n\t\t\t</div>\r\n\t\t</>\r\n    \t\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["fn","deps","isFirst","useRef","useEffect","current","createWithBsPrefix","CarouselItem","React","_ref","ref","as","Component","bsPrefix","className","props","finalClassName","classNames","useBootstrapPrefix","_jsx","displayName","defaultProps","slide","fade","controls","indicators","indicatorLabels","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","prevLabel","nextIcon","nextLabel","Carousel","uncontrolledProps","activeIndex","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","variant","children","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","useState","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","index","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","concat","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","Math","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","_jsxs","map","type","onClick","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","CarouselCaption","Item","carousel1","img1","img2","img3","carousel2","img","text","img4","carousel3","img5","carousel5","img6","img7","sidebarLink","title","to","UiCarousel","activeLink","setActiveLink","Fragment","PageTitle","motherMenu","activeMenu","Row","Col","xl","Tab","defaultActiveKey","Card","name","Nav","id","role","eventKey","carousel","i","src","alt","Highlight","item","ind","Link","activeClass","spy","smooth","pageContent","path","location","pathname","split","MAX_DELAY_MS","pow","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","isMounted","useMounted","useWillUnmount","clearTimeout","clear","func","hasChildOfType","some"],"sourceRoot":""}