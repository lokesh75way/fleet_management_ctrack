{"version":3,"file":"static/js/2799.3de9ae45.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport { featureTemplateOptions } from \"../VehicleTabs/Options\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/selectValues\";\n\nimport {useTranslation} from \"react-i18next\";\n\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n}) => {\n  const { checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const {t} = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n\n    \n  };\n\n\n  const defaultCompanyOptions = DummyData.filter(\n    (item) => item.role === \"company\"\n  ).map((item) => ({\n    label: item.userName,\n    value: item.id,\n  }));\n\n  console.log('ye he default company data', defaultCompanyOptions);\n\n  const { id } = useParams();\n  const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const role = localStorage.getItem(\"role\");\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n\n  \n  \n  let parentbgname;\n  if(role === 'company') {\n    const parentbgnamefilter = User.filter(user => user.parentCompany === loggedinemail);\n    parentbgname = parentbgnamefilter[0].parentBusinessGroup;\n  }\n  \n  const branchData = User.filter(\n    (item) => item.role === \"branch\" && item.id == id\n  );\n\n  const userData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const newData = userData.filter((data) => data.id === parseInt(id, 10));\n\n  const defaultValues = getSelectValues();\n\n  const [filteredUserData, setFilteredUserData] = useState(newData);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n\n  useEffect(() => {\n    const tempbusinessUserOptions = DummyData.filter(\n      (item) => item.role === \"businessgroup\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item.id,\n    }));\n\n    let tempcompanyOptions;\n    if(role === \"businessgroup\"){\n\n      tempcompanyOptions = DummyData.filter(\n        (item) => item.role === \"company\"\n      )\n        .filter((cp) => cp.parent === loggedinemail)\n        .map((item) => ({\n          label: item.userName,\n          value: item.id,\n        }));\n        \n      }else{\n        \n        tempcompanyOptions = DummyData.filter(\n          (item) => item.role === \"company\"\n        )\n          .filter((cp) => cp.parent === businessUserValue)\n          .map((item) => ({\n            label: item.userName,\n            value: item.id,\n          }));\n        \n    }\n\n\n    let tempparentOptions;\n\n    if(role === 'company') {\n      tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n        .filter((br) => br.parentCompany === loggedinemail)\n        .map((item) => ({\n          label: item.userName,\n          value: item.id,\n        }));\n      }else{\n        tempparentOptions = DummyData.filter((item) => item.role === \"branch\")\n          .filter((br) => br.parentCompany === companyValue)\n          .map((item) => ({\n            label: item.userName,\n            value: item.id,\n          }));\n    }\n\n    let tempvehicleOptions;\n    if(role === 'company') {\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === loggedinemail ).map((item) => ({\n        label: item.vehicleName,\n        value: item.id,\n      }));\n      \n    }else{\n      tempvehicleOptions = DummyData.filter(item => item.vehicleName && item.company === companyValue ).map((item) => ({\n        label: item.vehicleName,\n        value: item.id,\n      }));\n      \n\n    }\n\n\n\n    tempcompanyOptions.push({ label: \"None\", value: 0 });\n\n    setBusinessUserOptions(tempbusinessUserOptions);\n\n    console.log('ye he value ',businessUserValue);\n    if(businessUserValue) {\n      setCompanyOptions(tempcompanyOptions);\n    }\n    else{\n\n      setCompanyOptions([...defaultCompanyOptions,{ label: \"None\", value: 0 }]);\n    }\n    setVehiclesOptions(tempvehicleOptions);\n\n\n    setParentOptions(tempparentOptions);\n  }, [businessUserValue, companyValue, parentValue]);\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState(branchData);\n\n  useEffect(() => {\n    setValue(\n      \"parentBusinessGroup\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentBusinessGroup : \"\"\n    );\n    setValue(\n      \"parentCompany\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentCompany : \"\"\n    );\n    setValue(\n      \"parentBranch\",\n      filteredCompanyData[0] ? filteredCompanyData[0].parentBranch : \"\"\n    );\n    setValue(\n      \"country\",\n      filteredCompanyData[0] ? filteredCompanyData[0].country : \"\"\n    );\n    setValue(\n      \"state\",\n      filteredCompanyData[0] ? filteredCompanyData[0].state : \"\"\n    );\n  }, []);\n\n\n  \n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t('businessgroup')}</label>\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setBusinessUserValue(newValue.label);\n                  setValue(\"parentBusinessGroup\", newValue.label);\n                }}\n                options={businessUserOptions}\n                ref={ref}\n                isDisabled={defaultValues.business.disabled}\n                name={name}\n                styles={customStyles}\n                defaultValue={role === 'company' && {\n                  label: parentbgname,\n                  value: parentbgname,\n                } \n              }\n                \n              />\n            )}\n          />\n        </div>\n\n\n        \n\n\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Company\n          </label>\n\n          <Controller\n            name=\"parentCompany\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setCompanyValue(newValue.label);\n                  setValue(\"parentCompany\", newValue.label);\n                }}\n                isDisabled={defaultValues.company.disabled}\n                options={companyOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n\n                defaultValue={role === 'company' && {\n                  label: loggedinemail,\n                  value: loggedinemail,\n                } }\n\n                \n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Branch</label>\n          <Controller\n            name=\"Branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"Branch\", newValue);\n                }}\n                options={parentOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].Branch : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Vehicle</label>\n          <Controller\n            name=\"accessibleVehicles\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setValue(\"vehicle\", newValue);\n                }}\n                options={vehiclesOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                isMulti={true}\n                defaultValue={\n                  filteredUserData[0] ? filteredUserData[0].vehicle : \"\"\n                }\n              />\n            )}\n          />\n          {!getValues(\"vehicle\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Email <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Mobile Number <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Country<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">\n            State\n          </label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Password\"\n            name=\"password\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].password : \"\"\n            }\n          />\n          <Error errorName={errors.password} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Confirm Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].confirmPassword : \"\"\n            }\n          />\n          <Error errorName={errors.confirmPassword} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Feature Template <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplate\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {\n                  setTempValue(newValue.label);\n                  setValue(\"featureTemplate\", newValue.label);\n                }}\n                options={featureTemplateOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={featureTemplateOptions[0]}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplate\") && (\n            <Error errorName={errors.featureTemplate} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate,useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {subUserAccountSchema} from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {checkRole,checkUserName} = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [\"Account\"];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = (data) => {\n    try {\n      const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = existingData.length + 1;\n      data.role = \"user\";\n      data.parent = userName;\n      data.type = role;\n      existingData.push(data);\n      console.log('this is dataaaaaaaaaaaaaaaaa',data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n      notifySuccess(\"User created successfully !!\");\n      navigate('/subUser')\n    } catch (error) {\n      notifyError(\"Error Occured !!\");\n      navigate('/subUser')\n    }\n  }\n  const {id} = useParams();\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id?\"Edit\":\"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","checkUser","useStorage","tempValue","setTempValue","useState","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","t","useTranslation","customStyles","base","padding","defaultCompanyOptions","DummyData","filter","item","role","map","label","userName","value","id","console","log","useParams","User","JSON","parse","localStorage","getItem","loggedinemail","parentbgname","parentbgnamefilter","user","parentCompany","parentBusinessGroup","branchData","newData","data","parseInt","defaultValues","getSelectValues","filteredUserData","setFilteredUserData","businessUserOptions","setBusinessUserOptions","companyOptions","setCompanyOptions","parentOptions","setParentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","useEffect","tempbusinessUserOptions","tempcompanyOptions","tempparentOptions","tempvehicleOptions","cp","parent","br","vehicleName","company","push","filteredCompanyData","setFilteredCompanyData","parentBranch","country","state","_jsxs","className","children","style","width","margin","_jsx","Controller","name","rules","required","render","_ref2","field","onChange","ref","Select","newValue","options","isDisabled","business","disabled","styles","defaultValue","_ref3","_ref4","isMulti","Branch","Error","errorName","_ref5","vehicle","htmlFor","CustomInput","type","email","placeholder","mobileNumber","CountrySelect","e","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","password","confirmPassword","_ref6","featureTemplateOptions","featureTemplate","display","justifyContent","Button","onClick","Title","editData","setEditData","activeIndex","setActiveIndex","checkRole","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","existingData","setItem","stringify","notifySuccess","error","notifyError","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}