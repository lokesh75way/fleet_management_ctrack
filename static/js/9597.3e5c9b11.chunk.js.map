{"version":3,"file":"static/js/9597.3e5c9b11.chunk.js","mappings":"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","sources":["jsx/components/Tables/GeofenceTable.jsx","jsx/pages/Geofence.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from '../Modal/DeleteModal';\n\nconst GeofenceTable = ({tableData, onConfirmDelete, editDrawerOpen}) => {\n    return (\n        <>\n            {tableData.map((item, index) => (\n                <tr key={index}>\n                    <td><span>{item.id}</span></td>\n                    <td>\n                        <h6>{item.geofenceName}</h6>\n                    </td>\n                    <td><span>{item.geofenceType}</span></td>\n                    <td>\n                        <span>{item.contactNo}</span>\n                    </td>\n                    <td>\n                        <span>{item.address}</span>\n                    </td>\n                    <td><span>{item.description}</span></td>\n                    <td>\n                        <span>{item.geofenceAccess}</span>\n                    </td>\n                    <td>\n                        <span className='d-flex justify-content-center'>\n                            <span className='cursor-pointer' onClick={() => editDrawerOpen(item.id)} ><FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} /></span>\n                            <DeleteModal className='cursor-pointer ' onConfirmDelete={onConfirmDelete} id={item.id} ><MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} /></DeleteModal>\n\n                        </span>\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n\nexport default GeofenceTable","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport { IMAGES } from \"../constant/theme\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport InviteCustomer from \"../constant/ModalList\";\nimport EmployeeOffcanvas from \"../constant/EmployeeOffcanvas\";\nimport { GeofenceData } from \"../components/Tables/Tables\";\nimport GeofenceTable from \"../components/Tables/GeofenceTable\";\nimport { filterAlerts, findHighestAndLowestDates } from \"../../utils/selectValues\";\nimport { companyOptions } from \"../components/TabComponent/VehicleTabs/Options\";\n\nconst headers = [\n  { label: \"Employee ID\", key: \"emplid\" },\n  { label: \"Employee Name\", key: \"title\" },\n  { label: \"Department\", key: \"department\" },\n  { label: \"Email Address\", key: \"email\" },\n  { label: \"Contact Number\", key: \"contact\" },\n  { label: \"Gender\", key: \"gender\" },\n  { label: \"Location\", key: \"location\" },\n  { label: \"Status\", key: \"status\" },\n];\n\nconst Driver = (ref) => {\n  const [startDate, setStartDate] = useState(new Date(0));\n  const [endDate, setEndDate] = useState(new Date(0));\n\n  const dateRangeText = startDate.toLocaleDateString();\n\n  const [selectFilter, setFilter] = useState({\n    value: \"All Companies\",\n    label: \"All Companies\",\n  });\n\n  const [tableData, setTableData] = useState(GeofenceData);\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const sort = 10;\n  const activePag = useRef(0);\n  const [test, settest] = useState(0);\n  const chageData = (frist, sec) => {\n    for (var i = 0; i < data.length; ++i) {\n      if (i >= frist && i < sec) {\n        data[i].classList.remove(\"d-none\");\n      } else {\n        data[i].classList.add(\"d-none\");\n      }\n    }\n  };\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      marginRight: \"1rem\",\n      marginLeft: \"1rem\",\n      width: \"15rem\",\n      height: \"0.6rem\",\n      menuPortal: (provided) => ({ ...provided, zIndex: 9999 }),\n      menu: (provided) => ({ ...provided, zIndex: 9999 }),\n    }),\n  };\n\n  // const[formData, setFormData] = useState()\n\n  useEffect(() => {\n    setData(document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\"));\n  }, [test]);\n\n  activePag.current === 0 && chageData(0, sort);\n  let paggination = Array(Math.ceil(data.length / sort))\n    .fill()\n    .map((_, i) => i + 1);\n  const onClick = (i) => {\n    activePag.current = i;\n    chageData(activePag.current * sort, (activePag.current + 1) * sort);\n    settest(i);\n  };\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n  const editDrawerOpen = (item) => {\n    tableData.map((table) => table.id === item && setEditData(table));\n\n    // setEditTableData(item);\n    employe.current.showModal();\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const updateTable = tableData.map((table) => {\n      if (table.id === editData.id) {\n        console.log(table.id);\n        return { ...table, ...editData };\n      }\n      return table;\n    });\n    setTableData(updateTable);\n  };\n\n  useEffect(() => {\n    const dates = findHighestAndLowestDates(GeofenceData);\n    setStartDate(dates.lowestDate);\n    setEndDate(dates.highestDate);\n  }, []);\n\n  useEffect(() => {\n    console.log(startDate);\n    if (startDate && endDate) {\n      const data = filterAlerts(\n        startDate,\n        endDate,\n        selectFilter.label,\n        GeofenceData\n      );\n      setTableData(data);\n    }\n  }, [startDate, endDate, selectFilter.value]);\n\n  const employe = useRef();\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Geofence\"\n        pageTitle={\"Geofence\"}\n        parentTitle={\"Settings\"}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">Geofence</h4>\n                    <div className=\"d-flex\">\n                      <DatePicker\n                        // width=\"0px\"\n                        className=\"form-control\"\n                        startDate={startDate}\n                        endDate={endDate}\n                        selectsRange\n                        onChange={(dates) => {\n                          const [start, end] = dates;\n                          setStartDate(start);\n                          setEndDate(end);\n                        }}\n                        dateFormat=\"dd/MM/yy\"\n                        placeholderText={dateRangeText}\n                      />\n                      <Select\n                        onChange={(newValue) => {\n                          setFilter({\n                            value: newValue.value,\n                            label: newValue.label,\n                          });\n                        }}\n                        name={\"parent\"}\n                        menuPortalTarget={document.body}\n                        menuPosition={\"fixed\"}\n                        styles={customStyles}\n                        options={companyOptions}\n                        value={selectFilter}\n                        defaultValue={{\n                          label: \"All Companies\",\n                          value: \"All Companies\",\n                        }}\n                      />\n                      <Link\n                        to={\"/settings/geofence/map\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        data-bs-toggle=\"offcanvas\"\n                        // onClick={() => employe.current.showModal()}\n                      >\n                        + Show Map\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>Geofence ID</th>\n                          <th>Geofence Name</th>\n                          <th>Geofence Type</th>\n                          <th>Contact Number</th>\n                          <th>Address</th>\n                          <th> Description</th>\n                          <th>Geofence Access</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <GeofenceTable\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        Showing {activePag.current * sort + 1} to{\" \"}\n                        {data.length > (activePag.current + 1) * sort\n                          ? (activePag.current + 1) * sort\n                          : data.length}{\" \"}\n                        of {data.length} entries\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Link\n                          className=\"paginate_button previous disabled\"\n                          to=\"/driver\"\n                          onClick={() =>\n                            activePag.current > 0 &&\n                            onClick(activePag.current - 1)\n                          }\n                        >\n                          <i className=\"fa-solid fa-angle-left\" />\n                        </Link>\n                        <span>\n                          {paggination.map((number, i) => (\n                            <Link\n                              key={i}\n                              to=\"/driver\"\n                              className={`paginate_button  ${\n                                activePag.current === i ? \"current\" : \"\"\n                              } `}\n                              onClick={() => onClick(i)}\n                            >\n                              {number}\n                            </Link>\n                          ))}\n                        </span>\n                        <Link\n                          className=\"paginate_button next\"\n                          to=\"/driver\"\n                          onClick={() =>\n                            activePag.current + 1 < paggination.length &&\n                            onClick(activePag.current + 1)\n                          }\n                        >\n                          <i className=\"fa-solid fa-angle-right\" />\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <EmployeeOffcanvas \n                ref={employe}\n                editData={editData}\n                setEditData={setEditData}\n                handleSubmit={handleSubmit}\n                Title={ editData.id === 0 ? \"Add Driver\" : \"Edit Driver\"}\n            /> */}\n    </>\n  );\n};\n\nexport default Driver;\n"],"names":["_ref","tableData","onConfirmDelete","editDrawerOpen","_jsx","_Fragment","children","map","item","index","_jsxs","id","geofenceName","geofenceType","contactNo","address","description","geofenceAccess","className","onClick","FaEdit","style","color","fontSize","DeleteModal","MdDelete","ref","startDate","setStartDate","useState","Date","endDate","setEndDate","dateRangeText","toLocaleDateString","selectFilter","setFilter","value","label","setTableData","GeofenceData","editData","setEditData","status","title","contact","age","drivingExperience","gender","location","data","setData","document","querySelectorAll","sort","activePag","useRef","test","settest","chageData","frist","sec","i","length","classList","remove","add","useEffect","current","paggination","Array","Math","ceil","fill","_","dates","findHighestAndLowestDates","lowestDate","highestDate","console","log","filterAlerts","employe","MainPagetitle","mainTitle","pageTitle","parentTitle","DatePicker","selectsRange","onChange","start","end","dateFormat","placeholderText","Select","newValue","name","menuPortalTarget","body","menuPosition","styles","control","base","marginRight","marginLeft","width","height","menuPortal","provided","zIndex","menu","options","companyOptions","defaultValue","Link","to","GeofenceTable","updatedData","filter","table","showModal","number","concat"],"sourceRoot":""}