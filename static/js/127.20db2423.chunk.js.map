{"version":3,"file":"static/js/127.20db2423.chunk.js","mappings":"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","sources":["components/Input/CredentialsInput.jsx","jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","components/Input/UserDetailsForm.jsx","features/company/components/Form.jsx","hooks/useUserLocation.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { t } from \"i18next\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\n\nconst CredentialsInput = ({ heading, register, errors, id, getValues }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <h3 className=\"mt-4 mb-4\">{heading}</h3>\n\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"username\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"userName\"\n          name=\"userName\"\n          placeholder=\"\"\n          defaultValue={getValues(\"userName\")}\n          disabled={id ? true : false}\n        />\n        <Error errorName={errors.userName} />\n      </div>\n\n      {!id && (\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"password\")} <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"position-relative\">\n            <CustomInput\n              type={showPassword ? \"text\" : \"password\"}\n              register={register}\n              label=\"Password\"\n              name=\"password\"\n              placeholder=\"\"\n            />\n            <span\n              className=\"showPasswordIcon\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n            >\n              {showPassword ? <LuEyeOff /> : <LuEye />}\n            </span>\n          </div>\n          {!id && <Error errorName={errors.password} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CredentialsInput;\n","import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState, GetCity } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n  showtimeZone = true,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n  const [countryId, setCountryId] = useState(null);\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) {\n        setValue(\"city\", dValues.city);\n        setSelectedCity({\n          value: dValues.city,\n          label: dValues.city,\n        });\n      }\n      \n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value === dValues?.country\n        );\n        if (option) handleCountryChange(option);\n      }\n      \n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n        \n        // If we have both country and state, we can load cities\n        if (dValues?.country && dValues?.state && countryId) {\n          const stateObj = stateList.find(state => getStateName(state) === dValues.state);\n          if (stateObj) {\n            loadCities(countryId, stateObj.id);\n          }\n        }\n      }\n    } else {\n      if (locationData?.country?.isoAlpha3) {\n        setSelectedCountry({\n          value: locationData?.country?.isoAlpha3,\n          label: locationData?.country?.isoName,\n        });\n        setValue(\"country\", locationData?.country?.isoAlpha3);\n        setCountryCode(locationData?.country?.isoAlpha2);\n        \n        const selectedCountryId = isoToCountryId(locationData?.country?.isoAlpha3);\n        setCountryId(selectedCountryId);\n        \n        if (locationData?.location?.principalSubdivision) {\n          setSelectedState({\n            value: locationData?.location?.principalSubdivision,\n            label: locationData?.location?.principalSubdivision || \"\",\n          });\n          setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n          \n          GetState(selectedCountryId).then((result) => {\n            setStateList(result);\n            // Find state ID to load cities\n            const stateObj = result.find(state => \n              getStateName(state) === locationData?.location?.principalSubdivision);\n            if (stateObj) {\n              loadCities(selectedCountryId, stateObj.id);\n            }\n          });\n        } else {\n          GetState(selectedCountryId).then((result) => {\n            setStateList(result);\n          });\n        }\n        \n        if (locationData?.location?.city) {\n          setValue(\"city\", locationData?.location?.city);\n          setSelectedCity({\n            value: locationData?.location?.city,\n            label: locationData?.location?.city,\n          });\n        }\n      }\n    }\n  }, [locationData, id, dValues, countriesList]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const loadCities = async (countryId, stateId) => {\n    if (countryId && stateId) {\n      try {\n        const cities = await GetCity(countryId, stateId);\n        setCityList(cities);\n      } catch (error) {\n        console.error(\"Error loading cities:\", error);\n        setCityList([]);\n      }\n    } else {\n      setCityList([]);\n    }\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n    setCountryId(selectedCountryId);\n\n    const selectedCountryObj = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountryObj.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountryObj.name });\n    setStateList([]);\n    setCityList([]);\n    setSelectedState(null);\n    setSelectedCity(null);\n    setValue(\"state\", \"\");\n    setValue(\"city\", \"\");\n    \n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = async (selectedOption) => {\n    const selectedStateName = selectedOption.value;\n    const selectedStateObj = stateList.find(\n      (state) => state.name === selectedStateName\n    );\n    \n    const stateName = getStateName(selectedStateObj);\n    setValue(\"state\", stateName);\n    setSelectedState({ value: stateName, label: stateName });\n    \n    // Reset city selection\n    setCityList([]);\n    setSelectedCity(null);\n    setValue(\"city\", \"\");\n    \n    // Load cities for the selected state\n    await loadCities(countryId, selectedStateObj.id);\n  };\n\n  const handleCityChange = (selectedOption) => {\n    const selectedCityName = selectedOption.value;\n    setValue(\"city\", selectedCityName);\n    setSelectedCity({ value: selectedCityName, label: selectedCityName });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  const cityOptions = cityList.map((city) => ({\n    value: city.name,\n    label: city.name,\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={`country-${selectedCountry?.value}`}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={`state-${selectedState?.value}`}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n          isDisabled={!selectedCountry}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          {cityList.length > 0 ? (\n            <Select\n              options={cityOptions}\n              key={`city-${selectedCity?.value}`}\n              value={selectedCity}\n              styles={customStyles}\n              onChange={handleCityChange}\n              isDisabled={!selectedState}\n            />\n          ) : (\n            <CustomInput\n              type=\"text\"\n              register={register}\n              label=\"City\"\n              name=\"city\"\n              placeholder=\"\"\n              defaultValue={getValues(\"city\")}\n            />\n          )}\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && showtimeZone && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\nimport { SVGICON } from \"../../constants/theme\";\nimport { t } from \"i18next\";\n\nconst UserDetailsForm = ({\n  field,\n  fields,\n  index,\n  register,\n  getValues,\n  errors,\n  remove,\n  id,\n}) => {\n  const handleRemoveForm = (index) => {\n    remove(index);\n  };\n\n  return (\n    <div key={field.id} className=\"row\">\n      <div className=\"d-flex align-items-center\">\n        {fields.length > 1 && (\n          <div className=\"flex-grow-1 mb-3\">\n            <h5>User {index + 1}</h5>\n          </div>\n        )}\n        {fields.length > 1 && (\n          <div className=\"mr-5\" onClick={() => handleRemoveForm(index)}>\n            {SVGICON.Delete}\n          </div>\n        )}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"name\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"name\"\n          name={`userInfo.${index}.name`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.name`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.name} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"designation\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"designation\"\n          name={`userInfo.${index}.designation`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.designation`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.designation} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"mobileNumber\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"number\"\n          register={register}\n          name={`userInfo.${index}.mobileNumber`}\n          label=\"Mobile Number\"\n          placeholder=\"\"\n          min=\"0\"\n          onInput={(e) => {\n            const temp = Math.max(0, e.target.value);\n            e.target.value = temp < 1 ? \"\" : temp;\n          }}\n          defaultValue={getValues(`userInfo.${index}.mobileNumber`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.mobileNumber} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"email\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"email\"\n          register={register}\n          name={`userInfo.${index}.email`}\n          label=\"email\"\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.email`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.email} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetailsForm;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport FileUploader from \"@/components/FileUploader\";\nimport GroupDropdownList from \"@/features/businessGroup/components/DropDownList\";\nimport CredentialsInput from \"@/components/Input/CredentialsInput\";\nimport UserDetailsForm from \"@/components/Input/UserDetailsForm\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \", // Adjust the height as needed\n  }),\n};\n\nconst CompanyForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const { location: locationData, error: locationError } = useUserLocation();\n  const { id } = useParams();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"businessGroup\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdownList\n                onChange={(newValue) => {\n                  setValue(\"businessGroupId\", newValue.value);\n                }}\n                defaultValue={value}\n                ref={ref}\n                name={name}\n                customStyles={customStyles}\n              />\n            )}\n          />\n          {!getValues(\"businessGroupId\") && (\n            <Error errorName={errors.businessGroupId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">\n            {t(\"companyName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"Company Name\"\n            name=\"companyName\"\n            defaultValue={getValues(\"companyName\")}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.companyName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <span\n          className=\"absolute\"\n          style={{\n            position: \"absolute\",\n            top: \"23%\",\n            right: \"-42%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <FileUploader\n            setValue={setValue}\n            register={register}\n            label={t(\"Business-Group-Logo\")}\n            name=\"logo\"\n            getValue={getValues}\n            setLoading={setLoading}\n            loading={loading}\n            link={getValues(\"logo\")}\n          />\n\n          <Error errorName={errors.logo} />\n        </span>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          dValues={{\n            country: getValues(\"country\"),\n            state: getValues(\"state\"),\n            city: getValues(\"city\"),\n          }}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"companyId\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={\n                  dateFormatOptions.find((option) => option.value === value) ||\n                  dateFormatOptions[0]\n                }\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={\n                  timeFormatOptions.find((option) => option.value === value) ||\n                  timeFormatOptions[1]\n                }\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <CredentialsInput\n          heading={t(\"companyLoginDetails\")}\n          register={register}\n          errors={errors}\n          id={id}\n          getValues={getValues}\n        />\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {t(\"add\")}\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <UserDetailsForm\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          disabled={loading || isFormSubmitting}\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyForm;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n"],"names":["_ref","heading","register","errors","id","getValues","showPassword","setShowPassword","useState","_jsxs","className","children","_jsx","t","CustomInput","type","label","name","placeholder","defaultValue","disabled","Error","errorName","userName","onClick","LuEyeOff","LuEye","password","countryCode","customStyle","setValue","dValues","Comptype","useTranslation","timezones","setTimezones","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","htmlFor","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","locationData","showCity","showtimeZone","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","countriesList","setCountriesList","stateList","setStateList","cityList","setCityList","setCountryCode","countryId","setCountryId","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","stateObj","getStateName","loadCities","_locationData$country","isoAlpha3","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$country5","_locationData$country6","_locationData$locatio","_locationData$locatio6","isoName","isoAlpha2","selectedCountryId","isoToCountryId","_locationData$locatio2","_locationData$locatio3","_locationData$locatio4","_locationData$locatio7","_locationData$locatio8","_locationData$locatio9","location","principalSubdivision","GetState","_locationData$locatio5","isoCode","iso3","async","stateId","cities","GetCity","error","selectedIsoCode","selectedCountryObj","iso2","endsWith","replace","stateOptions","cityOptions","_Fragment","selectedStateName","selectedStateObj","stateName","isDisabled","selectedCityName","TimeZoneSelector","_errors$userInfo","_errors$userInfo$inde","_errors$userInfo2","_errors$userInfo2$ind","_errors$userInfo3","_errors$userInfo3$ind","_errors$userInfo4","_errors$userInfo4$ind","field","fields","index","remove","handleRemoveForm","SVGICON","Delete","userInfo","designation","min","onInput","e","temp","max","target","mobileNumber","email","onSubmit","handleSubmit","isFormSubmitting","append","useFieldArray","loading","setLoading","locationError","useUserLocation","useParams","style","width","Controller","rules","required","render","_ref2","ref","GroupDropdownList","newValue","companyName","tradeLicenseNumber","position","top","right","overflow","FileUploader","getValue","link","logo","officeNumber","LocationSelector","_ref3","dateFormatOptions","dateFormat","_ref4","timeFormatOptions","CredentialsInput","display","justifyContent","margin","Button","handleAddForm","UserDetailsForm","lat","setLat","lng","setLng","setError","setLocation","isLoading","setIsLoading","API_KEY","process","response","axios","get","data","latitude","longitude","message","getLocation"],"sourceRoot":""}