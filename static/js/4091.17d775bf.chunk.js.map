{"version":3,"file":"static/js/4091.17d775bf.chunk.js","mappings":"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","sources":["jsx/components/DriverDropdown/index.jsx","jsx/components/Tables/ClassifyTripTable.jsx","jsx/pages/ActiveTab.js","jsx/constant/ClassifyTripsFilterOffcanvas.js","jsx/pages/ClassifyTrips.jsx","services/api/ClassifyTripServices.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { getDrivers } from \"../../../services/api/driverService\";\nconst DriverDropdown = ({\n  onChange,\n  value,\n  customStyles,\n  ref,\n  isDisabled,\n  name,\n}) => {\n  const [dropDownOptions, setdropDownOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(value);\n  useEffect(() => {\n    const fetchDrivers = async () => {\n      const response = await getDrivers();\n      const driverOptions = response.data.map((item) => ({\n        label: item?.firstName,\n        value: item?._id,\n      }));\n\n      setdropDownOptions(driverOptions);\n    };\n    fetchDrivers();\n  }, []);\n  useEffect(() => {\n    const selected = dropDownOptions.find((option) => option.value === value);\n    setSelectedOption(selected);\n  }, [value, dropDownOptions]);\n\n  return (\n    <Select\n      options={dropDownOptions}\n      value={selectedOption}\n      onChange={(newValue) => onChange(newValue)}\n      styles={customStyles}\n      ref={ref}\n      name={name}\n    />\n  );\n};\nexport default DriverDropdown;\n","import React, { useEffect } from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from \"../../../components/Modal/DeleteModal\";\nimport { Link } from \"react-router-dom\";\nimport { FaLocationDot } from \"react-icons/fa6\";\nimport dayjs from \"dayjs\";\n\nconst ClassifyTripTable = ({\n  tableData,\n  onConfirmDelete,\n  editDrawerOpen,\n  active,\n  currentPage,\n  itemsPerPage,\n}) => {\n  const formatDate = (dateTimeString) => {\n    return dayjs(dateTimeString).format(\"YYYY-MM-DD HH:MM\");\n  };\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n\n  return (\n    <>\n      {tableData.map((item, index) => (\n        <tr key={index}>\n          <td>\n            <span>{item._id}</span>\n          </td>\n          <td>\n            <span>{formatDate(item.startTime)}</span>\n          </td>\n          <td>\n            <span>{item.startLocation}</span>\n          </td>\n          <td>\n            <span>{formatDate(item.reachTime)}</span>\n          </td>\n          <td>\n            <span>{item.reachLocation}</span>\n          </td>\n          <td>\n            <span className=\"text-primary\">{item.distance}</span>\n          </td>\n          <td>\n            <span>{item.fuelConsumption}</span>\n          </td>\n          <td>\n            <span>{item.driver}</span>\n          </td>\n\n          <td>\n            <span className=\"d-flex justify-content-center\">\n              {active && (\n                <span className=\"cursor-pointer\" title=\"tracking\">\n                  <Link to={`/vehicle-tracking/${item.tripId}`}>\n                    <FaLocationDot\n                      style={{ color: \"#ff9f00\", fontSize: \"18px\" }}\n                    />\n                  </Link>\n                </span>\n              )}\n              <span\n                className=\"cursor-pointer\"\n                style={{ marginRight: \"3px\", marginLeft: \"7px\" }}\n                onClick={() => editDrawerOpen(item._id)}\n              >\n                <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n              </span>\n              <DeleteModal\n                className=\"cursor-pointer \"\n                onConfirmDelete={onConfirmDelete}\n                id={item._id}\n              >\n                <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n              </DeleteModal>\n            </span>\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n// onClick={() => editDrawerOpen(item.id)}\nexport default ClassifyTripTable;\n","import react from \"react\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ClassifyTripTable from \"../components/Tables/ClassifyTripTable\";\nimport { classifyTripsSchema } from \"../../utils/yup\";\nimport { deleteTrip, getTrips } from \"../../services/api/ClassifyTripServices\";\nimport { notifySuccess } from \"../../utils/toast\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport usePagination from \"../../hooks/usePagination\";\nimport { useTranslation } from \"react-i18next\";\nimport clsx from \"clsx\";\nimport ReactPaginate from \"react-paginate\";\nimport { ICON } from \"../constant/theme\";\nimport Paginate from \"../../components/Paginate\";\nimport TableSkeleton from \"@/components/Skeleton/Table\";\nconst ActiveTab = ({ tableData1, tabType }) => {\n  const [tableData, setTableData] = useState(tableData1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setTableData(tableData1);\n  }, [tableData1]);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const { isRtl } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\n    usePagination();\n  const itemsPerPage = 10;\n\n  const handlePageClick = ({ selected }) => {\n    goToPage(selected + 1);\n  };\n\n  const startIndex = (page - 1) * itemsPerPage;\n  // const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  useEffect(() => {\n    let status = \"\";\n    if (tabType === \"Active Trips\") {\n      status = \"ONGOING\";\n    } else if (tabType === \"Planned Trips\") {\n      status = \"JUST_STARTED\";\n    } else if (tabType === \"Completed Trips\") {\n      status = \"COMPLETED\";\n    }\n\n    getAllTrips(status);\n  }, [tabType, page]);\n\n  const getAllTrips = async (status) => {\n    try {\n      setIsLoading(true);\n      const { data, success, totalLength } = await getTrips(page, status);\n      setTableData(data);\n      setCount(totalLength);\n    } catch (error) {\n      console.log(\"Error\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onConfirmDelete = async (id) => {\n    await deleteTrip(id);\n    setTableData((prevTableData) =>\n      prevTableData.filter((trip) => trip._id !== id)\n    );\n    notifySuccess(\"Trip Deleted\");\n  };\n\n  const editDrawerOpen = (item) => {\n    const filteredData = tableData.filter((data) => data._id === item);\n    navigate(`edit/${item}`, { state: filteredData });\n  };\n\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n  console.log(tableData);\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-xl-12\">\n          <div className=\"card\">\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                <div\n                  id=\"employee-tbl_wrapper\"\n                  className=\"dataTables_wrapper no-footer\"\n                >\n                  {!tableData.length && isLoading ? (\n                    <TableSkeleton />\n                  ) : (\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"tripId\")}</th>\n                          <th>{t(\"startTime\")}</th>\n                          <th>{t(\"startLocation\")}</th>\n                          <th>{t(\"reachTime\")}</th>\n                          <th>{t(\"reachLocation\")}</th>\n                          <th>{t(\"distance\")}</th>\n                          <th>{t(\"fuelConsumption\")}</th>\n                          <th>{t(\"driver\")}</th>\n                          <th>{t(\"action\")}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <ClassifyTripTable\n                          active={true}\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                          currentPage={page}\n                          itemsPerPage={itemsPerPage}\n                        />\n                      </tbody>\n                    </table>\n                  )}\n                  <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                    <div className=\"dataTables_info\">\n                      {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                      {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                      {t(\"entries\")}\n                    </div>\n                    <div\n                      className=\"dataTables_paginate paging_simple_numbers\"\n                      id=\"example2_paginate\"\n                    >\n                      <Paginate\n                        totalCount={totalCount}\n                        itemsPerPage={itemsPerPage}\n                        handlePageClick={handlePageClick}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActiveTab;\n","import React, {\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useEffect,\n} from \"react\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport Error from \"../../components/Error/Error\";\nimport { branchOptions, subCompanyOptions } from \"@/constants/options\";\nimport {\n  FaBatteryFull,\n  FaCircle,\n  FaKey,\n  FaSearch,\n  FaWifi,\n} from \"react-icons/fa\";\nimport CustomInput from \"../../components/Input/CustomInput\";\nimport { findHighestAndLowestDates } from \"../../utils/helper\";\nimport DriverDropdown from \"../components/DriverDropdown\";\nimport { classifyTripsFilterCanvas } from \"../../utils/yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { getTrips } from \"../../services/api/ClassifyTripServices\";\n\nconst ClassifyTripsFilterOffcanvas = forwardRef(\n  ({ Title, filterData }, ref) => {\n    const [addEmploye, setAddEmploye] = useState(false);\n    const [tempValue, setTempValue] = useState();\n\n    useImperativeHandle(ref, () => ({\n      showModal() {\n        setAddEmploye(true);\n      },\n    }));\n    const nav = useNavigate();\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        padding: \".25rem 0 \", // Adjust the height as needed\n      }),\n    };\n    const {\n      register,\n      handleSubmit,\n      setValue,\n      getValues,\n      control,\n      formState: { errors },\n    } = useForm({\n      resolver: yupResolver(classifyTripsFilterCanvas),\n    });\n\n    const onSubmit = async (data) => {\n      const { driverId, startDate, endDate } = data;\n      const parsedStartDate = new Date(startDate);\n      const parsedEndDate = new Date(endDate);\n\n      if (\n        !isNaN(parsedStartDate.getTime()) &&\n        !isNaN(parsedEndDate.getTime())\n      ) {\n        const isoStartDate = parsedStartDate.toISOString();\n        const isoEndDate = parsedEndDate.toISOString();\n\n        const { data: response } = await getTrips(\n          undefined,\n          undefined,\n          driverId,\n          isoStartDate,\n          isoEndDate\n        );\n        filterData(response);\n      } else {\n        console.error(\"Invalid startDate or endDate\");\n      }\n    };\n\n    return (\n      <>\n        <Offcanvas\n          show={addEmploye}\n          onHide={setAddEmploye}\n          className=\"offcanvas-end customeoff classy_filter\"\n          placement=\"end\"\n        >\n          <div className=\"offcanvas-header\">\n            <h5 className=\"modal-title\" id=\"#gridSystemModal\">\n              {Title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setAddEmploye(false)}\n            >\n              <i className=\"fa-solid fa-xmark\"></i>\n            </button>\n          </div>\n          <div className=\"offcanvas-body\">\n            <div className=\"container-fluid\">\n              <FormProvider>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"container\">\n                    <div className=\"row \">\n                      <div className=\"col-xl-12 mb-3 \">\n                        <label className=\"form-label\">Driver</label>\n                        <Controller\n                          name=\"driverId\"\n                          control={control}\n                          render={({\n                            field: { onChange, value, name, ref },\n                          }) => (\n                            <DriverDropdown\n                              onChange={(newValue) => {\n                                setValue(\"driverId\", newValue.value);\n                              }}\n                              value={value}\n                              customStyles={customStyles}\n                              ref={ref}\n                              name={name}\n                            />\n                          )}\n                        />\n                      </div>\n                      <div className=\"col-xl-12 mb-3 d-flex flex-column\">\n                        <label className=\"form-label\">Start Date</label>\n                        <Controller\n                          name=\"startDate\"\n                          control={control}\n                          render={({ field }) => (\n                            <DatePicker\n                              selected={field.value}\n                              className=\"form-control\"\n                              onChange={(date) => field.onChange(date)}\n                            />\n                          )}\n                        />\n                      </div>\n                      <div className=\"col-xl-12 mb-3 d-flex flex-column\">\n                        <label className=\"form-label\">End Date</label>\n                        <Controller\n                          name=\"endDate\"\n                          control={control}\n                          render={({ field }) => (\n                            <DatePicker\n                              selected={field.value}\n                              className=\"form-control\"\n                              onChange={(date) => field.onChange(date)}\n                            />\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <div className=\"mb-4\">\n                          <button\n                            type=\"submit\"\n                            onClick={() => setAddEmploye(false)}\n                            className=\"btn btn-primary me-4 w-100\"\n                          >\n                            Apply\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </FormProvider>\n            </div>\n          </div>\n        </Offcanvas>\n      </>\n    );\n  }\n);\n\nexport default ClassifyTripsFilterOffcanvas;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport { IMAGES } from \"../constant/theme\";\nimport MainPagetitle from \"../../components/MainPagetitle\";\nimport { ClassifyTripData } from \"../components/Tables/Tables\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { classifyTripsSchema } from \"../../utils/yup\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { filterClassifyTable } from \"../../utils/helper\";\nimport { createTrip, getTrips } from \"../../services/api/ClassifyTripServices\";\nimport { notifySuccess } from \"../../utils/toast\";\nimport ActiveTab from \"./ActiveTab\";\nimport ClassifyTripsFilterOffcanvas from \"../constant/ClassifyTripsFilterOffcanvas\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ClassifyTrip = (ref) => {\n  const { t } = useTranslation();\n  const tabHeading = [t(\"activeTrips\"), t(\"plannedTrips\"), t(\"completedTrips\")];\n  const component = [ActiveTab, ActiveTab, ActiveTab];\n\n  const [tableData, setTableData] = useState([]);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(classifyTripsSchema),\n  });\n\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n  const navigate = useNavigate();\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n  };\n\n  const editDrawerOpen = (item) => {\n    const filteredData = tableData.filter((data) => data._id === item);\n    navigate(`edit/${item}`, { state: filteredData });\n    // classifyTrips.current.showModal();\n  };\n  const filterData = (data) => {\n    setTableData(data);\n  };\n  const classifyTrips = useRef();\n  const classifyTripsFilter = useRef();\n\n  const onSubmit = async (data) => {\n    try {\n      await createTrip(data);\n      notifySuccess(\"New Trip Created!\");\n      navigate(\"/settings/classifyTrips\");\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  };\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"classifyTrip\")}\n        pageTitle={t(\"classifyTrip\")}\n        parentTitle={t(\"settings\")}\n      />\n      <div className=\"m-2 p-2 classify_trip-container\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n              <Nav as=\"ul\" className=\"nav-tabs classify-trips\">\n                <div>\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </div>\n                <div className=\"\">\n                  <Link\n                    to={\"#\"}\n                    className=\"btn btn-primary btn-sm ms-1\"\n                    data-bs-toggle=\"offcanvas\"\n                    onClick={() => classifyTripsFilter.current.showModal()}\n                  >\n                    + {t(\"filter\")}\n                  </Link>{\" \"}\n                  <Link\n                    to={\"/settings/classifyTrips/create\"}\n                    className=\"btn btn-primary btn-sm ms-1\"\n                    data-bs-toggle=\"offcanvas\"\n                    // onClick={() => classifyTrips.current.showModal()}\n                  >\n                    + {t(\"addTrips\")}\n                  </Link>{\" \"}\n                </div>\n              </Nav>\n              <Tab.Content className=\"pt-4\">\n                {tabHeading.map((data, i) => {\n                  const Component = component[i];\n                  return (\n                    <Tab.Pane\n                      eventKey={data.toLowerCase()}\n                      key={i}\n                      active={i === activeIndex}\n                    >\n                      <Component\n                        tableData1={tableData}\n                        data={tabHeading}\n                        control={control}\n                        setValue={setValue}\n                        register={register}\n                        getValues={getValues}\n                        tableData\n                        errors={errors}\n                        handleSubmit={handleSubmit}\n                        onSubmit={onSubmit}\n                        tabType={data}\n                      />\n                    </Tab.Pane>\n                  );\n                })}\n              </Tab.Content>\n            </Tab.Container>\n            <ClassifyTripsFilterOffcanvas\n              ref={classifyTripsFilter}\n              Title={\"Add Filter\"}\n              filterData={filterData}\n            />\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\n\nexport default ClassifyTrip;\n","import axios from \"axios\";\nimport initAxios from \"../api\";\ninitAxios();\n\nexport const getTrips = async (\n  pageNo = 1,\n  status,\n  driverId,\n  startDate,\n  endDate\n) => {\n  let url = `/trips?page=${pageNo}&limit=10`;\n  if (driverId && startDate && endDate) {\n    url += `&driverId=${driverId}&start=${startDate}&end=${endDate}`;\n  } else {\n    url += `&status=${status}`;\n  }\n  const response = await axios.get(url);\n  return {\n    data: response.data.data.data,\n    totalLength: response.data.data.count,\n  };\n};\n\nexport const createTrip = async (body) => {\n  return axios.post(\"/trips\", body);\n};\n\nexport const updateTrip = async (id, body) => {\n  return axios.patch(`/trips/${id}`, body);\n};\n\nexport const deleteTrip = async (id) => {\n  return axios.delete(`/trips/${id}`);\n};\n"],"names":["_ref","onChange","value","customStyles","ref","isDisabled","name","dropDownOptions","setdropDownOptions","useState","selectedOption","setSelectedOption","useEffect","async","driverOptions","getDrivers","data","map","item","label","firstName","_id","fetchDrivers","selected","find","option","_jsx","Select","options","newValue","styles","tableData","onConfirmDelete","editDrawerOpen","active","currentPage","itemsPerPage","formatDate","dateTimeString","dayjs","format","_Fragment","children","index","_jsxs","startTime","startLocation","reachTime","reachLocation","className","distance","fuelConsumption","driver","title","Link","to","tripId","FaLocationDot","style","color","fontSize","marginRight","marginLeft","onClick","FaEdit","DeleteModal","id","MdDelete","tableData1","tabType","setTableData","isLoading","setIsLoading","register","setValue","getValues","handleSubmit","formState","errors","control","useForm","resolver","yupResolver","classifyTripsSchema","editData","setEditData","status","contact","age","drivingExperience","gender","location","isRtl","useContext","ThemeContext","t","useTranslation","navigate","useNavigate","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","usePagination","getAllTrips","success","totalLength","getTrips","error","console","log","useRef","length","TableSkeleton","ClassifyTripTable","deleteTrip","prevTableData","filter","trip","notifySuccess","filteredData","state","Math","min","Paginate","handlePageClick","_ref2","forwardRef","Title","filterData","addEmploye","setAddEmploye","tempValue","setTempValue","useImperativeHandle","showModal","base","padding","classifyTripsFilterCanvas","Offcanvas","show","onHide","placement","type","FormProvider","onSubmit","driverId","startDate","endDate","parsedStartDate","Date","parsedEndDate","isNaN","getTime","isoStartDate","toISOString","isoEndDate","response","undefined","Controller","render","field","DriverDropdown","_ref3","DatePicker","date","_ref4","tabHeading","component","ActiveTab","clearErrors","classifyTripsFilter","createTrip","activeIndex","setActiveIndex","MainPagetitle","mainTitle","pageTitle","parentTitle","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","eventKey","current","Content","Component","Pane","ClassifyTripsFilterOffcanvas","initAxios","arguments","url","axios","get","count","post","body","updateTrip","patch","delete"],"sourceRoot":""}