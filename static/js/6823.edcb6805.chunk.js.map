{"version":3,"file":"static/js/6823.edcb6805.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/CompanyTabs/MyAccount.jsx","jsx/components/TabComponent/CompanyTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/CompanyForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport DummyData from '../../../../users.json'\nimport useStorage from \"../../../../hooks/useStorage\";\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport { useParams } from \"react-router-dom\";\n\nconst MyAccount = ({ setValue,getValues, register, onSubmit, handleSubmit, errors, control }) => {\n  const {checkRole, checkUserName} = useStorage()\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [tempValue,setTempValue] = useState();\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const role = localStorage.getItem('role');\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n  const businessUserOptions = DummyData.filter((item) => item.role === \"businessgroup\").map((item) => ({\n    label: item.userName,\n    value: item.id,\n  }));\n\n  const companyOptions = DummyData.filter((item) => item.role === \"company\").map((item) => ({\n    label: item.userName,\n    value: item.id,\n  }));\n\n  \n  useEffect(()=>{\n    \n      if(role === 'businessgroup'){\n      setTempValue(localStorage.getItem('loginDetails-name')); \n      setValue(\"parent\", localStorage.getItem('loginDetails-name'))\n      }\n  },[])\n\n\n\n  const { id } = useParams();\n    const companyData = JSON.parse(localStorage.getItem('userJsonData'))\n  \n    const newData = companyData.filter(data => data.id.toString() === id);\n  \n    const [filteredCompanyData,setFilteredCompanyData] = useState(newData);\n  \n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Business Group<span className=\"text-danger\">*</span></label>\n          {\n          checkRole() === \"admin\" ?<Controller\n            name=\"parent\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {setTempValue(newValue.label); setValue(\"parent\", newValue.label)}}\n                options={businessUserOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n              />\n            )}\n          />:\n          <Controller\n            name=\"parent\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {setTempValue(newValue.label); setValue(\"parent\", newValue.label)}}\n                options={[{value:checkUserName(),label:checkUserName()}]}\n                ref={ref}\n                isDisabled={localStorage.getItem('role') !== 'Admin'}\n                name={name}\n                styles={customStyles}\n                defaultValue={[{value:checkUserName(),label:checkUserName()}]} \n              />\n            )}\n          />\n          }\n          { !getValues('parent') && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Company Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].userName : ''}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        {/* <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Company<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"Company\"\n            name=\"company\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].company : ''}\n          />\n           <Error errorName={errors.company} />\n        </div> */}\n               \n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Email<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].email : ''}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Password<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            name=\"password\"\n            label=\"password\"\n            placeholder=\"\"\n            defaultValue={getValues('password')}\n          />\n          <Error errorName={errors.password} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Email<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"helpDeskEmail\"\n            label=\"Help Desk Email\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].helpDeskEmail : ''}\n          />\n          <Error errorName={errors.helpDeskEmail} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Telephone Number<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Help Desk Telephone Number\"\n            name=\"helpDeskTelephoneNumber\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].helpDeskTelephoneNumber : ''}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.helpDeskTelephoneNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mobile Number<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            name=\"mobileNumber\"\n            label=\"Mobile Number\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].mobileNumber : ''}\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Whatsapp Contact Number</label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Whatsapp Contact Number\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].whatsappContactNumber : ''}\n          />\n          <Error errorName={errors.whatsappContactNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country<span className=\"text-danger\">*</span></label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n         { !getValues('country') && <Error errorName={errors.country} />}\n        </div>\n        <div className={`${isStateDisabled ? 'col-xl-6 mb-3 pe-none':'col-xl-6 mb-3'}`}>\n          <label className=\"form-label\">State</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues('state') && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            City<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].city : ''}\n          />\n          <Error errorName={errors.city} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Zip Code\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Zip Code\"\n            name=\"zipCode\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].zipCode : ''}\n          />\n          <Error errorName={errors.zipCode} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street1<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street1\"\n            name=\"street1\"\n            placeholder=\"\"\n            defaultValue={filteredCompanyData[0] ? filteredCompanyData[0].street1 : ''}\n          />\n          <Error errorName={errors.street1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street2\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street2\"\n            name=\"street2\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Contact Person</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Contact Person\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Fax Number\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Fax Number\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">Upload File</label>\n          <input\n            type=\"file\"\n            label=\"Document Name\"\n            name={`documentFile`}\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button type=\"submit\" onClick={handleSubmit(onSubmit)}  style={{ width: \"10%\" }}>\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport TimezoneSelect from 'react-timezone-select'\nimport { currencyOptions } from \"../VehicleTabs/Options\";\nimport { dayOptions } from \"../VehicleTabs/Options\";\nimport { statusOptions } from \"../VehicleTabs/Options\";\nimport { languageOptions } from \"../VehicleTabs/Options\";\n\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n  preferredCurrencyUnitOptions,\n  unitOfFuelOptions,\n  fuelEconomyScalingOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, handleSubmit, onSubmit,errors, control }) => {\n\n  const [selectedTimezone, setSelectedTimezone] = useState(Intl.DateTimeFormat().resolvedOptions().timeZone)\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Date Format</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Time Format</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Unit of Distance</label>\n          <Controller\n            name=\"fuelEconomyScaling\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) =>\n                  setValue(\"unitOfDistance\", newValue.value)\n                }\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={fuelEconomyScalingOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Unit of Fuel</label>\n          <Controller\n            name=\"unitOfFuel\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                options={unitOfFuelOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Language</label>\n          <Controller\n            name=\"language\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"language\", newValue.value)}\n                options={languageOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={languageOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Status</label>\n          <Controller\n            name=\"status\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"status\", newValue.value)}\n                options={statusOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={statusOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Work Start Day</label>\n          <Controller\n            name=\"worksstartday\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"worksstartday\", newValue.value)}\n                options={dayOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dayOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Currency</label>\n          <Controller\n            name=\"currency\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"currency\", newValue.value)}\n                options={currencyOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={currencyOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n        <label className=\"form-label\">Time Zone </label>\n          <Controller\n            name=\"timezone\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <TimezoneSelect\n                // onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                onChange={setSelectedTimezone}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n                value={selectedTimezone}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\" >\n          <label className=\"form-label\">Upload File</label>\n          <input\n            type=\"file\"\n            label=\"Document Name\"\n            name={`documentFile`}\n            className=\"form-control\"\n          />\n        </div>\n\n\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState } from \"react\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport MyAccount from \"../../../../components/TabComponent/CompanyTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/CompanyTabs/UserSetting\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { companyAccountSchema, companySettingSchema } from \"../../../../../yup\";\nimport useStorage from \"../../../../../hooks/useStorage\";\nimport { notifyError, notifySuccess } from \"../../../../../utils/toast\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ManagePassword from \"../../../../components/TabComponent/AdminProfileTabs/ManagePassword\";\n\nconst CompanyForm = () => {\n  const { saveData } = useStorage();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [activeIndex, setActiveIndex] = useState(0);\n  let tabHeading = [\"New Company\", \"Settings\", \"Change Password\"];\n  let component = [MyAccount, UserSetting, ManagePassword];\n  if (!id) {\n    tabHeading.pop();\n    component.pop();\n  }\n\n  const totalTabs = tabHeading.length;\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(\n      activeIndex === 1 ? companySettingSchema : companyAccountSchema\n    ),\n  });\n\n  const onSubmit = (data) => {\n    if (activeIndex === totalTabs - 1) {\n      try {\n        if (id) {\n          const val = JSON.parse(localStorage.getItem(\"userJsonData\"));\n          console.log(\"Id is needed\", id, data);\n          const indexToUpdate = val.findIndex((item) => item.id == id);\n          if (indexToUpdate !== -1) {\n            val[indexToUpdate] = { ...data, id, role: \"company\" };\n            localStorage.setItem(\"userJsonData\", JSON.stringify(val));\n            notifySuccess(\"Company Updated!\");\n            navigate(\"/company\");\n          }\n          return;\n        } else {\n          data = { ...data, role: \"company\" };\n          const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n          data.id = existingData.length + 1;\n          existingData.push(data);\n          localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n          notifySuccess(\"New Company Created!\");\n          navigate(\"/company\");\n          return;\n        }\n      } catch (error) {\n        notifyError(\"Some error occured !!\");\n      }\n    }\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n    notifySuccess(\"Saved !\");\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Company\"\n        pageTitle={id?\"Edit\":\"Create\"}\n        parentTitle={\"Company\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CompanyForm;\n"],"names":["_ref","setValue","getValues","register","onSubmit","handleSubmit","errors","control","checkRole","checkUserName","useStorage","countryid","setCountryid","useState","stateid","setstateid","tempValue","setTempValue","isStateDisabled","setIsStateDisabled","role","localStorage","getItem","customStyles","base","padding","businessUserOptions","DummyData","filter","item","map","label","userName","value","id","useEffect","useParams","newData","JSON","parse","data","toString","filteredCompanyData","setFilteredCompanyData","_jsxs","className","children","style","width","margin","_jsx","Controller","name","rules","required","render","_ref2","field","onChange","ref","Select","newValue","options","styles","_ref3","isDisabled","defaultValue","Error","errorName","parent","CustomInput","type","placeholder","email","password","helpDeskEmail","helpDeskTelephoneNumber","mobileNumber","whatsappContactNumber","CountrySelect","e","containerClassName","inputClassName","placeHolder","country","concat","background","StateSelect","state","htmlFor","city","zipCode","street1","display","justifyContent","Button","onClick","selectedTimezone","setSelectedTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","dateFormatOptions","dateFormat","timeFormatOptions","_ref4","unitOfDistanceOptions","fuelEconomyScalingOptions","_ref5","unitOfFuelOptions","_ref6","languageOptions","_ref7","statusOptions","_ref8","dayOptions","_ref9","currencyOptions","_ref10","TimezoneSelect","CompanyForm","saveData","navigate","useNavigate","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","ManagePassword","pop","totalTabs","length","formState","useForm","resolver","yupResolver","companySettingSchema","companyAccountSchema","val","console","log","indexToUpdate","findIndex","setItem","stringify","notifySuccess","existingData","push","error","notifyError","prevIndex","Math","min","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}