{"version":3,"file":"static/js/5163.3c249ca8.chunk.js","mappings":"4OAaA,MAqBA,EArBiBA,KACf,MAAM,eAAEC,EAAc,kBAAEC,IAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAKxD,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACC,EAAAA,IAAU,CAACH,UAAU,kBAC9CE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACE,EAAAA,IAAS,CAACJ,UAAU,kBAC7CE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAQK,QARPC,IACrBA,EAAEC,iBACFX,GAAmBD,EAAe,EAMiBM,UAACC,EAAAA,EAAAA,KAACM,EAAAA,IAAc,CAACR,UAAU,kBAC1EE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACO,EAAAA,IAAO,CAACT,UAAU,kBAC3CE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACQ,EAAAA,IAAU,CAACV,UAAU,kBAC9CE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACS,EAAAA,IAAiB,CAACX,UAAU,kBACrDE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACU,EAAAA,IAAiB,CAACZ,UAAU,kBACrDE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACW,EAAAA,IAAa,CAACb,UAAU,kBACjDE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,UAACC,EAAAA,EAAAA,KAACY,EAAAA,IAAY,CAACd,UAAU,mBAC9C,ECeV,EAlCqBe,IAAe,IAAd,KAAEC,GAAMD,EAC5B,MAAM,eAAEpB,EAAc,kBAAEC,IAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,GAEnDmB,EAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,+BACrB,SAAEC,IAAaC,EAAAA,EAAAA,IAAc,CACjCC,iBAAiB,GAADC,OAAKN,KAGvB,OACElB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACR,EAAQ,IACP0B,GAGAlB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,kBAAmB,CAAEC,MAAO,OAAQC,OAAQ,QAC5CC,OAAQZ,EAAK,GACba,KAAM,GAAG5B,SAEPN,GAKAO,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,IAJT,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMe,KAAI,CAAAC,EAAeC,KAAW,IAAzB,IAAEC,EAAG,IAAEC,GAAKH,EACrB,OAAO9B,EAAAA,EAAAA,KAACkC,EAAAA,GAAM,CAAaC,SAAU,CAAEH,MAAKC,QAAxBF,EAAiC,OAT3D/B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBAkBF,C,0OCpCV,MA+EA,EA/EqBqC,IACnB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAEnCK,EAAAA,EAAAA,YAAU,KACR,MAAM9B,EAAO+B,OAAOC,QAAQV,EAAMW,UAAUlB,KAAKf,IAC/C,MAAMkC,EAAYlC,EAAK,GAAGe,KAAKf,IACtB,CAAEmC,MAAOnC,EAAKoC,YAAaC,MAAOrC,EAAKsC,OAGhD,MAAO,CAAED,MAAOrC,EAAK,GAAImC,MAAOnC,EAAK,GAAIf,SAAUiD,EAAW,IAEhEL,EAAS,IAAI7B,GAAM,GAClB,CAACsB,EAAMW,WAYV,OACElD,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAACsD,IAAY,CACXZ,MAAOA,EACPL,QAASA,EACTG,SAAUA,EACVe,QAlBelB,IACnBC,EAAWD,EAAQ,EAkBfmB,SAhBgBhB,IACpBC,EAAYD,EAAS,EAgBjBiB,cAAc,EACdC,MAAO,CACLC,YAAY3D,EAAAA,EAAAA,KAAA,KAAG4D,MAAM,sBACrBC,aAAa7D,EAAAA,EAAAA,KAAA,KAAG4D,MAAM,qBACtBE,SACE9D,EAAAA,EAAAA,KAAA,KACE4D,MAAM,uBACNG,MAAO,CACLC,SAAU,UAIhBC,OACEjE,EAAAA,EAAAA,KAAA,KACE4D,MAAM,2BACNG,MAAO,CACLC,SAAU,UAIhBE,WACElE,EAAAA,EAAAA,KAAA,KACE4D,MAAM,6BACNG,MAAO,CACLC,SAAU,gBAOpBhE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CACLrE,UAAU,QACVsE,QAAQ,kBACRC,KAAK,SACLlE,QAlDamE,KACnB,MAAMC,EAAiBlC,EAAQR,KAAKf,GAAS0D,KAAKC,MAAM3D,KACxD4D,QAAQC,IAAIJ,GACZnC,EAAMwC,iCAAiC,EA+CX7E,SACvB,uBAIF,E,eC1EP,MAoFA,EApFqBc,IAAqD,IAApD,UAAEgE,EAAS,gCAAED,GAAiC/D,EAClE,MAAOwB,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAGrCK,EAAAA,EAAAA,YAAU,KACN,MAAM9B,EAAO+B,OAAOC,QAAQ+B,GAAWhD,KAAIC,IAAwB,IAAtBgD,EAASC,GAAOjD,EAK3D,MAAO,CAAEqB,MAAO2B,EAAS7B,MAAO6B,EAAS/E,SAJtBgF,EAAOlD,KAAImD,IAAK,CACjC/B,MAAO+B,EAAMC,KACb9B,MAAO6B,EAAM5B,OAEgD,IAEjET,EAAS7B,EAAK,GACb,CAAC+D,IAgBJ,OACEhF,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAACsD,IAAY,CACXZ,MAAOA,EACPL,QAASA,EACTG,SAAUA,EACVe,QArBalB,IACnBC,EAAWD,EAAQ,EAqBbmB,SAlBchB,IACpBC,EAAYD,EAAS,EAkBfiB,cAAc,EACdC,MAAO,CACLC,YAAY3D,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBACzB+D,aAAa7D,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAC1BgE,SACE9D,EAAAA,EAAAA,KAAA,KACEF,UAAU,uBACViE,MAAO,CACLC,SAAU,UAIhBC,OACEjE,EAAAA,EAAAA,KAAA,KACEF,UAAU,2BACViE,MAAO,CACLC,SAAU,UAIhBE,WACElE,EAAAA,EAAAA,KAAA,KACEF,UAAU,6BACViE,MAAO,CACLC,SAAU,gBAOtBhE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CACLrE,UAAU,QACVsE,QAAQ,kBACRC,KAAK,SACLlE,QAnDamE,KACnB,MAAMC,EAAiBlC,EAAQR,KAAKf,GAAS0D,KAAKC,MAAM3D,KACxD4D,QAAQC,IAAIJ,GACZK,GAAiC,EAgDL7E,SACvB,uBAIF,ECSDmF,EAAuB9C,IAC3B,MAAM+C,GAASC,EAAAA,EAAAA,OACT,QAAEC,EAAO,KAAEC,EAAI,QAAEC,EAAO,SAAEC,EAAQ,OAAEC,EAAM,MAAEC,GAAUP,GACrDQ,EAAaC,IAAkBrD,EAAAA,EAAAA,UAAS,QACxCQ,EAAU8C,IAAetD,EAAAA,EAAAA,UAAS,KACzCK,EAAAA,EAAAA,YAAU,KACR,MAAM9B,GAAOgF,EAAAA,EAAAA,IAAYH,GACzBE,EAAY/E,EAAK,GAChB,CAAC6E,IACJ,MAAMI,EAAQvB,KAAKC,MAAMuB,aAAaC,QAAQ,iBAC3CC,QAAQC,GAA8B,YAArBA,EAAKC,cACtBvE,KAAKf,IAAI,CACRsC,GAAItC,EAAKsC,GACT6B,KAAMnE,EAAKoC,gBAmBf,OACErD,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,MAAA,QACEC,UAAS,cAAAuB,OACS,YAAhBsE,GAA6B,2BAE/BxF,QAASA,IAAMyF,EAAe,WAAW7F,SAAA,EAEzCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIsF,KACJrF,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBAERF,EAAAA,EAAAA,MAAA,QACEwG,MAAI,EACJvG,UAAS,cAAAuB,OACS,SAAhBsE,GAA0B,2BAE5BxF,QAASA,IAAMyF,EAAe,QAAQ7F,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIuF,KACJtF,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAERF,EAAAA,EAAAA,MAAA,QACEwG,MAAI,EACJvG,UAAS,cAAAuB,OACS,YAAhBsE,GAA6B,2BAE/BxF,QAASA,IAAMyF,EAAe,WAAW7F,SAAA,EAEzCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwF,KACJvF,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBAERF,EAAAA,EAAAA,MAAA,QACEwG,MAAI,EACJvG,UAAS,cAAAuB,OACS,aAAhBsE,GAA8B,2BAEhCxF,QAASA,IAAMyF,EAAe,YAAY7F,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,KAAAD,SAAIyF,KACJxF,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAERF,EAAAA,EAAAA,MAAA,QACEwG,MAAI,EACJvG,UAAS,cAAAuB,OACS,WAAhBsE,GAA4B,2BAE9BxF,QAASA,IAAMyF,EAAe,UAAU7F,SAAA,EAExCC,EAAAA,EAAAA,KAAA,KAAAD,SAAI0F,KACJzF,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eAERF,EAAAA,EAAAA,MAAA,QACEC,UAAS,cAAAuB,OACS,QAAhBsE,GAAyB,2BAE3BxF,QAASA,IAAMyF,EAAe,OAAO7F,SAAA,EAErCC,EAAAA,EAAAA,KAAA,KAAAD,SAAI2F,KACJ1F,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAGVC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACsG,EAAAA,wBAAuB,CACtBP,MAAOA,EACPjG,UAAU,QACVyG,QAAS,CACP9E,OAAQ,OACR+E,YAAa,OACbxC,SAAW,OACXyC,MAAO,WAETC,SAAWC,IACT,GAAe,KAAXA,EAAe,CACjB,MAAM7F,GAAOgF,EAAAA,EAAAA,IAAYH,GACzBE,EAAY/E,EACd,GAEF8F,SA/FcT,IACpB,MAAMU,GAAcf,EAAAA,EAAAA,IAAYH,GAChCjB,QAAQC,IAAIkC,GACZ,MAIMC,EAJejE,OAAOC,QAAQ+D,GAAaX,QAAQa,GAC3CA,EAAQ,GAAGb,QAAQpF,GAASA,EAAKsC,IAAM+C,EAAK/C,KAC7C4D,OAAS,IAEaC,QAAO,CAACC,EAAGpF,KAA4B,IAAzBgD,EAASqC,GAAUrF,EAMlE,OALAqF,EAAUtF,KAAKf,IACTA,EAAKoC,cAAgBiD,EAAKlB,OAC5BiC,EAAIpC,GAAW,CAAChE,GAClB,IAEKoG,CAAG,GACT,CAAC,GACJrB,EAAYiB,EAAc,OAmFvB9G,EAAAA,EAAAA,KAACoH,EAAW,CAACrE,SAAUA,EAAU6B,gCAAiCxC,EAAMiF,6BACxE,EAIDC,EAAuBlF,IAC3B,MAAOuD,EAAaC,IAAkBrD,EAAAA,EAAAA,UAAS,QACxCgF,EAAWC,IAAgBjF,EAAAA,EAAAA,UAAS,KACpCkF,EAAiBC,IAAsBnF,EAAAA,EAAAA,UAAS,KAChDoF,EAAcC,IAAmBrF,EAAAA,EAAAA,UAAS,KAC1CsF,EAAeC,IAAoBvF,EAAAA,EAAAA,WAAS,IAC5CwF,EAAWC,IAAgBzF,EAAAA,EAAAA,WAAS,GACrC0F,EAAWzD,KAAKC,MAAMuB,aAAaC,QAAQ,kBAC1CnB,EAASoD,IAAc3F,EAAAA,EAAAA,UAC5B0F,EAAS/B,QAAQC,GAAuB,YAAdA,EAAKgC,SAE1BC,EAASC,IAAc9F,EAAAA,EAAAA,UAC5B0F,EAAS/B,QAAQC,GAA8B,WAArBA,EAAKC,eAE3BkC,EAAYF,EAAQlC,QACvBC,GAAiC,cAAxBA,EAAKoC,iBAEXC,EAAeJ,EAAQlC,QAC1BC,GAAiC,kBAAxBA,EAAKoC,iBAEX7C,EAAQ0C,EAAQpB,OA+BhByB,EAAgBC,IACpBhE,QAAQC,IAAI4C,GACZC,GAAamB,IACX,MAAMC,EAAS,IAAID,GAEnB,OADAC,EAAOF,IAAQE,EAAOF,GACfE,CAAM,GACb,GAmBJhG,EAAAA,EAAAA,YAAU,KACR,GAAoB,QAAhB+C,EAAuB,CAGzB,GAFAuC,EAAWD,EAAS/B,QAAQC,GAAuB,YAAdA,EAAKgC,QAC1CL,GAAiB,GACG,cAAhBnC,EAA6B,CAC/B,MAAMkD,EAAcP,EACjBzG,KAAKsE,GAASA,EAAK2C,gBACnB5C,QAAO,CAAC/C,EAAOpB,EAAOgH,IAAUA,EAAMC,QAAQ7F,KAAWpB,IAC5DmG,EACEpD,EAAQoB,QAAQ+C,GACdJ,EAAYK,MAAMC,GAAUA,IAAUF,EAAMG,aAGlD,CACA,GAAoB,kBAAhBzD,EAAiC,CACnC,MAAMkD,EAAcL,EACjB3G,KAAKsE,GAASA,EAAK2C,gBACnB5C,QAAO,CAAC/C,EAAOpB,EAAOgH,IAAUA,EAAMC,QAAQ7F,KAAWpB,IAC5DmG,EACEpD,EAAQoB,QAAQ+C,GACdJ,EAAYK,MAAMC,GAAUA,IAAUF,EAAMG,aAGlD,CACF,MAAOtB,GAAiB,EAAM,GAC7B,CAACnC,IACJ,MAAMI,EAAQkC,EACX/B,QAAQC,GAA8B,WAArBA,EAAKC,cACtBvE,KAAKsE,IACG,CAAE/C,GAAI+C,EAAK/C,GAAI6B,KAAMkB,EAAKkD,UAAY,IAAMlD,EAAKmD,aAE5D,OACEzJ,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,QACE0J,GAAG,GACHlD,MAAI,EACJvG,UAAS,cAAAuB,OACS,cAAhBsE,EACI,0BACAoC,GAAa,WAEnB5H,QAASA,IAAMyF,EAAe,aAAa7F,SAAA,EAE3CC,EAAAA,EAAAA,KAAA,KAAAD,SAAIuI,EAAUtB,UACdhH,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBAERF,EAAAA,EAAAA,MAAA,QACE0J,GAAG,GACHlD,MAAI,EACJvG,UAAS,cAAAuB,OACS,kBAAhBsE,EACI,0BACAoC,GAAa,WAEnB5H,QAASA,IAAMyF,EAAe,iBAAiB7F,SAAA,EAE/CC,EAAAA,EAAAA,KAAA,KAAAD,SAAIyI,EAAaxB,UACjBhH,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAERF,EAAAA,EAAAA,MAAA,QACE0J,GAAG,GACHlD,MAAI,EACJvG,UAAS,cAAAuB,OACS,UAAhBsE,EACI,0BACAoC,GAAa,WAEnB5H,QAASA,IAAMyF,EAAe,SAAS7F,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAI2F,KACJ1F,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAGVC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACsG,EAAAA,wBAAuB,CACtBP,MAAOA,EACPjG,UAAU,QACVyG,QAAS,CAAEpE,SAAU,WAAYqH,OAAQ,KACzC9C,SAzHe+C,CAAC9C,EAAQ+C,KAC9B9D,EAAe,OACfoC,GAAa,GACbF,GAAiB,GACjBO,EAAWJ,EAAS/B,QAAQC,GAA8B,WAArBA,EAAKC,eAC1C8B,EAAWD,EAAS/B,QAAQC,GAAuB,YAAdA,EAAKgC,OAAoB,EAqHxDvB,SAvIgB8C,IACtB9D,EAAe,OACfkC,GAAiB,GACjBE,GAAa,GACb,IAAI2B,EAAgB1B,EAAS/B,QAC1BC,GAA8B,WAArBA,EAAKC,aAA4BD,EAAK/C,KAAOsG,EAAQtG,KAE7DwG,EAAS9E,EAAQoB,QAClBC,GAASA,EAAKiD,WAAaO,EAAc,GAAGb,gBAE/CT,EAAWsB,GACXzB,EAAW0B,EAAO,OA+HhB5J,EAAAA,EAAAA,KAAA,OACEF,UAAU,kCACViE,MAAO,CACL8F,OAAQ,mBACRC,UAAW,QACXrI,OAAQ,OACRsI,UAAW,UACXhK,SAED+E,EAAQjD,KAAI,CAACmI,EAAGC,KACf,IAAIC,EAAS,GAyBb,OAxB8B,IAA3BzC,EAAgBT,QAAclC,EAAQjD,KAAKsE,GAAQsB,EAAgB0C,KAAK,KAAO5C,EAAU4C,MAAK,KAC7FtC,EACkB,QAAhBlC,EAAuBuE,EAAS9B,EACX,cAAhBzC,EACPuE,EAAS5B,EAAUpC,QAChBC,GAASA,EAAK2C,gBAAkBkB,EAAEZ,WAEd,kBAAhBzD,EACPuE,EAAS1B,EAAatC,QACnBC,GAASA,EAAK2C,gBAAkBkB,EAAEZ,WAEd,UAAhBzD,IACPuE,EAASjC,EAAS/B,QACfC,GACsB,WAArBA,EAAKC,aACLD,EAAK2C,gBAAkBkB,EAAEZ,YAG/Bc,EAASjC,EAAS/B,QACfC,GACsB,WAArBA,EAAKC,aACLD,EAAK2C,gBAAkBkB,EAAEZ,YAI7BpJ,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRtK,UAAU,8BACVuK,iBAAiB,IAAGtK,UAEpBF,EAAAA,EAAAA,MAACuK,EAAAA,EAAUE,KAAI,CACbxK,UAAU,iBAEVyK,SAAQ,QAAUxK,SAAA,EAElBF,EAAAA,EAAAA,MAACuK,EAAAA,EAAUI,OAAM,CAAC1K,UAAU,8BAA6BC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OACEF,UAAU,gDACViE,MAAO,CAAEyC,YAAa,QAASzG,UAE/BC,EAAAA,EAAAA,KAAA,SACEqE,KAAK,WACLvE,UAAU,mBACVsD,GAAE,iBAAA/B,OAAmB4I,GACrBQ,SAAUA,IA5KNC,EAACtH,EAAG0B,EAAQsD,EAASrG,KACzC,IAAI4I,EAAgB,IAAIlD,GACnBF,EAAUxF,IAGb4I,EAAc5I,GAAS,GACvB2F,EAAmBiD,IAHnBvC,EAAQvG,KAAKsE,GAAQwE,EAAc5I,GAAOoI,KAAKhE,EAAK/C,MAKtDsB,QAAQC,IAAIgG,EAAc,EAoKID,CAAgBV,EAAE5G,GAAI0B,EAAQoF,EAAQD,GACpD9J,QAASA,IAAIsI,EAAawB,GAC1B5H,QAASkF,EAAU0C,GACnBW,UAAQ,MAGXZ,EAAEZ,YAEc,IAAlBc,EAAOlD,QACNhH,EAAAA,EAAAA,KAACoK,EAAAA,EAAUS,KAAI,CAAC/K,UAAU,gCAA+BC,SAAC,oBAI1DmK,EAAOrI,KAAI,CAACsE,EAAMpE,KAEd/B,EAAAA,EAAAA,KAACoK,EAAAA,EAAUS,KAAI,CACb/K,UAAU,iBACVyK,SAAQ,GAAAlJ,OAAK4I,GAAIlK,UAEjBF,EAAAA,EAAAA,MAAA,OAEEM,QAASA,KACPyH,EAAgBD,EAAatG,OAAO8E,EAAK/C,IAAI,EAE/CtD,UAAS,2EAA6EC,SAAA,EAEtFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sDAAqDC,UAClEC,EAAAA,EAAAA,KAAA,SACEqE,KAAK,WACLvE,UAAU,mBACV2K,SAAUA,IAxLXK,EAAC1H,EAAIsF,KAC5B,MAAMqC,EAAiB,IAAItD,GAC3B,GAAIsD,EAAerC,GAAKsC,SAAS5H,GAAK,CAClC,MAAMrB,EAAQgJ,EAAerC,GAAKM,QAAQ5F,GAC1C2H,EAAerC,GAAKuC,OAAOlJ,EAAO,GACA,IAA/BgJ,EAAerC,GAAK1B,QACrByB,EAAaC,EAEnB,MACIqC,EAAerC,GAAKyB,KAAK/G,GACS,IAA/B2H,EAAerC,GAAK1B,QACrByB,EAAaC,GAGnBhE,QAAQC,IAAIoG,GACZrD,EAAmBqD,EAAe,EAyKMD,CAAmB3E,EAAK/C,GAAI6G,GAC5C5H,QAASoF,EAAgBwC,GAAGe,SAAS7E,EAAK/C,IAC1CwH,UAAQ,OAGZ/K,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,CACxBoG,EAAKkD,UAAU,IAAElD,EAAKmD,cAhBpBvH,SAhCVkI,IAwDG,OAIlBjK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACrE,UAAU,cAAcsE,QAAQ,iBAAgBrE,SAAC,YAI1D,EAMDmL,EAAuB9I,IAC3B,MAAM+I,EAAU3G,KAAKC,MAAMuB,aAAaC,QAAQ,kBACzCmF,EAAWC,IAAgB9I,EAAAA,EAAAA,UAAS4I,IACpCG,EAAmBC,IAAwBhJ,EAAAA,EAAAA,UAAS,KACpDiJ,EAAaC,IAAkBlJ,EAAAA,EAAAA,UAAS,IA0DzCmJ,GA5CqBN,EAAUlF,QAAQC,GAC5CA,EAAKrB,QAAQ6G,cAAcX,SAASQ,EAAYG,iBA2C7BP,EAAUnE,QAAO,CAACC,EAAK0E,KACpC1E,EAAI0E,EAAI9G,WACXoC,EAAI0E,EAAI9G,SAAW,IAErBoC,EAAI0E,EAAI9G,SAASqF,KAAKyB,GACf1E,IACN,CAAC,IAEJ,OACErH,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAE/BC,EAAAA,EAAAA,KAACsG,EAAAA,wBAAuB,CACtBI,SApEcmF,IACpBnH,QAAQC,IAAI,gBAAiBkH,GAC7BJ,EAAeI,EAAM,EAmEf/L,UAAU,QACVgM,YAAY,yBACZvF,QAAS,CACP9E,OAAQ,OACR+E,YAAa,OACbxC,SAAU,OACVyC,MAAO,aAKbzG,EAAAA,EAAAA,KAAA,OACEF,UAAU,kCACViE,MAAO,CACL8F,OAAQ,mBACRC,UAAW,QACXrI,OAAQ,OACRsI,UAAW,UACXhK,UAGEC,EAAAA,EAAAA,KAAC+L,EAAY,CACXlH,UAAW6G,EACX9G,gCAAiCxC,EAAMiF,+BAI9C,EAGP,EAnjBkBxG,IAAuD,IAAtD,QAAEmL,EAAO,yBAAE3E,EAAwB,UAAE4E,GAAWpL,EACjE,MAAMqL,EAAgB,CACpBjH,KAAM,WACNmD,QAAS,CACP,CAAEnD,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,WAC5D,CAAEF,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,QAC5D,CAAEF,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,YAC5D,CAAEF,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,WAC5D,CAAEF,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,WAC5D,CAAEF,KAAM,UAAWkH,UAAW,qBAAsBhH,OAAQ,WAC5D,CAAEF,KAAM,UAAWkH,UAAW,uBAEhCC,gBAAiB,EACjBC,mBAAoB,EACpBC,YAAa,GAGTC,EAAa,CACjBrH,EACAoC,EACA4D,GAGF,OACElL,EAAAA,EAAAA,KAAAqD,EAAAA,SAAA,CAAAtD,UACEF,EAAAA,EAAAA,MAAA,OACEC,UAAS,+BAAAuB,OACP4K,EAAY,kBAAoB,oBAC/BlM,SAAA,EAEHC,EAAAA,EAAAA,KAAA,UACEG,QAASkH,EACTvH,UAAU,yBAAwBC,SAEhCkM,GAAoCjM,EAAAA,EAAAA,KAACwM,EAAAA,IAAc,KAAvCxM,EAAAA,EAAAA,KAACyM,EAAAA,IAAiB,OAElC5M,EAAAA,EAAAA,MAAC6M,EAAAA,EAAIC,UAAS,CAACtC,iBAAkB2B,EAAQ,GAAG/G,KAAK0G,cAAc5L,SAAA,EAC7DC,EAAAA,EAAAA,KAAC4M,EAAAA,EAAG,CAACC,GAAG,KAAK/M,UAAU,4BAA2BC,SAC/CiM,EAAQnK,KAAI,CAACf,EAAMmJ,KAClB,MAAM6C,EAAOhM,EAAKiM,KAClB,OACE/M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAItC,KAAI,CAACuC,GAAG,KAAI9M,UACfF,EAAAA,EAAAA,MAAC+M,EAAAA,EAAII,KAAI,CAACzC,SAAUzJ,EAAKmE,KAAK0G,cAAc5L,SAAA,EAC1CC,EAAAA,EAAAA,KAAC8M,EAAI,CAAChN,UAAU,aACfgB,EAAKmE,SAHagF,EAKZ,OAIjBjK,EAAAA,EAAAA,KAAC0M,EAAAA,EAAIO,QAAO,CAACnN,UAAU,WAAWiE,MAAO,CAAEmJ,WAAY,WAAYnN,SAChEiM,EAAQnK,KAAI,CAACf,EAAMmJ,KAClB,MAAMkD,EAAYZ,EAAWtC,GAC7B,OACEjK,EAAAA,EAAAA,KAAC0M,EAAAA,EAAIU,KAAI,CAAC7C,SAAUzJ,EAAKmE,KAAK0G,cAAc5L,UAC1CC,EAAAA,EAAAA,KAACmN,EAAS,CAACrM,KAAMoL,EAAe7E,yBAA0BA,KADV4C,EAEvC,aAMpB,E,oCClFP,MAmDA,EAnDuBoD,KACrB,MAAM,gBAAEC,EAAe,mBAAEC,IAAuB5N,EAAAA,EAAAA,YAAWC,EAAAA,IAKpDqM,EAAWuB,IAAgBjL,EAAAA,EAAAA,WAAS,GACrCyJ,EAAU,CACd,CAAE/G,KAAM,SAAU8H,KAAMU,EAAAA,KACxB,CAAExI,KAAM,SAAU8H,KAAMW,EAAAA,KACxB,CAAEzI,KAAM,WAAY8H,KAAMY,EAAAA,MAiB5B,OACE9N,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAAtD,SAAA,EACEC,EAAAA,EAAAA,KAAC4N,EAAAA,EAAa,CACZC,UAAU,mBACVC,UAAW,mBACXC,YAAa,cAEf/N,EAAAA,EAAAA,KAAA,OACEF,UAAS,YAAAuB,OAAc4K,EAAY,SAAW,WAC9C9L,QAASA,IAAMqN,GAAa,MAE9BxN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,KAACgO,EAAAA,EAAO,CAAClN,KArCF,CACX,CAAEkB,IAAK,WAAYC,IAAK,YACxB,CAAED,IAAK,QAASC,IAAK,eAsCjBjC,EAAAA,EAAAA,KAACiO,EAAS,CACRjC,QAASA,EACT3E,yBAhCyBA,KAC/BmG,GAAcvB,EAAU,EAgClBA,UAAWA,MAGd,C","sources":["jsx/components/maps/MapModes.jsx","jsx/components/maps/ShowMap.jsx","jsx/components/Tracking/CompanyItem.jsx","jsx/components/Tracking/DriverTabComponent3.jsx","jsx/components/maps/DriverTab.jsx","jsx/pages/DriverTracking.jsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport '../../../scss/pages/_driver-tracking.scss'\nimport { BiTargetLock } from \"react-icons/bi\";\nimport { MdAddLocation } from \"react-icons/md\";\nimport { IoMapSharp } from \"react-icons/io5\"\nimport { FaTrafficLight } from \"react-icons/fa\";\nimport { FaRoute } from \"react-icons/fa\";\nimport { IoPricetag } from \"react-icons/io5\";\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\nimport { GrCluster } from \"react-icons/gr\";\nimport { IoLocationOutline } from \"react-icons/io5\";\nimport { ThemeContext } from '../../../context/ThemeContext';\n\nconst MapModes = () => {\n  const { isTrafficClick, setIsTrafficClick} = useContext(ThemeContext)\n  const handleTraffic = (e)=>{\n    e.preventDefault()\n    setIsTrafficClick(!isTrafficClick)\n  }\n  return (\n    <div className='panel'>\n        <span className='modes'><IoMapSharp className='modes_icon' /></span>\n        <span className='modes'><GrCluster className='modes_icon' /></span>\n        <span className='modes' onClick={handleTraffic}><FaTrafficLight className='modes_icon' /></span>\n        <span className='modes'><FaRoute className='modes_icon' /></span>\n        <span className='modes'><IoPricetag className='modes_icon' /></span>\n        <span className='modes'><IoLocationOutline className='modes_icon' /></span>\n        <span className='modes'><BsBoxArrowUpRight className='modes_icon' /></span>\n        <span className='modes'><MdAddLocation className='modes_icon' /></span>\n        <span className='modes'><BiTargetLock className='modes_icon' /></span>\n    </div>\n  )\n}\n\nexport default MapModes","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  MarkerF as Marker,\n  TrafficLayer,\n} from \"@react-google-maps/api\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport MapModes from \"./MapModes\";\nimport \"../../../scss/pages/_driver-tracking.scss\"\n\nconst MapContainer = ({ data }) => {\n  const { isTrafficClick, setIsTrafficClick } = useContext(ThemeContext);\n\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: `${apiKey}`,\n  });\n\n  return (\n    <div className=\"vehicle_tracking\">\n      <MapModes />\n      {!isLoaded ? (\n        <h3> Loading....</h3>\n      ) : (\n        <GoogleMap\n          mapContainerStyle={{ width: \"100%\", height: \"80vh\" }}\n          center={data[0]}\n          zoom={13}\n        >\n          {!isTrafficClick ? (\n            data?.map(({ lat, lng }, index) => {\n              return <Marker key={index} position={{ lat, lng }} />;\n            })\n          ) : (\n            <TrafficLayer />\n          )}\n        </GoogleMap>\n      )}\n\n      \n    </div>\n  );\n};\n\nexport default MapContainer;\n","import React, { useEffect, useState } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nconst CompanyItem = (props) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n  useEffect(() => {\n    const data = Object.entries(props.vehicles).map((data) => {\n      const childNode = data[1].map((data) => {\n        return { label: data.vehicleName, value: data.id };\n      });\n\n      return { value: data[0], label: data[0], children: childNode };\n    });\n    setNodes([...data]);\n  }, [props.vehicles]);\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject)\n    props.handleToggleCardPositionHandler();\n  };\n  return (\n    <>\n    <div className=\"checkboxTree\">\n      <CheckboxTree\n        nodes={nodes}\n        checked={checked}\n        expanded={expanded}\n        onCheck={handleCheck}\n        onExpand={handleExpand}\n        showNodeIcon={false}\n        icons={{\n          expandOpen: <i class=\"fa-solid fa-minus\"></i>,\n          expandClose: <i class=\"fa-solid fa-plus\"></i>,\n          uncheck: (\n            <i\n              class=\"fa-regular fa-square\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          check: (\n            <i\n              class=\"fa-solid fa-square-check\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n          halfCheck: (\n            <i\n              class=\"fa-regular fa-square-minus\"\n              style={{\n                fontSize: \"16px\",\n              }}\n            ></i>\n          ),\n        }}\n      />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default CompanyItem;\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nconst GeoFenceItem = ({ geoFences, handleToggleCardPositionHandler }) => {\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodes, setNodes] = useState([]);\n\n\nuseEffect(() => {\n    const data = Object.entries(geoFences).map(([company, fences]) => {\n      const childNodes = fences.map(fence => ({\n        label: fence.name,\n        value: fence.id\n      }));\n      return { value: company, label: company, children: childNodes };\n    });\n    setNodes(data);\n  }, [geoFences]);\n\n  const handleCheck = (checked) => {\n    setChecked(checked);\n  };\n\n  const handleExpand = (expanded) => {\n    setExpanded(expanded);\n  };\n\n  const handleSubmit = () => {\n    const selectedObject = checked.map((data) => JSON.parse(data));\n    console.log(selectedObject);\n    handleToggleCardPositionHandler();\n  };\n\n  return (\n    <>\n      <div className=\"checkboxTree\">\n        <CheckboxTree\n          nodes={nodes}\n          checked={checked}\n          expanded={expanded}\n          onCheck={handleCheck}\n          onExpand={handleExpand}\n          showNodeIcon={false}\n          icons={{\n            expandOpen: <i className=\"fa-solid fa-minus\"></i>,\n            expandClose: <i className=\"fa-solid fa-plus\"></i>,\n            uncheck: (\n              <i\n                className=\"fa-regular fa-square\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            check: (\n              <i\n                className=\"fa-solid fa-square-check\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n            halfCheck: (\n              <i\n                className=\"fa-regular fa-square-minus\"\n                style={{\n                  fontSize: \"16px\",\n                }}\n              ></i>\n            ),\n          }}\n        />\n      </div>\n      <div className=\"text-center  pt-2 \">\n        <Button\n          className=\" mb-5\"\n          variant=\"primary btn-md \"\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Save Selection\n        </Button>\n      </div>\n    </>\n  );\n};\nexport default GeoFenceItem;","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Nav, Tab } from \"react-bootstrap\";\nimport \"../../../scss/pages/_driver-tracking.scss\";\nimport {\n  FaSearch,\n  FaFilter,\n  FaSortAlphaDown,\n  FaCircle,\n  FaWifi,\n  FaBatteryFull,\n  FaEdit,\n  FaTrashAlt,\n  FaLocationArrow,\n} from \"react-icons/fa\";\nimport { GrUserPolice } from \"react-icons/gr\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\nimport { MdFence, MdDelete, MdAddLocationAlt } from \"react-icons/md\";\nimport { IoIosNavigate } from \"react-icons/io\";\nimport { IoIosArrowForward, IoIosArrowBack } from \"react-icons/io\";\nimport { useNavigate  } from 'react-router-dom'\nimport DeleteModal from \"../Modal/DeleteModal\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { companyOptions } from \"../TabComponent/VehicleTabs/Options\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport CompanyItem from \"../Tracking/CompanyItem\";\nimport { getVehicles, statusData } from \"../../../utils/selectValues\";\nimport CheckboxTree from 'react-checkbox-tree'\nimport DriverCompanyItem from \"../Tracking/DriverTabComponent3\";\nimport GeoFenceItem from \"../Tracking/DriverTabComponent3\";\nconst DriverTab = ({ tabData, handleToggleCardPosition, isOutside }) => {\n  const componentData = {\n    name: \"Company1\",\n    drivers: [\n      { name: \"driver1\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver2\", timeStamp: \"22-02-2024 3:00 PM\", status: \"idle\" },\n      { name: \"driver3\", timeStamp: \"22-02-2024 3:00 PM\", status: \"inactive\" },\n      { name: \"driver4\", timeStamp: \"22-02-2024 3:00 PM\", status: \"running\" },\n      { name: \"driver5\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver6\", timeStamp: \"22-02-2024 3:00 PM\", status: \"stopped\" },\n      { name: \"driver7\", timeStamp: \"22-02-2024 3:00 PM\" },\n    ],\n    allocatedDriver: 4,\n    notAllocatedDriver: 3,\n    totalDriver: 7,\n  };\n\n  const components = [\n    DriverTabComponent1,\n    DriverTabComponent2,\n    DriverTabComponent3,\n  ];\n\n  return (\n    <>\n      <div\n        className={`default-tab outer-container ${\n          isOutside ? \"toggleBarInside\" : \"toggleBarOutside\"\n        }`}\n      >\n        <button\n          onClick={handleToggleCardPosition}\n          className=\"driver_tracking_button\"\n        >\n          {!isOutside ? <IoIosArrowForward /> : <IoIosArrowBack />}\n        </button>\n        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n          <Nav as=\"ul\" className=\"nav-tabs tracking_navTabs\">\n            {tabData.map((data, i) => {\n              const Icon = data.icon;\n              return (\n                <Nav.Item as=\"li\" key={i}>\n                  <Nav.Link eventKey={data.name.toLowerCase()}>\n                    <Icon className=\"tab-icon\" />\n                    {data.name}\n                  </Nav.Link>\n                </Nav.Item>\n              );\n            })}\n          </Nav>\n          <Tab.Content className=\"p-2 py-4\" style={{ background: \"#f5f5f5\" }}>\n            {tabData.map((data, i) => {\n              const Component = components[i];\n              return (\n                <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                  <Component data={componentData} handleToggleCardPosition={handleToggleCardPosition} />\n                </Tab.Pane>\n              );\n            })}\n          </Tab.Content>\n        </Tab.Container>\n      </div>\n    </>\n  );\n};\n\n\nconst DriverTabComponent1 = (props) => {\n  const status = statusData();\n  const { Running, Idle, Stopped, Inactive, nodata, total } = status;\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    const data = getVehicles(selectValue);\n    setVehicles(data);\n  }, [selectValue]);\n  const items = JSON.parse(localStorage.getItem(\"userJsonData\"))\n    .filter((item) => item.designation === \"vehicle\")\n    .map((data) => ({\n      id: data.id,\n      name: data.vehicleName,\n    }));\n  const handleSearch = (item) => {\n    const vehicleData = getVehicles(selectValue);\n    console.log(vehicleData)\n    const filteredData = Object.entries(vehicleData).filter((vehicle) => {\n      const vec = vehicle[1].filter((data) => data.id == item.id);\n      return vec.length > 0;\n    });\n    const convertedData = filteredData.reduce((acc, [company, dataArray]) => {\n      dataArray.map((data) => {\n        if (data.vehicleName === item.name) {\n          acc[company] = [data];\n        }\n      });\n      return acc;\n    }, {});\n    setVehicles(convertedData);\n  };\n  return (\n    <>\n      <div className=\"vehicle_tracking-object\">\n        <span\n          className={`light fs-9 ${\n            selectValue === \"Running\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Running\")}\n        >\n          <p>{Running}</p>\n          <span>Running</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Idle\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Idle\")}\n        >\n          <p>{Idle}</p>\n          <span>Idle</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Stopped\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Stopped\")}\n        >\n          <p>{Stopped}</p>\n          <span>Stopped</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Inactive\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"Inactive\")}\n        >\n          <p>{Inactive}</p>\n          <span>InActive</span>\n        </span>\n        <span\n          pill\n          className={`light fs-9 ${\n            selectValue === \"NoData\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"NoData\")}\n        >\n          <p>{nodata}</p>\n          <span>NoData</span>\n        </span>\n        <span\n          className={`light fs-9 ${\n            selectValue === \"All\" && \"vehicle_tracking-active\"\n          }`}\n          onClick={() => setSelectValue(\"All\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize : \"12px\",\n            color :\"#4A4646\"\n          }}\n          onSearch={(string) => {\n            if (string === \"\") {\n              const data = getVehicles(selectValue);\n              setVehicles(data);\n            }\n          }}\n          onSelect={handleSearch}\n        />\n      </div>\n      {<CompanyItem vehicles={vehicles} handleToggleCardPositionHandler={props.handleToggleCardPosition} />}\n    </>\n  );\n};\n\nconst DriverTabComponent2 = (props) => {\n  const [selectValue, setSelectValue] = useState(\"All\");\n  const [selectAll, setSelectAll] = useState([]);\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\n  const [selectDriver, setSelectDriver] = useState([]);\n  const [filterApplied, setFilterApplied] = useState(false);\n  const [isDisable, setIsDisable] = useState(false);\n  const jsonData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n  const [company, setCompany] = useState(\n    jsonData.filter((item) => item.role === \"company\")\n  );\n  const [drivers, setDrivers] = useState(\n    jsonData.filter((item) => item.designation === \"Driver\")\n  );\n  const allocated = drivers.filter(\n    (item) => item.activityStatus === \"Allocated\"\n  );\n  const notAllocated = drivers.filter(\n    (item) => item.activityStatus === \"Not Allocated\"\n  );\n  const total = drivers.length;\n  const handleOnSelect = (results) => {\n    setSelectValue(\"All\");\n    setFilterApplied(true);\n    setIsDisable(true);\n    var companyDriver = jsonData.filter(\n      (item) => item.designation === \"Driver\" && item.id === results.id\n    );\n    var search = company.filter(\n      (item) => item.userName === companyDriver[0].parentCompany\n    );\n    setDrivers(companyDriver);\n    setCompany(search);\n  };\n  const handleOnSearch = (string, results) => {\n    setSelectValue(\"All\");\n    setIsDisable(false);\n    setFilterApplied(false);\n    setDrivers(jsonData.filter((item) => item.designation === \"Driver\"));\n    setCompany(jsonData.filter((item) => item.role === \"company\"));\n  };\n  const handleSelectAll = (id,company,drivers, index) => {\n      var checkboxArray = [...selectedDrivers]\n      if (!selectAll[index]) {\n        drivers.map((item)=> checkboxArray[index].push(item.id) )\n      } else {\n        checkboxArray[index] = []\n        setSelectedDrivers(checkboxArray);\n      }\n      console.log(checkboxArray)\n  };\n  const handleSelect = (ind)=>{\n    console.log(selectAll)\n    setSelectAll(prev => {\n      const newArr = [...prev];\n      newArr[ind] = !newArr[ind]\n      return newArr\n    })\n  }\n  const handleDriverSelect = (id, ind) => {\n      const updatedDrivers = [...selectedDrivers];\n      if (updatedDrivers[ind].includes(id)) {\n          const index = updatedDrivers[ind].indexOf(id);\n          updatedDrivers[ind].splice(index, 1);\n          if(updatedDrivers[ind].length === 2){\n            handleSelect(ind)\n          }\n      } else {\n          updatedDrivers[ind].push(id);\n          if(updatedDrivers[ind].length === 3){\n            handleSelect(ind)\n          }\n      }\n      console.log(updatedDrivers)\n      setSelectedDrivers(updatedDrivers);\n  };\n  useEffect(() => {\n    if (selectValue !== \"All\") {\n      setCompany(jsonData.filter((item) => item.role === \"company\"));\n      setFilterApplied(true);\n      if (selectValue === \"Allocated\") {\n        const companyName = allocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n      if (selectValue === \"Not Allocated\") {\n        const companyName = notAllocated\n          .map((item) => item.parentCompany)\n          .filter((value, index, array) => array.indexOf(value) === index);\n        setCompany(\n          company.filter((item1) =>\n            companyName.some((item2) => item2 === item1.userName)\n          )\n        );\n      }\n    } else setFilterApplied(false);\n  }, [selectValue]);\n  const items = jsonData\n    .filter((item) => item.designation === \"Driver\")\n    .map((item) => {\n      return { id: item.id, name: item.firstName + \" \" + item.lastName };\n    });\n  return (\n    <>\n      <div className=\"px-2 driver_tracking-object\">\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Allocated\")}\n        >\n          <p>{allocated.length}</p>\n          <span>Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Not Allocated\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Not Allocated\")}\n        >\n          <p>{notAllocated.length}</p>\n          <span>Not Allocated</span>\n        </span>\n        <span\n          bg=\"\"\n          pill\n          className={`light fs-9 ${\n            selectValue === \"Total\"\n              ? \"vehicle_tracking-active\"\n              : isDisable && \"pe-none\"\n          }`}\n          onClick={() => setSelectValue(\"Total\")}\n        >\n          <p>{total}</p>\n          <span>Total</span>\n        </span>\n      </div>\n      <div className=\"d-flex mt-4 mb-4\">\n        <ReactSearchAutocomplete\n          items={items}\n          className=\"w-100\"\n          styling={{ position: \"absolute\", zIndex: 999 }}\n          onSearch={handleOnSearch}\n          onSelect={handleOnSelect}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column bg-white p-2\"\n        style={{\n          border: \" 1px solid white\",\n          marginTop: \".5rem\",\n          height: \"65vh\",\n          overflowY: \"scroll\",\n        }}\n      >\n        {company.map((d, i) => {\n          var driver = [];\n          if(selectedDrivers.length === 0) company.map((item)=> selectedDrivers.push([]) && selectAll.push(false) )\n          if (filterApplied) {\n            if (selectValue === \"All\") driver = drivers;\n            else if (selectValue === \"Allocated\")\n              driver = allocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Not Allocated\")\n              driver = notAllocated.filter(\n                (item) => item.parentCompany === d.userName\n              );\n            else if (selectValue === \"Total\")\n              driver = jsonData.filter(\n                (item) =>\n                  item.designation === \"Driver\" &&\n                  item.parentCompany === d.userName\n              );\n          } else {\n            driver = jsonData.filter(\n              (item) =>\n                item.designation === \"Driver\" &&\n                item.parentCompany === d.userName\n            );\n          }\n          return (\n            <Accordion\n              className=\"accordion accordion-primary\"\n              defaultActiveKey=\"0\"\n            >\n              <Accordion.Item\n                className=\"accordion-item\"\n                key={i}\n                eventKey={`$/{i}`}\n              >\n                <Accordion.Header className=\"accordian-header rounded-sm\">\n                  <div\n                    className=\"form-check custom-checkbox bs_exam_topper_all\"\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      id={`customCheckBox${i}`}\n                      onChange={()=>handleSelectAll(d.id, company,driver, i)}\n                      onClick={()=>handleSelect(i)}\n                      checked={selectAll[i]}\n                      required\n                    />\n                  </div>\n                  {d.userName}\n                </Accordion.Header>\n                {driver.length === 0 ? (\n                  <Accordion.Body className=\"p-2 text-center fs-4 heading \">\n                    No Record Found\n                  </Accordion.Body>\n                ) : (\n                  driver.map((item, index) => {\n                    return (\n                      <Accordion.Body\n                        className=\"accordian-body\"\n                        eventKey={`${i}`}\n                      >\n                        <div\n                          key={index}\n                          onClick={() => {\n                            setSelectDriver(selectDriver.concat(item.id));\n                          }}\n                          className={`d-flex align-items-center border-bottom heading driver-select-object p-2`}\n                        >\n                          <div className=\"form-check custom-checkbox ms-3 me-3 bs_exam_topper\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"form-check-input\"\n                              onChange={() => handleDriverSelect(item.id, i)}\n                              checked={selectedDrivers[i].includes(item.id)}\n                              required\n                            />\n                          </div>\n                          <span className=\"fs-4 ms-2\">\n                            {item.firstName} {item.lastName}\n                          </span>\n                        </div>\n                      </Accordion.Body>\n                    );\n                  })\n                )}\n              </Accordion.Item>\n            </Accordion>\n          );\n        })}\n      </div>\n      <div className=\"mt-3 text-center\">\n        <Button className=\"w-25 btn-md\" variant=\"primary btn-md\">\n          XLS\n        </Button>\n      </div>\n    </>\n  );\n};\n\n\n\nconst DriverTabComponent3 = (props) => {\n  const geoData = JSON.parse(localStorage.getItem(\"geofenceData\"));\n  const [tableData, setTableData] = useState(geoData);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Function to handle search\n  const handleSearch = (query) => {\n    console.log(\"Search Query:\", query);\n    setSearchQuery(query);\n  };\n\n  // Function to reset search\n  const resetSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n   // Filter tableData based on searchQuery\n   const filteredTableData = tableData.filter((item) =>\n   item.company.toLowerCase().includes(searchQuery.toLowerCase())\n );\n  const onConfirmDelete = (id) => {\n    const updatedData = tableData.filter((item) => item.id !== id);\n    setTableData(updatedData);\n\n    const updatedLocalStorageData = geoData.filter((item) => item.id !== id);\n    localStorage.setItem(\"geofenceData\", JSON.stringify(updatedLocalStorageData));\n  };\n\n  const editDrawerOpen = (d) => {\n    // navigate(`/geofence/map/edit/${d.id}`);\n  };\n\n  const toggleAllData = (company) => {\n    let newSelectedCompanies;\n    if (selectedCompanies.includes(company)) {\n      newSelectedCompanies = selectedCompanies.filter((c) => c !== company);\n    } else {\n      newSelectedCompanies = [...selectedCompanies, company];\n    }\n    setSelectedCompanies(newSelectedCompanies);\n\n    const updatedData = tableData.map((item) => {\n      if (item.company === company) {\n        return { ...item, selected: !selectedCompanies.includes(company) };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  const toggleSingleData = (id) => {\n    const updatedData = tableData.map((item) => {\n      if (item.id === id) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    setTableData(updatedData);\n  };\n\n  // Group tableData by company name\n  const groupedData = tableData.reduce((acc, cur) => {\n    if (!acc[cur.company]) {\n      acc[cur.company] = [];\n    }\n    acc[cur.company].push(cur);\n    return acc;\n  }, {});\n\n  return (\n    <>\n      <div className=\"d-flex mt-4 mb-4\">\n     \n        <ReactSearchAutocomplete\n          onSearch={handleSearch}\n          className=\"w-100\"\n          placeholder=\"Search by company name\"\n          styling={{\n            height: \"30px\",\n            marginRight: \"10px\",\n            fontSize: \"12px\",\n            color: \"#red\",\n          }}\n          // onSelect={handleSearch}\n        />\n      </div>\n      <div\n        className=\"d-flex flex-column bg-white p-2\"\n        style={{\n          border: \" 1px solid white\",\n          marginTop: \".5rem\",\n          height: \"65vh\",\n          overflowY: \"scroll\",\n        }}\n      >\n      \n            <GeoFenceItem\n              geoFences={groupedData}\n              handleToggleCardPositionHandler={props.handleToggleCardPosition}\n            />\n        \n      </div>\n    </>\n  );\n};\nexport default DriverTab;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport ShowMap from \"../components/maps/ShowMap\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport DriverTab from \"../components/maps/DriverTab\";\nimport { TbLocationFilled } from \"react-icons/tb\";\nimport { FaUser } from \"react-icons/fa\";\nimport { FaMapLocationDot } from \"react-icons/fa6\";\nimport { MdFence } from \"react-icons/md\";\nimport \"../../scss/pages/_driver-tracking.scss\";\nconst DriverTracking = () => {\n  const { currentPosition, setCurrentPosition } = useContext(ThemeContext);\n  const data = [\n    { lat: 30.7099475, lng: 76.6900474 },\n    { lat: 30.7333, lng: 76.7794 },\n  ];\n  const [isOutside, setIsOutside] = useState(true);\n  const tabData = [\n    { name: \"Object\", icon: TbLocationFilled },\n    { name: \"Driver\", icon: FaUser },\n    { name: \"Geofence\", icon: MdFence },\n  ];\n  const handleToggleCardPosition = () => {\n    setIsOutside(!isOutside);\n  };\n  // const getCurrentPosition = () => {\n  //   navigator.geolocation.getCurrentPosition((position) => {\n  //     setCurrentPosition({\n  //       lat: position.coords.latitude,\n  //       lng: position.coords.longitude\n  //     });\n  //   });\n  // };\n  // const [locationData, setLocationData] = useState([{lat:30.7099475,lng:76.6900474}])\n  // useEffect(() => {\n  //   getCurrentPosition()\n  // }, []);\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Vehicle Tracking\"\n        pageTitle={\"Vehicle Tracking\"}\n        parentTitle={\"Tracking\"}\n      />\n      <div\n        className={`backdrop ${isOutside ? \"d-none\" : \"d-block\"}`}\n        onClick={() => setIsOutside(true)}\n      />\n      <div className=\"p-2\" >\n        <ShowMap data={data} />\n      </div>\n      {/* <div style={{zIndex : 20}}> */}\n        <DriverTab\n          tabData={tabData}\n          handleToggleCardPosition={handleToggleCardPosition}\n          isOutside={isOutside}\n        />\n      {/* </div> */}\n    </>\n  );\n};\nexport default DriverTracking;"],"names":["MapModes","isTrafficClick","setIsTrafficClick","useContext","ThemeContext","_jsxs","className","children","_jsx","IoMapSharp","GrCluster","onClick","e","preventDefault","FaTrafficLight","FaRoute","IoPricetag","IoLocationOutline","BsBoxArrowUpRight","MdAddLocation","BiTargetLock","_ref","data","apiKey","process","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","useLoadScript","googleMapsApiKey","concat","GoogleMap","mapContainerStyle","width","height","center","zoom","TrafficLayer","map","_ref2","index","lat","lng","Marker","position","props","checked","setChecked","useState","expanded","setExpanded","nodes","setNodes","useEffect","Object","entries","vehicles","childNode","label","vehicleName","value","id","_Fragment","CheckboxTree","onCheck","onExpand","showNodeIcon","icons","expandOpen","class","expandClose","uncheck","style","fontSize","check","halfCheck","Button","variant","type","handleSubmit","selectedObject","JSON","parse","console","log","handleToggleCardPositionHandler","geoFences","company","fences","fence","name","DriverTabComponent1","status","statusData","Running","Idle","Stopped","Inactive","nodata","total","selectValue","setSelectValue","setVehicles","getVehicles","items","localStorage","getItem","filter","item","designation","pill","ReactSearchAutocomplete","styling","marginRight","color","onSearch","string","onSelect","vehicleData","convertedData","vehicle","length","reduce","acc","dataArray","CompanyItem","handleToggleCardPosition","DriverTabComponent2","selectAll","setSelectAll","selectedDrivers","setSelectedDrivers","selectDriver","setSelectDriver","filterApplied","setFilterApplied","isDisable","setIsDisable","jsonData","setCompany","role","drivers","setDrivers","allocated","activityStatus","notAllocated","handleSelect","ind","prev","newArr","companyName","parentCompany","array","indexOf","item1","some","item2","userName","firstName","lastName","bg","zIndex","handleOnSearch","results","companyDriver","search","border","marginTop","overflowY","d","i","driver","push","Accordion","defaultActiveKey","Item","eventKey","Header","onChange","handleSelectAll","checkboxArray","required","Body","handleDriverSelect","updatedDrivers","includes","splice","DriverTabComponent3","geoData","tableData","setTableData","selectedCompanies","setSelectedCompanies","searchQuery","setSearchQuery","groupedData","toLowerCase","cur","query","placeholder","GeoFenceItem","tabData","isOutside","componentData","timeStamp","allocatedDriver","notAllocatedDriver","totalDriver","components","IoIosArrowBack","IoIosArrowForward","Tab","Container","Nav","as","Icon","icon","Link","Content","background","Component","Pane","DriverTracking","currentPosition","setCurrentPosition","setIsOutside","TbLocationFilled","FaUser","MdFence","MainPagetitle","mainTitle","pageTitle","parentTitle","ShowMap","DriverTab"],"sourceRoot":""}