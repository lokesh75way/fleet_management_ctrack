{"version":3,"file":"static/js/2799.974bcf23.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx","services/api/TemplateServices.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport \"../../../../scss/pages/_driver-tracking.scss\";\nimport DummyData from \"../../../../users.json\";\nimport { getSelectValues } from \"../../../../utils/helper\";\nimport { getTemplates } from \"../../../../services/api/TemplateServices\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError } from \"../../../../utils/toast\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { getGroups } from \"../../../../services/api/BusinessGroup\";\nimport { getCompany } from \"../../../../services/api/CompanyServices\";\nimport { getAllBranch } from \"../../../../services/api/BranchServices\";\nimport BranchDropdown from \"../../BranchDropdown\";\nimport CompanyDropdown from \"../../CompanyDropdown\";\nimport GroupDropdown from \"../../GroupDropdown\";\nimport ParentBranchDropdown from \"../../ParentBranch\";\n\nconst Account = ({\n  handleNext,\n  register,\n  setValue,\n  onSubmit,\n  handleSubmit,\n  getValues,\n  errors,\n  control,\n  formData,\n}) => {\n  console.log({formData});\n  const [selectStateName, setSelectStateName] = useState(\"\");\n  const [defaultCountry,setDefaultCountry] = useState();\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [allGroups, setAllGroups] = useState([]);\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [allBranches, setAllBranches] = useState([]);\n  const { checkRole, checkUser } = useStorage();\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n  const [TemplateOptions, setTemplateOptions] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEdit, setIsEdit] = useState(false);\n  const [groupId, setGroupId] = useState(null);\n  const [companyId, setCompanyId] = useState(null);\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const { t } = useTranslation();\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  async function onGroupChange(groupId) {\n    console.log(\"groupId\", groupId);\n    console.log(\"allCompanies\", allCompanies);\n    const companies = allCompanies\n      .filter((item) => item?.companyId?.businessGroupId?._id == groupId)\n      .map((item) => ({\n        value: item?.companyId?._id,\n        label: item?.companyId?.companyName,\n      }));\n    setCompanyOptions(companies);\n    setValue(\"parentCompany\", \"\");\n    setBranchOptions([]);\n  }\n\n  async function onCompanyChange(companyId) {\n    const branches = allBranches\n      .filter((item) => item?.companyId?._id == companyId)\n      .map((item) => ({ value: item?._id, label: item?.branchName }));\n    setBranchOptions(branches);\n  }\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getGroups();\n      const companyResponse = await getCompany();\n      const branchResponse = await getAllBranch();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const groups = response.data;\n        setAllGroups(groups);\n        const groupOptions = groups.map((item) => ({\n          label: item?.businessGroupId?.groupName,\n          value: item?.businessGroupId?._id,\n        }));\n        setBusinessUserOptions(groupOptions);\n      }\n      if (companyResponse.error) {\n        notifyError(companyResponse.error);\n      } else {\n        const companies = companyResponse.data.data.data;\n        const companyOptions = companies.map((item) => ({\n          label: item.companyId?.companyName,\n          value: item.companyId?._id,\n        }));\n        setAllCompanies(companies);\n        // setCompanyOptions(companyOptions);\n      }\n      if (branchResponse.error) {\n        notifyError(branchResponse.error);\n      } else {\n        const branches = branchResponse.data.data;\n        const branchOptions = branches.map((item) => ({\n          label: item.branchName,\n          value: item._id,\n        }));\n        setAllBranches(branches);\n        setParentOptions(branchOptions);\n        // setBranchOptions(branchOptions);\n      }\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    fetchOptions();\n  }, []);\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      const response = await getTemplates();\n      if (response.error) {\n        notifyError(response.error);\n      } else {\n        const templates = response.data.data;\n        const tempOptions = templates.map((item) => ({\n          label: item.name,\n          value: item._id,\n        }));\n        setTemplateOptions(tempOptions);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  const role = checkRole();\n  const { id } = useParams();\n  // const User = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  const loggedinemail = localStorage.getItem(\"loginDetails-name\");\n  let defaultCompanyOptions;\n\n  if (role === \"SUPER_ADMIN\") {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\"\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  } else {\n    defaultCompanyOptions = DummyData.filter(\n      (item) => item.role === \"company\" && item.parent === loggedinemail\n    ).map((item) => ({\n      label: item.userName,\n      value: item._id,\n    }));\n  }\n\n\n  const [filteredUserData, setFilteredUserData] = useState([]);\n  const [businessUserOptions, setBusinessUserOptions] = useState([]);\n  const [companyOptions, setCompanyOptions] = useState([]);\n  const [branchOptions, setBranchOptions] = useState([]);\n  const [parentOptions, setParentOptions] = useState([]);\n  const [vehiclesOptions, setVehiclesOptions] = useState([]);\n  const [businessUserValue, setBusinessUserValue] = useState();\n  const [companyValue, setCompanyValue] = useState([]);\n  const [parentValue, setParentValue] = useState();\n  const [businessDisabled, setBusinessDisabled] = useState(false);\n  const [companyDisabled, setCompanyDisabled] = useState(false);\n\n\n  const [filteredCompanyData, setFilteredCompanyData] = useState([]);\n  useEffect(() => {\n    if (userDetails.user.role === \"COMPANY\") {\n      setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setValue(\"businessUser\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId);\n      setBusinessDisabled(true);\n\n      setValue(\"parentCompany\", userDetails?.user.companyId);\n      setCompanyId(userDetails?.user.companyId);\n      setCompanyDisabled(true);\n      console.log(\"parentCompany\", userDetails?.user.businessGroupId);\n    }\n    if (userDetails.user.role === \"BUSINESS_GROUP\") {\n      // setValue(\"businessGroupId\", userDetails?.user.businessGroupId);\n      setGroupId(userDetails?.user.businessGroupId?._id);\n      setValue(\"businessUser\", userDetails?.user?.businessGroupId[0]?._id);\n      console.log(userDetails.user.businessGroupId[0]._id, \"dsggsgs\");\n      setBusinessDisabled(true);\n    }\n  }, []);\n\n  useEffect(()=>{\n    if(formData && id){\n      setValue(\"businessUser\",formData?.[0]?.businessGroupId)\n      setValue(\"companyId\",formData?.[0]?.companyId)\n      setValue(\"branchIds\",formData?.[0]?.branchIds[0]?._id)\n      setValue(\"email\",formData?.[0]?.email)\n      setValue(\"userName\",formData?.[0]?.userName)\n      setValue(\"mobileNumber\",formData?.[0]?.mobileNumber)\n      setValue(\"country\",formData[0].country)\n      setDefaultCountry({ name:formData[0].country })\n      setValue(\"state\",formData[0].state || '' )\n      setSelectStateName({name : formData[0].state || ''})    \n      setValue(\"featureTemplateId\",formData?.[0]?.featureTemplateId)\n    }\n  },[formData,id])\n\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <Controller\n            name=\"businessUser\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                key={groupId}\n                onChange={async (newValue) => {\n                  setValue(\"businessUser\", newValue.value);\n                  setGroupId(newValue.value);\n                  setCompanyId(null);\n                }}\n                value={value}\n                customStyles={customStyles}\n                ref={ref}\n                isDisabled={businessDisabled}\n                name={name}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"company\")}</label>\n\n          <Controller\n            name=\"parentCompany\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                onChange={async (newValue) => {\n                  setValue(\"parentCompany\", newValue.value);\n                  setCompanyId(newValue.value);\n                }}\n                key={groupId}\n                groupId={groupId}\n                value={value}\n                customStyles={customStyles}\n                name={name}\n                ref={ref}\n                isDisabled={companyDisabled}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">{t(\"branch\")}</label>\n          <Controller\n            name=\"Branch\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <ParentBranchDropdown\n              key={companyId}\n              companyId={companyId}\n              onChange={(newValue) => {\n                setValue(\"Branch\", newValue.value);\n                setValue(\"branchIds\", newValue.value);\n              }\n              }\n              value={value}\n              customStyles={customStyles}\n              ref={ref}\n              isDisabled={!companyId}\n              name={name}\n            />\n            )}\n          />\n          {!getValues(\"Branch\") && <Error errorName={errors.parent} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            {t(\"email\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : \"\"}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"username\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].userName : \"\"\n            }\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"mobileNumber\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            min=\"0\"\n            onInput={(e) => {\n              const temp = Math.max(0, e.target.value);\n              e.target.value = temp < 1 ? \"\" : temp;\n            }}\n            placeholder=\"\"\n            defaultValue={\n              filteredUserData[0] ? filteredUserData[0].mobileNumber : \"\"\n            }\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            {t(\"country\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setSelectStateName({ name: \"\" });\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n            // value={getValues(\"country\")}\n            defaultValue={defaultCountry}\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div\n          className={`${\n            isStateDisabled ? \"col-xl-6 mb-3 pe-none\" : \"col-xl-6 mb-3\"\n          }`}\n        >\n          <label className=\"form-label\">{t(\"state\")}</label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n              defaultValue={selectStateName}\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        {!id && (\n          \n          <>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"password\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0] ? filteredUserData[0].password : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setShowPassword(!showPassword);\n                  }}\n                >\n                  {showPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.password} />\n            </div>\n            <div className=\"col-xl-6 mb-3 \">\n              <label className=\"form-label\">\n                {t(\"confirmPassword\")} <span className=\"text-danger\">*</span>\n              </label>\n              <div className=\"position-relative\">\n                <CustomInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  register={register}\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"\"\n                  defaultValue={\n                    filteredUserData[0]\n                      ? filteredUserData[0].confirmPassword\n                      : \"\"\n                  }\n                />\n                <span\n                  className=\"showPasswordIcon\"\n                  onClick={() => {\n                    setConfirmShowPassword(!showConfirmPassword);\n                  }}\n                >\n                  {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n                </span>\n              </div>\n              <Error errorName={errors.confirmPassword} />\n            </div>{\" \"}\n          </>\n        )}\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"featureTemplate\")} <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplateId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field }) => (\n              <Select\n                onChange={(e) => {\n                  setTempValue(e);\n                  setValue(\"featureTemplateId\", e.value);\n                }}\n                options={TemplateOptions}\n                ref={field.ref}\n                name={field.name}\n                styles={customStyles}\n                value={TemplateOptions.find(\n                  (option) => option.value === field.value\n                )}\n                // defaultValue={filteredUserData[0] ? TemplateOptions.find(option => option._id === filteredUserData[0].featureTemplateId) : \"\"}\n              />\n            )}\n          />\n          {!getValues(\"featureTemplateId\") && (\n            <Error errorName={errors.featureTemplateId} />\n          )}\n        </div>\n        <div className=\"col-xl-6 mb-3 \"></div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { subUserAccountSchema } from \"../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\nimport { createUser, updateUser } from \"../../../services/api/UserServices\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { checkRole, checkUserName } = useStorage();\n  const role = checkRole();\n  const userName = checkUserName();\n  const tabHeading = [t(\"account\")];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { formData } = location.state || {};\n  console.log(formData, \"datahgf:-\")\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = async (data) => {\n    console.log(data, \"this is data\");\n    if (data.businessUser) {\n      data.businessGroupId = data.businessUser;\n    }\n    if (data.parentCompany) {\n      data.companyId = data.parentCompany;\n    }\n    if (data.Branch) {\n      console.log(data.Branch);\n      data.branchId = data.Branch;\n    }\n    if(id){\n      try {\n        // data.role = \"USER\";\n        // data.parent = userName;\n        // data.type = \"STAFF\";\n        const response = await updateUser(id,data);\n        console.log(\"this is response\", response);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User updated successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n    else{\n      try {\n        data.role = \"USER\";\n        data.parent = userName;\n        data.type = \"STAFF\";\n        const response = await createUser(data);\n        console.log(\"this is response\", response);\n        if (response.error) {\n          notifyError(response.error);\n        } else {\n          data._id = response._id;\n          notifySuccess(\"User created successfully !!\");\n          navigate(\"/user\");\n        }\n      } catch (error) {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n  };\n  const { id } = useParams();\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                          formData = {formData}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n","import { get } from \"react-scroll/modules/mixins/scroller\";\nimport requests from \"./Axios\";\nimport axios from \"axios\";\nimport initAxios from \"./Axios\";\ninitAxios()\n\n\nexport const getTemplates = async (page) => {\n  try {\n    console.log(\"page is here \", page)\n    let url = \"/feature-template\";\n    if (page !== undefined) {\n    url += `?page=${page}&limit=${10}`;\n  }\n    const response = await axios.get(url);\n      return response.data;\n  } catch(error){\n    console.error(\"Error fetching templates:\", error);\n    return { error: \"Couldn't fetch User\" }\n  }\n}\n\nconst TemplateServices = {\n  getTemplates: async (body) => {\n    try {\n      const response = await axios.get(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  \n//   getStaffById: async (id, body) => {\n//     return requests.post(`/admin/${id}`, body);\n//   },\n\n\n  createTemplate: async (body) => {\n\n    try {\n      console.log(body)\n      const response = await axios.post(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n  listModule: async (body) => {\n    try {\n      const response = await axios.get(\"/modules\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  udpateTemplate: async (body) => {\n    try {\n      const response = await axios.patch(\"/feature-template\", body);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  },\n\n  deleteTemplate: async (id) => {\n    try {\n      const response = await axios.delete(`/feature-template/${id}`);\n      return response.data; // Directly return the data array\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      throw error; // Re-throwing the error for the caller to handle\n    }\n  }\n};\n\nexport default TemplateServices;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","formData","console","log","selectStateName","setSelectStateName","useState","defaultCountry","setDefaultCountry","defaultValue","setDefaultValue","allGroups","setAllGroups","allCompanies","setAllCompanies","allBranches","setAllBranches","checkRole","checkUser","useStorage","tempValue","setTempValue","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","TemplateOptions","setTemplateOptions","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","isLoading","setIsLoading","isEdit","setIsEdit","groupId","setGroupId","companyId","setCompanyId","userDetails","JSON","parse","localStorage","getItem","t","useTranslation","customStyles","base","padding","useEffect","async","response","getGroups","companyResponse","getCompany","branchResponse","getAllBranch","error","notifyError","groups","data","groupOptions","map","item","_item$businessGroupId","_item$businessGroupId2","label","businessGroupId","groupName","value","_id","setBusinessUserOptions","companies","_item$companyId5","_item$companyId6","companyName","branches","branchOptions","branchName","setParentOptions","fetchOptions","getTemplates","tempOptions","name","role","id","useParams","loggedinemail","defaultCompanyOptions","DummyData","filter","userName","parent","filteredUserData","setFilteredUserData","businessUserOptions","companyOptions","setCompanyOptions","setBranchOptions","parentOptions","vehiclesOptions","setVehiclesOptions","businessUserValue","setBusinessUserValue","companyValue","setCompanyValue","parentValue","setParentValue","businessDisabled","setBusinessDisabled","companyDisabled","setCompanyDisabled","filteredCompanyData","setFilteredCompanyData","_userDetails$user$bus","_userDetails$user","_userDetails$user$bus2","user","_formData$","_formData$2","_formData$3","_formData$3$branchIds","_formData$4","_formData$5","_formData$6","_formData$7","branchIds","email","mobileNumber","country","state","featureTemplateId","_jsx","children","_jsxs","className","style","width","margin","Controller","rules","required","render","_ref2","field","onChange","ref","GroupDropdown","newValue","isDisabled","_ref3","CompanyDropdown","_ref4","ParentBranchDropdown","Error","errorName","htmlFor","CustomInput","type","placeholder","min","onInput","e","temp","Math","max","target","CountrySelect","containerClassName","inputClassName","placeHolder","concat","background","StateSelect","_Fragment","password","onClick","LuEyeOff","LuEye","confirmPassword","_ref5","Select","options","styles","find","option","display","justifyContent","Button","Title","editData","setEditData","activeIndex","setActiveIndex","checkUserName","tabHeading","component","Account","navigate","length","useNavigate","location","useLocation","formState","useForm","resolver","yupResolver","subUserAccountSchema","businessUser","parentCompany","Branch","branchId","updateUser","notifySuccess","createUser","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane","initAxios","page","url","undefined","axios","get","body","createTemplate","post","listModule","udpateTemplate","patch","deleteTemplate","delete"],"sourceRoot":""}