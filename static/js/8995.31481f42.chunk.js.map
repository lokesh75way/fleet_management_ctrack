{"version":3,"file":"static/js/8995.31481f42.chunk.js","mappings":"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","sources":["jsx/components/Tables/SubCompanyTable.jsx","jsx/pages/company/Branch.js"],"sourcesContent":["import React from 'react'\nimport { MdDelete } from 'react-icons/md'\nimport { FaEdit } from 'react-icons/fa'\nimport DeleteModal from '../Modal/DeleteModal'\nimport { Link } from 'react-router-dom'\nimport { IMAGES,SVGICON} from '../../constant/theme'; \nimport useStorage from '../../../hooks/useStorage'\nimport { usePermissions } from '../../../context/PermissionContext'\n\nconst SubCompanyTable = ({onConfirmDelete,params,currentPage, itemsPerPage, tempValue,tempValue2,tableData,editDrawerOpen, setDataLength}) => {\n  let filterData = tableData;\n  const {can} = usePermissions()\n  const editPermission = can('branch','modify');\n  const deletePermission = can('branch','delete');\n  if(tempValue!=='All Companies'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentCompany === tempValue)\n  }\n  if(tempValue2!=='All Branches'){\n    filterData = tableData.filter((item)=> item.role === 'branch' && item.parentBranch === tempValue2)\n  }\n  var branchCount = []\n  for(var i=0;i<filterData.length;i++){\n    const branchId = filterData[i]._id\n    branchCount[i] = filterData.filter((item)=> item?.parentBranchId?._id === branchId).length\n  }\n  // setDataLength(filterData.length)\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n    return (\n      <>\n        {filterData.map((item, index) => (\n          <tr key={index}>\n            <td>\n              <span>{startIndex + index}</span>\n            </td>\n            <td>\n              <span className=\"text-primary\">{item.branchName}</span>\n            </td>\n            {/* <td>\n              <span >{item.parentBranchId?.branchName ? item.parentBranchId?.branchName :<span className='ps-4'>-</span> }</span>\n            </td> */}\n            <td>\n              <span >{item.companyId?.companyName ? item.companyId?.companyName : <span className='ps-4'>-</span> }</span>\n            </td>\n            <td>\n              <span >{item.businessGroupId?.groupName ? item.businessGroupId?.groupName : <span className='ps-4'>-</span> }</span>\n            </td>\n            {/* <td>\n              <span>{item.mobileNumber}</span>\n            </td> */}\n            <td>\n              <span>{item.city}</span>\n            </td>\n\n            <td>\n            <Link\n              to={`/branch/bid/${item.id}`}\n              className=\"text-primary badge light border-0 badge-count\"\n            >\n              {branchCount[index]}\n            </Link>\n          </td>\n            {(editPermission || deletePermission) && <td>\n              <span className=\"d-flex justify-content-center\">\n                {editPermission && <span\n                  className=\"cursor-pointer\"\n                  onClick={() => editDrawerOpen(item._id)}\n                >\n                  <FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} />\n                </span>}\n                {deletePermission && <DeleteModal\n                  className=\"cursor-pointer \"\n                  onConfirmDelete={onConfirmDelete}\n                  id={item._id}\n                >\n                  <MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} />\n                </DeleteModal>}\n              </span>\n            </td>}\n          </tr>\n        ))}\n      </>\n    );\n}\n\nexport default SubCompanyTable","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useParams, useNavigate  } from \"react-router-dom\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport SubCompanyTable from \"../../components/Tables/SubCompanyTable\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport AsyncSelect from \"react-select/async\";\nimport useStorage from \"../../../hooks/useStorage\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { clsx } from \"clsx\";\n\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../../context/ThemeContext\";\nimport { usePermissions } from \"../../../context/PermissionContext\";\nimport {\n  getAllBranch,\n  createBranch,\n  deleteBranch,\n} from \"../../../services/api/BranchServices\";\nimport { notifySuccess } from \"../../../utils/toast\";\nimport usePagination from \"../../../hooks/usePagination\";\nimport { getCompany } from \"../../../services/api/CompanyServices\";\nimport CompanyDropdown from \"../../components/CompanyDropdown\";\nimport BranchDropdown from \"../../components/BranchDropdown\";\nimport { getSelectValues } from \"../../../utils/helper\";\nimport ParentBranchDropdown from \"../../components/ParentBranch\";\nimport ReactPaginate from \"react-paginate\";\nimport { ICON } from \"../../constant/theme\";\nimport Paginate from \"../../components/Pagination/Paginate\";\n\n// import { SubCompanyData } from '../../components/Tables/Tables';\n\nconst Branch = () => {\n  const { isRtl } = useContext(ThemeContext);\n\n  const { can, setUserPermission } = usePermissions();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const {id} = useParams();\n\n  const [selectFilter, setFilter] = useState({\n    value: \"All Companies\",\n    label: \"All Companies\",\n  });\n  const [selectFilter2, setFilter2] = useState({\n    value: \"All Branches\",\n    label: \"All Branches\",\n  });\n  const [tempValue, setTempValue] = useState(\"All Companies\");\n  const [tempValue2, setTempValue2] = useState(\"All Branches\");\n  const [data, setData] = useState(\n    document.querySelectorAll(\"#employee-tbl_wrapper tbody tr\")\n  );\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      marginRight: \"1rem\",\n      marginLeft: \"1rem\",\n      width: \"15rem\",\n      height: \"0.6rem\",\n      menuPortal: (provided) => ({ ...provided, zIndex: 9999 }),\n      menu: (provided) => ({ ...provided, zIndex: 9999 }),\n    }),\n  };\n  const loggedinUser = localStorage.getItem(\"loginDetails-name\");\n  // const SubCompanyData = JSON.parse( localStorage.getItem('branchData'));\n  // const role = localStorage.getItem(\"role\");\n  const { control, setValue, getValues, watch } = useForm();\n  const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\n  const role = userData?.user?.role;\n  const [companyId, setCompanyId] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const [editData, setEditData] = useState({\n    id: 0,\n    reseller: \"\",\n    contact: 0,\n    username: \"\",\n    status: \"\",\n    location: \"\",\n    usergroup: \"\",\n    branches: 0,\n  });\n  const [companyDropdown, setCompanyDropdown] = useState({\n    label:t('allCompanies'),\n    value: \"All Companies\",\n  });\n  const [branchDropdown, setBranchDropdown] = useState({\n    label:  t('selectParentBranch'),\n    value: \"All Branches\",\n  });\n  const [companies, setCompanies] = useState([]);\n  const [branches, setBranches] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const defaultValues = getSelectValues();\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount, setPage } =\n    usePagination();\n  \n  const itemsPerPage=10;\n\n  const handlePageClick = ({ selected }) => {\n    goToPage(selected + 1); \n  };\n  \n    const startIndex = (page - 1) * itemsPerPage;\n    const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  const fetchAllBranch = async (page, CompanyId, branchId) => {\n    try {\n      if (CompanyId) {\n        const { data, success } = await getAllBranch(undefined, CompanyId);\n        setTableData(data.data);\n        setCount(data.totalCount);\n        setBranches(data.data);\n      } else if (branchId) {\n        const { data, success } = await getAllBranch(\n          undefined,\n          undefined,\n          branchId\n        );\n        setTableData(data.data);\n        setCount(data.totalCount);\n        setBranches(data.data);\n      } else {\n        const { data, success } = await getAllBranch(page);\n        const permissions = JSON.parse(localStorage.getItem(\"permission\"));\n        setUserPermission(permissions?.[0]?.permission);\n        setTableData(data.data);\n        setCount(data.totalCount);\n        // setBranches(data.data);\n      }\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    if(id){\n      fetchAllBranch(page,id);\n    }else{\n      fetchAllBranch(page);\n    }\n  }, [page,id]);\n\n  const filteredBranches = branches.filter(\n    (branch) =>\n      selectedCompany && branch.companyId._id === selectedCompany.value\n  );\n\n  const branchOptions = filteredBranches.map((branch) => ({\n    value: branch._id,\n    label: branch.branchName,\n  }));\n\n  const handleCompanyChange = (selectedOption) => {\n\n    setSelectedCompany(selectedOption);\n    setFilter(selectedOption);\n    setCompanyId(selectedOption.value);\n    setPage(1);\n    fetchAllBranch(1, selectedOption.value);\n  };\n\n  // Handler function for branch selection\n  const handleBranchChange = (branchOption) => {\n    setSelectedBranch(branchOption);\n    setFilter2(branchOption);\n    setPage(1);\n    fetchAllBranch(1, undefined, branchOption.value);\n  };\n  const handleClearFilter = () => {\n    fetchAllBranch();\n    setCompanyId(null);\n    setValue(\"company\", \"\");\n    setValue(\"parent\", \"\");\n    setCompanyDropdown({\n      label: \"All companies\",\n      value: \"All companies\",\n    });\n  };\n\n  const onConfirmDelete = async (id) => {\n    await deleteBranch(id);\n    notifySuccess(\"Branch Deleted\");\n    await fetchAllBranch();\n  };\n\n  const editDrawerOpen = (item) => {\n    const filteredData = tableData?.filter((data) => data._id === item);\n    navigate(`edit/${item}`, { state: filteredData });\n  };\n\n  // const d = JSON.parse(localStorage.getItem(\"userJsonData\"));\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={\"Branch\"}\n        parentTitle={\"Home\"}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t(\"branches\")}</h4>\n                    <div className=\"d-flex align-items-center\">\n                      <Link\n                        className=\"btn  btn-xxs\"\n                        data-bs-toggle=\"offcanvas\"\n                        onClick={handleClearFilter}\n                        to={\"/branch\"}\n                        style={{\n                          background: \"gray\",\n                          border: \"gray\",\n                          color: \"white\",\n                        }}\n                      >\n                        Clear\n                      </Link>\n                      <Controller\n                        name=\"company\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <CompanyDropdown\n                            onChange={async (newValue) => {\n                              setValue(\"company\", newValue.value);\n                              setCompanyId(newValue.value);\n                              handleCompanyChange(newValue);\n                            }}\n                            key={companyId}\n                            value={value? value : companyDropdown}\n                            customStyles={customStyles}\n                            name={name}\n                            ref={ref}\n                            isDisabled={role === 'COMPANY' ? true : false}\n                          />\n                        )}\n                      />\n                      {/* <Controller\n                        name=\"parent\"\n                        control={control}\n                        rules={{ required: true }}\n                        render={({ field: { onChange, value, name, ref } }) => (\n                          <ParentBranchDropdown\n                            key={companyId}\n                            onChange={(newValue) => {\n                              setValue(\"parent\", newValue.value);\n                              handleBranchChange(newValue);\n                            }}\n                            companyId={companyId}\n                            value={value? value : branchDropdown}\n                            customStyles={customStyles}\n                            ref={ref}\n                            name={name}\n                            \n                          />\n                        )}\n                      /> */}\n                      {can(\"branch\", \"add\") && (\n                        <Link\n                          to={\"/branch/create\"}\n                          className=\"btn btn-primary btn-sm ms-1\"\n                          style={{ paddingBlock: \"9px\" }}\n                          data-bs-toggle=\"offcanvas\"\n                          // onClick={()=>subCompany.current.showModal()}\n                        >\n                          + {t(\"addBranch\")}\n                        </Link>\n                      )}{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"id\")}</th>\n                          <th>{t(\"branchName\")}</th>\n                          {/* <th>{t(\"parentBranch\")}</th> */}\n                          <th>{t(\"companyName\")}</th>\n                          <th>{t(\"businessGroup\")}</th>\n                          {/* <th>{t('mobileNumber')}</th> */}\n                          <th>{t(\"location\")}</th>\n                          <th>{t(\"childBranches\")}</th>\n                          {(can(\"branch\", \"modify\") ||\n                            can(\"branch\", \"delete\")) && <th>{t(\"action\")}</th>}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <SubCompanyTable\n                          key={tableData}\n                          tempValue={tempValue}\n                          // setDataLength={setDataLength}\n                          tempValue2={tempValue2}\n                          editData={editData}\n                          tableData={tableData}\n                          currentPage={page} \n                        itemsPerPage={itemsPerPage}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Paginate\n                            totalCount={totalCount}\n                            itemsPerPage={itemsPerPage}\n                            handlePageClick={handlePageClick}\n                          />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <SubCompanyOffcanvas\n                ref={subCompany}\n                editData={editData}\n                setEditData={setEditData}\n                handleSubmit={handleSubmit}\n                Title={ editData.id === 0 ? \"Add Branch\" : \"Edit Branch\"}\n            /> */}\n    </>\n  );\n};\nexport default Branch;\n"],"names":["_ref","onConfirmDelete","params","currentPage","itemsPerPage","tempValue","tempValue2","tableData","editDrawerOpen","setDataLength","filterData","can","usePermissions","editPermission","deletePermission","filter","item","role","parentCompany","parentBranch","branchCount","i","length","branchId","_id","_item$parentBranchId","parentBranchId","startIndex","_jsx","_Fragment","children","map","index","_item$companyId","_item$companyId2","_item$businessGroupId","_item$businessGroupId2","_jsxs","className","branchName","companyId","companyName","businessGroupId","groupName","city","Link","to","concat","id","onClick","FaEdit","style","color","fontSize","DeleteModal","MdDelete","Branch","_userData$user","isRtl","useContext","ThemeContext","setUserPermission","t","useTranslation","navigate","useNavigate","useParams","selectFilter","setFilter","useState","value","label","selectFilter2","setFilter2","setTempValue","setTempValue2","data","setData","document","querySelectorAll","customStyles","control","base","marginRight","marginLeft","width","height","menuPortal","provided","zIndex","menu","setValue","getValues","watch","localStorage","getItem","useForm","userData","JSON","parse","user","setCompanyId","setTableData","editData","setEditData","reseller","contact","username","status","location","usergroup","branches","companyDropdown","setCompanyDropdown","branchDropdown","setBranchDropdown","companies","setCompanies","setBranches","selectedCompany","setSelectedCompany","selectedBranch","setSelectedBranch","page","nextPage","prevPage","goToPage","setCount","totalCount","setPage","getSelectValues","usePagination","fetchAllBranch","slice","async","CompanyId","success","getAllBranch","undefined","_permissions$","permissions","permission","error","console","log","useEffect","branch","MainPagetitle","mainTitle","pageTitle","parentTitle","handleClearFilter","background","border","Controller","name","rules","required","render","_ref2","field","onChange","ref","CompanyDropdown","selectedOption","newValue","isDisabled","paddingBlock","SubCompanyTable","deleteBranch","notifySuccess","filteredData","state","Math","min","Paginate","handlePageClick","selected"],"sourceRoot":""}