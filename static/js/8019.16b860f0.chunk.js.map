{"version":3,"file":"static/js/8019.16b860f0.chunk.js","mappings":"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","sources":["components/Form/ChangePassword.jsx","jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","components/Input/UserDetailsForm.jsx","features/branch/components/Form.jsx","hooks/useUserLocation.js","jsx/pages/admin/settings/CreateForms/BranchForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"../Input/CustomInput\";\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\n\nconst ChangePassword = ({\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  isFormSubmitting,\n}) => {\n  const [showOldPassword, setOldShowPassword] = useState(false);\n  const [showNewPassword, setNewShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <>\n          <div className=\"col-xl-6 mb-3 position-relative\">\n            <label className=\"form-label\">\n              Old Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showOldPassword ? \"text\" : \"password\"}\n                register={register}\n                name=\"oldPassword\"\n                label=\"Old Password\"\n                placeholder=\"\"\n                defaultValue={getValues(\"oldPassword\")}\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setOldShowPassword(!showOldPassword);\n                }}\n              >\n                {showOldPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.oldPassword} />\n          </div>\n          <div className=\"col-xl-6 mb-3\">\n            <label className=\"form-label\">\n              New Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showNewPassword ? \"text\" : \"password\"}\n                register={register}\n                label=\"New Password\"\n                name=\"newPassword\"\n                placeholder=\"\"\n                defaultValue={getValues(\"newPassword\")}\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setNewShowPassword(!showNewPassword);\n                }}\n              >\n                {showNewPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.newPassword} />\n          </div>\n          <div className=\"col-xl-6 mb-3 position-relative\">\n            <label className=\"form-label\">\n              Retype Password<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"position-relative\">\n              <CustomInput\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                register={register}\n                label=\"Retype Password\"\n                name=\"confirmPassword\"\n                placeholder=\"\"\n              />\n              <span\n                className=\"showPasswordIcon\"\n                onClick={() => {\n                  setConfirmShowPassword(!showConfirmPassword);\n                }}\n              >\n                {showConfirmPassword ? <LuEyeOff /> : <LuEye />}\n              </span>\n            </div>\n            <Error errorName={errors.confirmPassword} />\n          </div>\n        </>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n  showtimeZone = true,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) setValue(\"city\", dValues.city);\n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value == dValues?.country\n        );\n        if (option) handleCountryChange(option);\n      }\n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n      }\n    } else {\n      setSelectedCountry({\n        value: locationData?.country?.isoAlpha3,\n        label: locationData?.country?.isoName,\n      });\n      setValue(\"country\", locationData?.country?.isoAlpha3);\n      setCountryCode(locationData?.country?.isoAlpha2);\n      setSelectedState({\n        value: locationData?.location?.principalSubdivision,\n        label: locationData?.location?.principalSubdivision || \"\",\n      });\n      setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n      const selectedCountryId = isoToCountryId(\n        locationData?.country?.isoAlpha3\n      );\n      GetState(selectedCountryId).then((result) => {\n        setStateList(result);\n      });\n    }\n  }, [locationData, id, dValues]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n\n    const selectedCountry = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountry.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountry.name });\n    setStateList([]);\n    setSelectedState({\n      value: \"\",\n      label: \"\",\n    });\n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = (selectedOption) => {\n    const selectedStateId = selectedOption.value;\n    const selectedState = stateList.find(\n      (state) => state.name === selectedStateId\n    );\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      selectedState?.name.endsWith(\" Emirate\")\n    ) {\n      selectedState.name = selectedState.name.replace(\" Emirate\", \"\");\n    }\n    setValue(\"state\", selectedState.name);\n    setSelectedState({ value: selectedState.name, label: selectedState.name });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={selectedCountry}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        {/* <label className=\"form-label\"> State</label> */}\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={selectedState}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && showtimeZone && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\nimport { SVGICON } from \"../../constants/theme\";\nimport { t } from \"i18next\";\n\nconst UserDetailsForm = ({\n  field,\n  fields,\n  index,\n  register,\n  getValues,\n  errors,\n  remove,\n  id,\n}) => {\n  const handleRemoveForm = (index) => {\n    remove(index);\n  };\n\n  return (\n    <div key={field.id} className=\"row\">\n      <div className=\"d-flex align-items-center\">\n        {fields.length > 1 && (\n          <div className=\"flex-grow-1 mb-3\">\n            <h5>User {index + 1}</h5>\n          </div>\n        )}\n        {fields.length > 1 && (\n          <div className=\"mr-5\" onClick={() => handleRemoveForm(index)}>\n            {SVGICON.Delete}\n          </div>\n        )}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"name\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"name\"\n          name={`userInfo.${index}.name`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.name`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.name} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"designation\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"designation\"\n          name={`userInfo.${index}.designation`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.designation`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.designation} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"mobileNumber\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"number\"\n          register={register}\n          name={`userInfo.${index}.mobileNumber`}\n          label=\"Mobile Number\"\n          placeholder=\"\"\n          min=\"0\"\n          onInput={(e) => {\n            const temp = Math.max(0, e.target.value);\n            e.target.value = temp < 1 ? \"\" : temp;\n          }}\n          defaultValue={getValues(`userInfo.${index}.mobileNumber`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.mobileNumber} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"email\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"email\"\n          register={register}\n          name={`userInfo.${index}.email`}\n          label=\"email\"\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.email`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.email} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetailsForm;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport GroupDropdown from \"@/features/businessGroup/components/DropDownList\";\nimport CompanyDropdown from \"@/features/company/components/DropDownList\";\nimport FormField from \"@/components/Input/UserDetailsForm\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst BranchForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n  watch,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [company, setCompany] = useState();\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const { location: locationData, error: locationError } = useUserLocation();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\", margin: \"auto\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"businessGroup\")}</label>\n          <span className=\"text-danger\">*</span>\n\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdown\n                onChange={(newValue) => {\n                  if (getValues(\"businessGroupId\") != newValue.value) {\n                    setValue(\"businessGroupId\", newValue.value);\n                    setValue(\"companyName\", \"\");\n                    setValue(\"companyId\", \"\");\n                    setCompany(null);\n                  }\n                }}\n                defaultValue={value}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n\n          {!getValues(\"businessGroupId\") && (\n            <Error errorName={errors.businessGroupId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"company\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n\n          <Controller\n            name=\"companyId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <CompanyDropdown\n                groupId={watch(\"businessGroupId\")}\n                onChange={(newValue) => {\n                  setValue(\"companyId\", newValue.value);\n                  setValue(\"companyName\", newValue.label);\n                  setCompany(newValue);\n                }}\n                defaultValue={value}\n                value={company}\n                customStyles={customStyles}\n                ref={ref}\n                name={name}\n              />\n            )}\n          />\n\n          {!getValues(\"companyId\") && <Error errorName={errors.companyId} />}\n        </div>\n\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"branchName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"Branch Name\"\n            name=\"branchName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"branchName\")}\n          />\n          <Error errorName={errors.branchName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          dValues={{\n            country: getValues(\"country\"),\n            state: getValues(\"state\"),\n            city: getValues(\"city\"),\n          }}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {\" \"}\n            ADD\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <FormField\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BranchForm;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n","import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../../components/MainPagetitle\";\nimport MyAccount from \"../../../../../features/branch/components/Form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { branchAccountSchema } from \"../../../../../utils/yup\";\nimport { notifyError, notifySuccess } from \"../../../../../utils/toast\";\nimport ManagePassword from \"../../../../../components/Form/ChangePassword\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  createNewBranch,\n  editBranch,\n} from \"../../../../../services/api/BranchServices\";\nimport { getApiErrorMessage } from \"../../../../../utils/helper\";\n\nconst BranchForm = () => {\n  const { t } = useTranslation();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const { id } = useParams();\n  const tabHeading = [id ? t(\"editBranch\") : t(\"newBranch\")];\n  const component = [MyAccount];\n  const navigate = useNavigate();\n\n  const totalTabs = tabHeading.length;\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    defaultValues: {\n      userInfo: [\n        {\n          name: \"\",\n          designation: \"\",\n          mobileNumber: null,\n          email: \"\",\n        },\n      ],\n    },\n    resolver: yupResolver(branchAccountSchema),\n  });\n\n  const onSubmit = async (data) => {\n    if (activeIndex === totalTabs - 1) {\n      try {\n        if (data.logo == null || data.logo.length === 0) {\n          delete data.logo;\n        }\n        if (data.file && data.file.length === 0) {\n          delete data.file;\n        }\n        if (data.file && Object.keys(data.file).length === 0) {\n          delete data.file;\n        }\n        if (id) {\n          const Branchdata = {\n            ...data,\n            branchId: id,\n          };\n\n          await editBranch(Branchdata);\n          notifySuccess(\"Branch Updated!\");\n          navigate(\"/branch\");\n        } else {\n          await createNewBranch(data);\n          notifySuccess(\"New Branch Created!\");\n          navigate(\"/branch\");\n          return;\n        }\n      } catch (error) {\n        notifyError(getApiErrorMessage(error));\n      }\n    }\n    // setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Branch\"\n        pageTitle={id ? \"Edit\" : \"Create\"}\n        parentTitle={\"Branch\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BranchForm;\n"],"names":["_ref","getValues","register","onSubmit","handleSubmit","errors","isFormSubmitting","showOldPassword","setOldShowPassword","useState","showNewPassword","setNewShowPassword","showConfirmPassword","setConfirmShowPassword","_jsxs","className","children","_jsx","style","width","margin","_Fragment","CustomInput","type","name","label","placeholder","defaultValue","onClick","LuEyeOff","LuEye","Error","errorName","oldPassword","newPassword","confirmPassword","display","justifyContent","Button","disabled","countryCode","customStyle","setValue","id","dValues","Comptype","t","useTranslation","timezones","setTimezones","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","htmlFor","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","locationData","showCity","showtimeZone","selectedCountry","setSelectedCountry","selectedState","setSelectedState","countriesList","setCountriesList","stateList","setStateList","setCountryCode","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","_locationData$country","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$locatio","_locationData$locatio2","_locationData$locatio3","_locationData$country5","isoAlpha3","isoName","isoAlpha2","location","principalSubdivision","selectedCountryId","isoToCountryId","GetState","isoCode","iso3","async","selectedIsoCode","iso2","getStateName","endsWith","replace","stateOptions","selectedStateId","TimeZoneSelector","_errors$userInfo","_errors$userInfo$inde","_errors$userInfo2","_errors$userInfo2$ind","_errors$userInfo3","_errors$userInfo3$ind","_errors$userInfo4","_errors$userInfo4$ind","field","fields","index","remove","handleRemoveForm","SVGICON","Delete","userInfo","designation","min","onInput","e","temp","max","target","mobileNumber","email","watch","append","useFieldArray","company","setCompany","useParams","error","locationError","useUserLocation","Controller","rules","required","render","_ref2","ref","GroupDropdown","newValue","_ref3","CompanyDropdown","groupId","branchName","tradeLicenseNumber","officeNumber","LocationSelector","_ref4","dateFormatOptions","dateFormat","_ref5","timeFormatOptions","handleAddForm","FormField","lat","setLat","lng","setLng","setError","setLocation","isLoading","setIsLoading","API_KEY","process","response","axios","get","data","latitude","longitude","message","getLocation","BranchForm","activeIndex","setActiveIndex","tabHeading","component","MyAccount","navigate","useNavigate","totalTabs","formState","useForm","defaultValues","resolver","yupResolver","branchAccountSchema","logo","file","Object","keys","createNewBranch","notifySuccess","Branchdata","branchId","editBranch","notifyError","getApiErrorMessage","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}