{"version":3,"file":"static/js/87.385aac45.chunk.js","mappings":"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","sources":["components/Input/CredentialsInput.jsx","components/Loader.jsx","features/company/components/Form.jsx","features/company/pages/Create.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { t } from \"i18next\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\n\nconst CredentialsInput = ({ heading, register, errors, id, getValues }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <h3 className=\"mt-4 mb-4\">{heading}</h3>\n\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"username\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"userName\"\n          name=\"userName\"\n          placeholder=\"\"\n          defaultValue={getValues(\"userName\")}\n          disabled={id ? true : false}\n        />\n        <Error errorName={errors.userName} />\n      </div>\n\n      {!id && (\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"password\")} <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"position-relative\">\n            <CustomInput\n              type={showPassword ? \"text\" : \"password\"}\n              register={register}\n              label=\"Password\"\n              name=\"password\"\n              placeholder=\"\"\n            />\n            <span\n              className=\"showPasswordIcon\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n            >\n              {showPassword ? <LuEyeOff /> : <LuEye />}\n            </span>\n          </div>\n          {!id && <Error errorName={errors.password} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CredentialsInput;\n","import React from \"react\";\n\nconst Loader = ({ height = \"100vh\" }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        marginTop: \"-50px\",\n      }}\n    >\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport FileUploader from \"@/components/FileUploader\";\nimport GroupDropdownList from \"@/features/businessGroup/components/DropDownList\";\nimport CredentialsInput from \"@/components/Input/CredentialsInput\";\nimport UserDetailsForm from \"@/components/Input/UserDetailsForm\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \", // Adjust the height as needed\n  }),\n};\n\nconst CompanyForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const { location: locationData, error: locationError } = useUserLocation();\n  const { id } = useParams();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"businessGroup\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"businessGroupId\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <GroupDropdownList\n                onChange={(newValue) => {\n                  setValue(\"businessGroupId\", newValue.value);\n                }}\n                defaultValue={value}\n                ref={ref}\n                name={name}\n                customStyles={customStyles}\n              />\n            )}\n          />\n          {!getValues(\"businessGroupId\") && (\n            <Error errorName={errors.businessGroupId} />\n          )}\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">\n            {t(\"companyName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"Company Name\"\n            name=\"companyName\"\n            defaultValue={getValues(\"companyName\")}\n            placeholder=\"\"\n          />\n          <Error errorName={errors.companyName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <span\n          className=\"absolute\"\n          style={{\n            position: \"absolute\",\n            top: \"23%\",\n            right: \"-42%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <FileUploader\n            setValue={setValue}\n            register={register}\n            label=\"Business Group Logo\"\n            name=\"logo\"\n            getValue={getValues}\n            setLoading={setLoading}\n            loading={loading}\n            link={getValues(\"logo\")}\n          />\n\n          <Error errorName={errors.logo} />\n        </span>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"companyId\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n                defaultValue={dateFormatOptions[1]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                value={{ value, label: value }}\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <CredentialsInput\n          heading={t(\"companyLoginDetails\")}\n          register={register}\n          errors={errors}\n          id={id}\n          getValues={getValues}\n        />\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {\" \"}\n            ADD\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <UserDetailsForm\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          disabled={loading || isFormSubmitting}\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyForm;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n\nimport MainPagetitle from \"@/components/MainPagetitle\";\nimport CreateForm from \"../components/Form\";\nimport { companyAccountSchema, companyPasswordSchema } from \"@/utils/yup\";\nimport { notifyError, notifySuccess } from \"@/utils/toast\";\nimport ChangePassword from \"@/components/Form/ChangePassword\";\nimport {\n  addCompany,\n  changePassword,\n  editCompany,\n  getCompanyById,\n} from \"../api\";\nimport { getApiErrorMessage } from \"@/utils/helper\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport Loader from \"@/components/Loader\";\n\nconst CreateCompany = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  let tabHeading = [\n    id ? t(\"editCompany\") : t(\"newCompany\"),\n    t(\"changePassword\"),\n  ];\n  let component = [CreateForm, ChangePassword];\n  const [activeIndex, setActiveIndex] = useState(0);\n  const queryClient = useQueryClient();\n\n  if (!id) {\n    tabHeading = [t(\"newCompany\")];\n    component = [CreateForm];\n  }\n\n  const {\n    data: companyData,\n    isError,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"company\", id],\n    queryFn: () => getCompanyById(id),\n    enabled: !!id,\n    staleTime: Infinity,\n  });\n\n  useEffect(() => {\n    if (isError && !!id) {\n      notifyError(\"Not able to fetch company data\");\n      navigate(\"/not-found\");\n    }\n  }, [isError && id]);\n\n  const parsedCompanyData = useMemo(() => {\n    return {\n      ...companyData,\n      ...companyData?.companyId,\n      businessGroupId: companyData?.businessGroupId,\n      logo: companyData?.companyDetails?.logo ?? null,\n      password: \"\",\n    };\n  }, [companyData]);\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    defaultValues: {\n      businessGroupId: \"\",\n      userInfo: [\n        {\n          name: \"\",\n          designation: \"\",\n          mobileNumber: null,\n          email: \"\",\n        },\n      ],\n      timeFormat: timeFormatOptions[1]?.value,\n      dateFormat: dateFormatOptions[1]?.value,\n    },\n    resolver: yupResolver(\n      activeIndex === 1 ? companyPasswordSchema : companyAccountSchema(id)\n    ),\n    values: parsedCompanyData,\n  });\n\n  const onError = (err) => notifyError(getApiErrorMessage(err));\n\n  const { mutate: editCompanyMutation, isPending: editPending } = useMutation({\n    mutationFn: ({ data, id }) => editCompany(id, data),\n    onSuccess: () => {\n      notifySuccess(\"Company Updated Successfully\");\n      queryClient.invalidateQueries([\"companies\"]);\n      navigate(\"/company\");\n    },\n    onError,\n  });\n\n  const { mutate: createCompanyMutation, isPending: createPending } =\n    useMutation({\n      mutationFn: addCompany,\n      onSuccess: () => {\n        notifySuccess(\"New Company Created\");\n        queryClient.invalidateQueries([\"companies\"]);\n        navigate(\"/company\");\n      },\n      onError,\n    });\n\n  const { mutate: passwordMutation, isPending: passwordPending } = useMutation({\n    mutationFn: changePassword,\n    onSuccess: () => {\n      notifySuccess(\"Password has been changed\");\n      navigate(\"/company\");\n    },\n    onError,\n  });\n\n  const onSubmit = async (data) => {\n    if (activeIndex === 0) {\n      if (data.logo == null || data.logo.length === 0) {\n        delete data.logo;\n      }\n      if (data.file && data.file.length === 0) {\n        delete data.file;\n      }\n      if (id) {\n        editCompanyMutation({ data, id });\n      } else {\n        createCompanyMutation(data);\n      }\n    } else if (activeIndex === 1) {\n      const passwordData = {\n        password: data.newPassword,\n        oldPassword: data.oldPassword,\n        confirmPassword: data.confirmPassword,\n        _id: id,\n      };\n\n      passwordMutation(passwordData);\n    }\n  };\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"company\")}\n        pageTitle={id ? t(\"edit\") : t(\"create\")}\n        parentTitle={t(\"company\")}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {isLoading ? (\n                    <Loader height={500} />\n                  ) : (\n                    tabHeading.map((data, i) => {\n                      const Component = component[i];\n                      return (\n                        <Tab.Pane\n                          eventKey={data.toLowerCase()}\n                          key={i}\n                          active={i === activeIndex}\n                        >\n                          <Component\n                            data={tabHeading}\n                            control={control}\n                            setValue={setValue}\n                            register={register}\n                            getValues={getValues}\n                            errors={errors}\n                            handleSubmit={handleSubmit}\n                            onSubmit={onSubmit}\n                            isFormSubmitting={\n                              createPending || editPending || passwordPending\n                            }\n                          />\n                        </Tab.Pane>\n                      );\n                    })\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default CreateCompany;\n"],"names":["_ref","heading","register","errors","id","getValues","showPassword","setShowPassword","useState","_jsxs","className","children","_jsx","t","CustomInput","type","label","name","placeholder","defaultValue","disabled","Error","errorName","userName","onClick","LuEyeOff","LuEye","password","height","style","display","justifyContent","alignItems","marginTop","class","role","customStyles","control","base","padding","setValue","onSubmit","handleSubmit","isFormSubmitting","fields","append","remove","useFieldArray","loading","setLoading","useTranslation","location","locationData","error","locationError","useUserLocation","useParams","width","Controller","rules","required","render","_ref2","field","onChange","value","ref","GroupDropdownList","newValue","businessGroupId","companyName","tradeLicenseNumber","position","top","right","overflow","FileUploader","getValue","link","logo","officeNumber","email","LocationSelector","showCity","Comptype","_ref3","Select","options","dateFormatOptions","styles","dateFormat","_ref4","timeFormatOptions","CredentialsInput","margin","Button","handleAddForm","designation","mobileNumber","map","index","UserDetailsForm","CreateCompany","_timeFormatOptions$","_dateFormatOptions$","navigate","useNavigate","tabHeading","component","CreateForm","ChangePassword","activeIndex","setActiveIndex","queryClient","useQueryClient","data","companyData","isError","isLoading","useQuery","queryKey","queryFn","getCompanyById","enabled","staleTime","Infinity","useEffect","notifyError","parsedCompanyData","useMemo","_companyData$companyD","_companyData$companyD2","companyId","companyDetails","formState","useForm","defaultValues","userInfo","timeFormat","resolver","yupResolver","companyPasswordSchema","companyAccountSchema","values","onError","err","getApiErrorMessage","mutate","editCompanyMutation","isPending","editPending","useMutation","mutationFn","editCompany","onSuccess","notifySuccess","invalidateQueries","createCompanyMutation","createPending","addCompany","passwordMutation","passwordPending","changePassword","async","length","file","passwordData","newPassword","oldPassword","confirmPassword","_id","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","i","Item","Link","eventKey","active","Content","Loader","Component","Pane"],"sourceRoot":""}