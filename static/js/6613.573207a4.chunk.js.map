{"version":3,"file":"static/js/6613.573207a4.chunk.js","mappings":"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","sources":["components/Input/CredentialsInput.jsx","jsx/components/TimeZoneSelector.js","components/Input/LocationSelector.jsx","components/Input/UserDetailsForm.jsx","features/businessGroup/components/Form.jsx","hooks/useUserLocation.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport { t } from \"i18next\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\n\nconst CredentialsInput = ({ heading, register, errors, id, getValues }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <h3 className=\"mt-4 mb-4\">{heading}</h3>\n\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"username\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"userName\"\n          name=\"userName\"\n          placeholder=\"\"\n          defaultValue={getValues(\"userName\")}\n          disabled={id ? true : false}\n        />\n        <Error errorName={errors.userName} />\n      </div>\n\n      {!id && (\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"password\")} <span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"position-relative\">\n            <CustomInput\n              type={showPassword ? \"text\" : \"password\"}\n              register={register}\n              label=\"Password\"\n              name=\"password\"\n              placeholder=\"\"\n            />\n            <span\n              className=\"showPasswordIcon\"\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n            >\n              {showPassword ? <LuEyeOff /> : <LuEye />}\n            </span>\n          </div>\n          {!id && <Error errorName={errors.password} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CredentialsInput;\n","import React, { useState, useEffect } from \"react\";\nimport ct from \"countries-and-timezones\";\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TimeZoneSelector = ({\n  countryCode,\n  customStyle,\n  setValue,\n  id,\n  dValues,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [timezones, setTimezones] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState(null);\n  useEffect(() => {\n    const country = ct.getCountry(countryCode);\n    if (country) {\n      const timezoneList = country.timezones;\n      if (timezoneList && timezoneList.length > 0) {\n        setTimezones(\n          timezoneList.map((timezone) => ({\n            label: `(GMT ${getGMTOffset(timezone)}) ${timezone} `,\n            value: timezone,\n          }))\n        );\n        // Set default timezone to the first one in the list\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezoneList[0])}) ${timezoneList[0]} `,\n          value: timezoneList[0],\n        });\n        setValue(\"timezone\", timezoneList[0]);\n      }\n    }\n  }, [countryCode]);\n\n  useEffect(() => {\n    if (dValues && id) {\n      const timezone =\n        Comptype === \"companyId\"\n          ? dValues.companyId?.timezone\n          : Comptype === \"businessGroupId\"\n            ? dValues.businessGroupId?.timezone\n            : dValues.timezone;\n\n      setValue(\"timezone\", timezone);\n\n      if (timezone) {\n        setSelectedTimezone({\n          label: `(GMT ${getGMTOffset(timezone)}) ${timezone}`,\n          value: timezone,\n        });\n        console.log(selectedTimezone, \"hi\");\n      }\n    }\n  }, [dValues, id]);\n\n  const handleTimezoneChange = (selectedOption) => {\n    // console.log(selectedOption, \"ds:-\")\n    setValue(\"timezone\", selectedOption.value);\n    setSelectedTimezone(selectedOption);\n  };\n  const getGMTOffset = (timezone) => {\n    const offsetMinutes = ct.getTimezone(timezone).utcOffset;\n    const offsetHours = Math.abs(Math.floor(offsetMinutes / 60));\n    const offsetMinutesRemainder = Math.abs(offsetMinutes % 60);\n    const offsetSign = offsetMinutes >= 0 ? \"+\" : \"-\";\n    return `${offsetSign}${offsetHours}:${offsetMinutesRemainder.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"col-xl-3\">\n      <label htmlFor=\"timezone\">{t(\"timezone\")}:</label>\n      <Select\n        id=\"timezone\"\n        value={selectedTimezone}\n        styles={customStyle}\n        onChange={handleTimezoneChange}\n        options={timezones}\n      />\n    </div>\n  );\n};\n\nexport default TimeZoneSelector;\n","import React, { useEffect, useState } from \"react\";\nimport { GetCountries, GetState } from \"react-country-state-city/dist/cjs\";\nimport Error from \"../Error/Error\";\nimport CustomInput from \"./CustomInput\";\nimport Select from \"react-select\";\nimport TimeZoneSelector from \"../../jsx/components/TimeZoneSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    padding: \".25rem 0 \",\n  }),\n};\n\nconst LocationSelector = ({\n  register,\n  setValue,\n  errors,\n  getValues,\n  locationData,\n  dValues,\n  id,\n  showCity,\n  Comptype,\n}) => {\n  const { t } = useTranslation();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [countriesList, setCountriesList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"IND\");\n\n  useEffect(() => {\n    GetCountries().then((result) => {\n      setCountriesList(result);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      if (dValues?.city) setValue(\"city\", dValues.city);\n      if (dValues?.country) {\n        setValue(\"country\", dValues.country);\n        const option = countryOptions.find(\n          (option) => option.value == dValues?.country\n        );\n        console.log({ option });\n        if (option) handleCountryChange(option);\n      }\n      if (dValues?.state) {\n        setValue(\"state\", dValues.state || \"\");\n        setSelectedState({\n          value: dValues.state,\n          label: dValues.state || \"\",\n        });\n      }\n    } else {\n      setSelectedCountry({\n        value: locationData?.country?.isoAlpha3,\n        label: locationData?.country?.isoName,\n      });\n      setValue(\"country\", locationData?.country?.isoAlpha3);\n      setCountryCode(locationData?.country?.isoAlpha2);\n      setSelectedState({\n        value: locationData?.location?.principalSubdivision,\n        label: locationData?.location?.principalSubdivision || \"\",\n      });\n      setValue(\"state\", locationData?.location?.principalSubdivision || \"\");\n      const selectedCountryId = isoToCountryId(\n        locationData?.country?.isoAlpha3\n      );\n      GetState(selectedCountryId).then((result) => {\n        setStateList(result);\n      });\n    }\n  }, [locationData, id, dValues]);\n\n  const isoToCountryId = (isoCode) => {\n    const country = countriesList.find((country) => country.iso3 === isoCode);\n    return country ? country.id : null;\n  };\n\n  const handleCountryChange = async (selectedOption) => {\n    const selectedIsoCode = selectedOption.value;\n\n    const selectedCountryId = isoToCountryId(selectedIsoCode);\n\n    const selectedCountry = countriesList.find(\n      (country) => country.iso3 === selectedIsoCode\n    );\n    setCountryCode(selectedCountry.iso2);\n\n    setValue(\"country\", selectedIsoCode);\n    setSelectedCountry({ value: selectedIsoCode, label: selectedCountry.name });\n    setStateList([]);\n    setSelectedState({\n      value: \"\",\n      label: \"\",\n    });\n    const result = await GetState(selectedCountryId);\n    setStateList(result);\n  };\n\n  const handleStateChange = (selectedOption) => {\n    const selectedStateId = selectedOption.value;\n    const selectedState = stateList.find(\n      (state) => state.name === selectedStateId\n    );\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      selectedState?.name.endsWith(\" Emirate\")\n    ) {\n      selectedState.name = selectedState.name.replace(\" Emirate\", \"\");\n    }\n    setValue(\"state\", selectedState.name);\n    setSelectedState({ value: selectedState.name, label: selectedState.name });\n  };\n\n  const getStateName = (state) => {\n    if (\n      selectedCountry?.label === \"United Arab Emirates\" &&\n      state.name.endsWith(\" Emirate\")\n    ) {\n      return state.name.replace(\" Emirate\", \"\");\n    }\n    return state.name;\n  };\n\n  const countryOptions = countriesList.map((country) => ({\n    value: country.iso3,\n    label: country.name,\n  }));\n\n  const stateOptions = stateList.map((state) => ({\n    value: state.name,\n    label: getStateName(state),\n  }));\n\n  return (\n    <>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">{t(\"country\")}</label>\n        {\n          <Select\n            options={countryOptions}\n            key={selectedCountry}\n            value={selectedCountry}\n            styles={customStyles}\n            onChange={handleCountryChange}\n          />\n        }\n        {!selectedCountry && <Error errorName={errors.country} />}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        {/* <label className=\"form-label\"> State</label> */}\n        <label className=\"form-label\">{t(\"state\")}</label>\n        <Select\n          options={stateOptions}\n          key={selectedState}\n          value={selectedState}\n          styles={customStyles}\n          onChange={handleStateChange}\n        />\n        {!selectedState && <Error errorName={errors.state} />}\n      </div>\n      {showCity && (\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">{t(\"city\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues(\"city\")}\n          />\n          <Error errorName={errors.city} />\n        </div>\n      )}\n      {showCity && (\n        <TimeZoneSelector\n          setValue={setValue}\n          id={id}\n          countryCode={countryCode}\n          customStyle={customStyles}\n          Comptype={Comptype}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationSelector;\n","import React from \"react\";\nimport CustomInput from \"./CustomInput\";\nimport Error from \"../Error/Error\";\nimport { SVGICON } from \"../../constants/theme\";\nimport { t } from \"i18next\";\n\nconst UserDetailsForm = ({\n  field,\n  fields,\n  index,\n  register,\n  getValues,\n  errors,\n  remove,\n  id,\n}) => {\n  const handleRemoveForm = (index) => {\n    remove(index);\n  };\n\n  return (\n    <div key={field.id} className=\"row\">\n      <div className=\"d-flex align-items-center\">\n        {fields.length > 1 && (\n          <div className=\"flex-grow-1 mb-3\">\n            <h5>User {index + 1}</h5>\n          </div>\n        )}\n        {fields.length > 1 && (\n          <div className=\"mr-5\" onClick={() => handleRemoveForm(index)}>\n            {SVGICON.Delete}\n          </div>\n        )}\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"name\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"name\"\n          name={`userInfo.${index}.name`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.name`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.name} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"designation\")} <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"text\"\n          register={register}\n          label=\"designation\"\n          name={`userInfo.${index}.designation`}\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.designation`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.designation} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"mobileNumber\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"number\"\n          register={register}\n          name={`userInfo.${index}.mobileNumber`}\n          label=\"Mobile Number\"\n          placeholder=\"\"\n          min=\"0\"\n          onInput={(e) => {\n            const temp = Math.max(0, e.target.value);\n            e.target.value = temp < 1 ? \"\" : temp;\n          }}\n          defaultValue={getValues(`userInfo.${index}.mobileNumber`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.mobileNumber} />\n      </div>\n      <div className=\"col-xl-3 mb-3\">\n        <label className=\"form-label\">\n          {t(\"email\")}\n          <span className=\"text-danger\">*</span>\n        </label>\n        <CustomInput\n          type=\"email\"\n          register={register}\n          name={`userInfo.${index}.email`}\n          label=\"email\"\n          placeholder=\"\"\n          defaultValue={getValues(`userInfo.${index}.email`)}\n        />\n        <Error errorName={errors.userInfo?.[index]?.email} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetailsForm;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Controller, useFieldArray } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Error from \"@/components/Error/Error\";\nimport CustomInput from \"@/components/Input/CustomInput\";\nimport \"@/assets/scss/pages/_driver-tracking.scss\";\nimport { dateFormatOptions, timeFormatOptions } from \"@/constants/options\";\nimport FileUploader from \"@/components/FileUploader\";\nimport CredentialsInput from \"@/components/Input/CredentialsInput\";\nimport UserDetailsForm from \"@/components/Input/UserDetailsForm\";\nimport LocationSelector from \"@/components/Input/LocationSelector\";\nimport useUserLocation from \"@/hooks/useUserLocation\";\n\nconst BusinessForm = ({\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n  isFormSubmitting,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"userInfo\",\n  });\n  const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const { location: locationData, error: locationError } = useUserLocation();\n\n  const handleAddForm = () => {\n    append({\n      name: \"\",\n      designation: \"\",\n      mobileNumber: null,\n      email: \"\",\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"85%\" }}>\n        <div>{locationError && <p>{locationError}</p>}</div>\n        <div className=\"col-xl-3 mb-3\">\n          <label className=\"form-label\">\n            {t(\"businessGroupName\")} <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"groupName\"\n            name=\"groupName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"groupName\")}\n          />\n          <Error errorName={errors.groupName} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"tradeLicenseNumber\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"tradeLicenseNumber\"\n            name=\"tradeLicenseNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"tradeLicenseNumber\")}\n          />\n          <Error errorName={errors.tradeLicenseNumber} />\n        </div>\n        <div className=\"col-xl-3 mb-3 z-1\">\n          <label className=\"form-label\">{t(\"officeNo\")}</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"officeNumber\"\n            name=\"officeNumber\"\n            defaultValue={getValues(\"officeNumber\")}\n          />\n          <Error errorName={errors.officeNumber} />\n        </div>\n        <span\n          className=\"absolute\"\n          style={{\n            position: \"absolute\",\n            top: \"23%\",\n            right: \"-42%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <FileUploader\n            setValue={setValue}\n            register={register}\n            label=\"Business Group Logo\"\n            name=\"logo\"\n            getValue={getValues}\n            setLoading={setLoading}\n            loading={loading}\n            link={getValues(\"logo\")}\n          />\n          <Error errorName={errors.logo} />\n        </span>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">\n            {t(\"email\")}\n            <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            name=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues(\"email\")}\n            disabled={id ? true : false}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <LocationSelector\n          register={register}\n          setValue={setValue}\n          errors={errors}\n          getValues={getValues}\n          locationData={locationData}\n          id={id}\n          showCity={true}\n          Comptype={\"businessGroupId\"}\n        />\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"dateFormat\")}</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue?.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={{\n                  control: (base) => ({\n                    ...base,\n                    padding: \".25rem 0 \",\n                  }),\n                }}\n                value={{ value, label: value }}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n        <div className=\"col-xl-3 mb-3 \">\n          <label className=\"form-label\">{t(\"timeFormat\")}</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={{\n                  control: (base) => ({\n                    ...base,\n                    padding: \".25rem 0 \",\n                  }),\n                }}\n                value={{ value, label: value }}\n                defaultValue={timeFormatOptions[1]}\n              />\n            )}\n          />\n        </div>\n        <CredentialsInput\n          heading={t(\"businessLoginDetails\")}\n          register={register}\n          errors={errors}\n          id={id}\n          getValues={getValues}\n        />\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: \"2rem 0\",\n          }}\n        >\n          <h3>{t(\"contactDetails\")}</h3>\n          <Button\n            type=\"button\"\n            onClick={handleAddForm}\n            style={{ width: \"10%\" }}\n          >\n            {\" \"}\n            ADD\n          </Button>\n        </div>\n        {fields.map((field, index) => (\n          <UserDetailsForm\n            key={field.id}\n            field={field}\n            index={index}\n            register={register}\n            getValues={getValues}\n            errors={errors}\n            fields={fields}\n            remove={remove}\n            id={id}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          disabled={loading || isFormSubmitting}\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          {t(\"submit\")}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessForm;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useUserLocation = () => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLocation = async () => {\n    try {\n      setIsLoading(true);\n      const API_KEY = process.env.REACT_APP_BIG_DATA_CLOUD_API_KEY;\n      if (!API_KEY) {\n        throw new Error(\"API key is missing.\");\n      }\n\n      const response = await axios.get(\n        `https://api.bigdatacloud.net/data/ip-geolocation?key=${API_KEY}`\n      );\n\n      setLat(response.data.location.latitude);\n      setLng(response.data.location.longitude);\n      const locationData = response.data;\n      setLocation(locationData);\n      setError(null); // Reset error if location is successfully obtained\n    } catch (error) {\n      setError(\"Error getting location data: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return { location, lat, lng, isLoading, error };\n};\n\nexport default useUserLocation;\n"],"names":["_ref","heading","register","errors","id","getValues","showPassword","setShowPassword","useState","_jsxs","className","children","_jsx","t","CustomInput","type","label","name","placeholder","defaultValue","disabled","Error","errorName","userName","onClick","LuEyeOff","LuEye","password","countryCode","customStyle","setValue","dValues","Comptype","useTranslation","timezones","setTimezones","selectedTimezone","setSelectedTimezone","useEffect","country","ct","timezoneList","length","map","timezone","concat","getGMTOffset","value","_dValues$companyId","_dValues$businessGrou","companyId","businessGroupId","console","log","offsetMinutes","utcOffset","offsetHours","Math","abs","floor","offsetMinutesRemainder","toString","padStart","htmlFor","Select","styles","onChange","selectedOption","options","customStyles","control","base","padding","locationData","showCity","selectedCountry","setSelectedCountry","selectedState","setSelectedState","countriesList","setCountriesList","stateList","setStateList","setCountryCode","GetCountries","then","result","city","option","countryOptions","find","handleCountryChange","state","_locationData$country","_locationData$country2","_locationData$country3","_locationData$country4","_locationData$locatio","_locationData$locatio2","_locationData$locatio3","_locationData$country5","isoAlpha3","isoName","isoAlpha2","location","principalSubdivision","selectedCountryId","isoToCountryId","GetState","isoCode","iso3","async","selectedIsoCode","iso2","getStateName","endsWith","replace","stateOptions","_Fragment","selectedStateId","TimeZoneSelector","_errors$userInfo","_errors$userInfo$inde","_errors$userInfo2","_errors$userInfo2$ind","_errors$userInfo3","_errors$userInfo3$ind","_errors$userInfo4","_errors$userInfo4$ind","field","fields","index","remove","handleRemoveForm","SVGICON","Delete","userInfo","designation","min","onInput","e","temp","max","target","mobileNumber","email","onSubmit","handleSubmit","isFormSubmitting","append","useFieldArray","loading","setLoading","useParams","error","locationError","useUserLocation","style","width","groupName","tradeLicenseNumber","officeNumber","position","top","right","overflow","FileUploader","getValue","link","logo","LocationSelector","Controller","render","_ref2","ref","newValue","dateFormatOptions","dateFormat","_ref3","timeFormatOptions","CredentialsInput","display","justifyContent","margin","Button","handleAddForm","UserDetailsForm","lat","setLat","lng","setLng","setError","setLocation","isLoading","setIsLoading","API_KEY","process","response","axios","get","data","latitude","longitude","message","getLocation"],"sourceRoot":""}