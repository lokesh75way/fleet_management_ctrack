{"version":3,"file":"static/js/9078.ee9cb3f5.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/BusinessGroupTabs/MyAccount.jsx","jsx/components/TabComponent/BusinessGroupTabs/UserSetting.jsx","jsx/pages/admin/settings/CreateForms/BusinessForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport DummyData from \"../../../../users.json\";\nconst MyAccount = ({\n  data,\n  setValue,\n  getValues,\n  register,\n  onSubmit,\n  handleSubmit,\n  errors,\n  control,\n}) => {\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [tempValue, setTempValue] = useState();\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \",\n    }),\n  };\n\nconst user = localStorage.getItem('loginDetails-email')\nconsole.log(getValues())\n\n\n\n \n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n          <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Business Group Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            required\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={getValues(\"userName\")}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Password Recovery Email<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Password Recovery Email\"\n            name=\"passwordRecoveryEmail\"\n            placeholder=\"\"\n            defaultValue={getValues('passwordRecoveryEmail')}\n          />\n          <Error errorName={errors.passwordRecoveryEmail} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Email<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"email\"\n            label=\"email\"\n            placeholder=\"\"\n            defaultValue={getValues('email')}\n          />\n          <Error errorName={errors.email} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Email<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            name=\"helpDeskEmail\"\n            label=\"Help Desk Email\"\n            placeholder=\"\"\n            defaultValue={getValues('helpDeskEmail')}\n          />\n          <Error errorName={errors.helpDeskEmail} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Help Desk Telephone Number<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Help Desk Telephone Number\"\n            name=\"helpDeskTelephoneNumber\"\n            placeholder=\"\"\n            defaultValue={getValues('helpDeskTelephoneNumber')}\n\n          />\n          <Error errorName={errors.helpDeskTelephoneNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Mobile Number<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            name=\"mobileNumber\"\n            label=\"Mobile Number\"\n            placeholder=\"\"\n            defaultValue={getValues('mobileNumber')}\n\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Whatsapp Contact Number<span className=\"text-danger\">*</span></label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            className=\"form-control\"\n            label=\"Whatsapp Contact Number\"\n            name=\"whatsappContactNumber\"\n            placeholder=\"\"\n            defaultValue={getValues('whatsappContactNumber')}\n\n          />\n          <Error errorName={errors.whatsappContactNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">\n            Country<span className=\"text-danger\">*</span>\n          </label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.id);\n              setIsStateDisabled(false)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n          {!getValues(\"country\") && <Error errorName={errors.country} />}\n        </div>\n        <div className={`${isStateDisabled ? 'col-xl-6 mb-3 pe-none':'col-xl-6 mb-3'}`}>\n          <label className=\"form-label\">\n            State<span className=\"text-danger\">*</span>\n          </label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.id);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues(\"state\") && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            City<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"City\"\n            name=\"city\"\n            placeholder=\"\"\n            defaultValue={getValues('city')}\n\n          />\n          <Error errorName={errors.city} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Zip Code<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Zip Code\"\n            name=\"zipCode\"\n            placeholder=\"\"\n            defaultValue={getValues('zipCode')}\n\n          />\n          <Error errorName={errors.zipCode} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street1<span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street1\"\n            name=\"street1\"\n            placeholder=\"\"\n            defaultValue={getValues('street1')}\n\n          />\n          <Error errorName={errors.street1} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n            Street2\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Street2\"\n            name=\"street2\"\n            placeholder=\"\"\n            defaultValue={getValues('street2')}\n\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Contact Person</label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Contact Person\"\n            name=\"contactPerson\"\n            placeholder=\"\"\n            defaultValue={getValues(\"contactPerson\")}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">\n            Fax Number\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Fax Number\"\n            name=\"faxNumber\"\n            placeholder=\"\"\n            defaultValue={getValues(\"faxNumber\")}\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  timeFormatOptions,\n  dateFormatOptions,\n  weekStartDayOptions,\n  unitOfDistanceOptions,\n  preferredCurrencyUnitOptions,\n  unitOfFuelOptions,\n  fuelEconomyScalingOptions,\n} from \"../VehicleTabs/Options\";\n\nconst UserSetting = ({ setValue, handleSubmit, onSubmit,errors, control }) => {\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Date Format</label>\n          <Controller\n            name=\"dateFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"dateFormat\", newValue.value)}\n                options={dateFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={dateFormatOptions[0]}\n              />\n            )}\n          />\n          <Error errorName={errors.dateFormat} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Time Format</label>\n          <Controller\n            name=\"timeFormat\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"timeFormat\", newValue.value)}\n                options={timeFormatOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={timeFormatOptions[0]}\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Unit of Distance</label>\n          <Controller\n            name=\"fuelEconomyScaling\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) =>\n                  setValue(\"unitOfDistance\", newValue.value)\n                }\n                options={unitOfDistanceOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={fuelEconomyScalingOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">Unit of Fuel</label>\n          <Controller\n            name=\"unitOfFuel\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => setValue(\"unitOfFuel\", newValue.value)}\n                options={unitOfFuelOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={unitOfFuelOptions[0]}\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"col-xl-6 mb-4\">\n          <label>Upload Logo</label>\n          <div className=\"dz-default dlab-message upload-img mb-3\">\n            <form action=\"#\" className=\"dropzone\">\n              <svg\n                width=\"41\"\n                height=\"40\"\n                viewBox=\"0 0 41 40\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M20.5 20V35\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M34.4833 30.6501C36.1088 29.7638 37.393 28.3615 38.1331 26.6644C38.8731 24.9673 39.027 23.0721 38.5703 21.2779C38.1136 19.4836 37.0724 17.8926 35.6111 16.7558C34.1497 15.619 32.3514 15.0013 30.4999 15.0001H28.3999C27.8955 13.0488 26.9552 11.2373 25.6498 9.70171C24.3445 8.16614 22.708 6.94647 20.8634 6.1344C19.0189 5.32233 17.0142 4.93899 15.0001 5.01319C12.9861 5.0874 11.015 5.61722 9.23523 6.56283C7.45541 7.50844 5.91312 8.84523 4.7243 10.4727C3.53549 12.1002 2.73108 13.9759 2.37157 15.959C2.01205 17.9421 2.10678 19.9809 2.64862 21.9222C3.19047 23.8634 4.16534 25.6565 5.49994 27.1667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M27.1666 26.6667L20.4999 20L13.8333 26.6667\"\n                  stroke=\"#DADADA\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <div className=\"fallback\">\n                <input name=\"file\" type=\"file\" multiple />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          onClick={handleSubmit(onSubmit)}\n          style={{ width: \"10%\" }}\n        >\n          {\" \"}\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSetting;\n","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../../../layouts/MainPagetitle\";\nimport MyAccount from \"../../../../components/TabComponent/BusinessGroupTabs/MyAccount\";\nimport UserSetting from \"../../../../components/TabComponent/BusinessGroupTabs/UserSetting\";\nimport ManagePassword from \"../../../../components/TabComponent/AdminProfileTabs/ManagePassword\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { businessGroupAccountSchema, companySettingSchema } from \"../../../../../yup\";\nimport { notifyError, notifySuccess } from \"../../../../../utils/toast\";\n\nconst BusinessForm = ({ Title, editData, setEditData }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"New Business Group\", \"Settings\",\"Change Password\"];\n  const component = [MyAccount, UserSetting,ManagePassword];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n  const { id } = useParams(); \n\n  // Fetch data from local storage when the id changes\n  useEffect(() => {\n    const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n    console.log(existingData, id)\n    const businessData = existingData.find((item) => item.id === parseInt(id, 10));\n    console.log(businessData, 'nuslkasd')\n    if (businessData) {\n      reset(businessData);\n    }\n  }, [id]);\n\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    reset,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(\n      activeIndex === 1 ?  companySettingSchema : businessGroupAccountSchema\n    ),\n  });\n\n  const onSubmit = (data) => {\n    if (activeIndex === totalTabs - 1) {\n      try {\n        const existingUserData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n        data.id = `${existingUserData.length + 1}`;\n        data.role = 'businessgroup';\n        data.parent = 'admin';\n        existingUserData.push(data);\n        localStorage.setItem(\"userJsonData\", JSON.stringify(existingUserData));\n        notifySuccess(\"New Business Group Created !\");\n        navigate(\"/business\");\n        return;\n      } catch (error) {\n        notifyError(\"Some error occured !!\");\n      }\n    }\n    \n    notifySuccess(\"Saved !\");\n    console.log('business group data',data);\n    setActiveIndex((prevIndex) => Math.min(prevIndex + 1, totalTabs - 1));\n  };\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"Business User\"\n        pageTitle={\"Create\"}\n        parentTitle={\"Business User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          handleSubmit={handleSubmit}\n                          onSubmit={onSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default BusinessForm;\n"],"names":["_ref","data","setValue","getValues","register","onSubmit","handleSubmit","errors","control","countryid","setCountryid","useState","stateid","setstateid","tempValue","setTempValue","isStateDisabled","setIsStateDisabled","localStorage","getItem","console","log","_jsxs","className","children","style","width","margin","_jsx","CustomInput","type","required","label","name","placeholder","defaultValue","Error","errorName","userName","passwordRecoveryEmail","email","helpDeskEmail","helpDeskTelephoneNumber","mobileNumber","whatsappContactNumber","CountrySelect","onChange","e","id","containerClassName","inputClassName","placeHolder","country","concat","background","StateSelect","state","htmlFor","city","zipCode","street1","display","justifyContent","Button","onClick","customStyles","base","padding","Controller","render","_ref2","field","value","ref","Select","newValue","options","dateFormatOptions","styles","dateFormat","_ref3","timeFormatOptions","_ref4","unitOfDistanceOptions","fuelEconomyScalingOptions","_ref5","unitOfFuelOptions","action","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","multiple","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","MyAccount","UserSetting","ManagePassword","totalTabs","length","navigate","useNavigate","useParams","useEffect","existingData","JSON","parse","businessData","find","item","parseInt","reset","formState","useForm","resolver","yupResolver","companySettingSchema","businessGroupAccountSchema","existingUserData","role","parent","push","setItem","stringify","notifySuccess","error","notifyError","prevIndex","Math","min","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}