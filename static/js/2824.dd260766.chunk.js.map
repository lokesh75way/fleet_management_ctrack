{"version":3,"file":"static/js/2824.dd260766.chunk.js","mappings":"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","sources":["jsx/components/Aikit/FineTuneJob.js","jsx/components/Aikit/FineTuneModels.js"],"sourcesContent":["import React, { useState } from 'react';                        \r\nimport {Link} from 'react-router-dom';\r\nimport Select from 'react-select';\r\n// import { SelectPicker } from 'rsuite';\r\n\r\nimport {Tooltip, OverlayTrigger} from 'react-bootstrap';\r\n\r\nimport { IMAGES, SVGICON } from '../../constant/theme';\r\n\r\nconst options = [    \r\n    { value: '1', label: 'Product' },\r\n    { value: '2', label: 'Post' },\r\n]\r\nconst options1 = [    \r\n    { value: '1', label: 'Post' },\r\n    { value: '2', label: 'Product' },\r\n]\r\nconst options2 = [    \r\n    { value: '1', label: 'Uncategorized' },\r\n    { value: '2', label: 'Categorized' },\r\n]\r\nconst options3 = [    \r\n    { value: '1', label: 'Draft' },\r\n    { value: '2', label: 'Categorized' },\r\n]\r\n\r\nconst data = [    \r\n    { icon : IMAGES.England , value: 1, label: 'England', },\r\n    { icon : IMAGES.IndiaFlag, value: 2, label: 'India',  },\r\n    { icon : IMAGES.Arab, value: 3, label: 'UAE' },\r\n]\r\n\r\nconst FineTuneJob = () => {\r\n   \r\n    const [selectedOption, setSelectedOption] = useState(data[0]);\r\n    const handleChange = e => {\r\n        setSelectedOption(e);\r\n    }\r\n\r\n    // const renderMenuItem = (label, item) => {\r\n    //     return (\r\n    //       <div>\r\n    //         <img src={item.icon} alt={label} style={{ width: 20, marginRight: 10 }} />\r\n    //         {label}\r\n    //       </div>\r\n    //     );\r\n    //   };\r\n    return (\r\n        <div className=\"card overflow-hidden h-auto\">\r\n            <div className=\"card-header border-0 pb-0\">\r\n                <h4 className=\"heading mb-0\">Create Repurpose Job</h4>\r\n                \r\n                <Select                \r\n                    className=\"custom-react-select img-select\"    \r\n                    isSearchable={false}\r\n                    value={selectedOption}\r\n                    options={data}\r\n                    onChange={handleChange}\r\n                    getOptionLabel={e => (\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>                           \r\n                            <img src={e.icon} alt=\"\" style={{ width: 20, marginRight: 5 }} />\r\n                            <span style={{ marginLeft: 5 }}>{e.label}</span>\r\n                        </div>\r\n                    )}\r\n                />\r\n                \r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"mb-3\">\r\n                    <span>Choose content type:</span>                    \r\n                    <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Enter your RapidAPI key for Subtitles for YouTube here.!</Tooltip>}>\r\n                       {SVGICON.HoverCircle}\r\n                    </OverlayTrigger>\r\n                    <div className=\"my-2 d-flex align-items-center flex-wrap\">\r\n                        <Link to={\"#\"} className=\" btn btn-outline-primary me-3\">\r\n                            {SVGICON.PostArticle}{\" \"}\r\n                            Post or article\r\n                        </Link>\r\n                        <Link to={\"#\"} className=\" btn btn-outline-primary\">\r\n                           {SVGICON.YouTube} {\" \"}\r\n                            YouTube video\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">URL of article, post or video</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Find My Device\" />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Posts to generate:</label>\r\n                            <input type=\"number\" className=\"form-control\" id=\"exampleFormControlInput2\" placeholder=\"1\" />\r\n                        </div>\r\n                        <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Post type</label>\r\n                        <div className=\"mb-3\">                            \r\n                             <Select options={options}  \r\n                                className=\"custom-react-select\"\r\n                                defaultValue={options[0]}\r\n                                isSearchable={false}\r\n                            />\r\n                        </div>\r\n                        <label className=\"form-label\">Post type</label>\r\n                        <div className=\"mb-3\">                            \r\n                            <Select options={options1}  \r\n                                className=\"custom-react-select\"\r\n                                defaultValue={options1[0]}\r\n                                isSearchable={false}\r\n                            />\r\n                        </div>\r\n                        <label className=\"form-label\">Post category</label>\r\n                        <div className=\"mb-3\">                            \r\n                            <Select options={options2}  \r\n                                className=\"custom-react-select\"\r\n                                defaultValue={options2[0]}\r\n                                isSearchable={false}\r\n                            />\r\n                        </div>\r\n                        <label className=\"form-label\">Post status</label>\r\n                        <div className=\"mb-3\">                            \r\n                            <Select options={options3}  \r\n                                className=\"custom-react-select\"\r\n                                defaultValue={options3[0]}\r\n                                isSearchable={false}\r\n                            />\r\n                        </div>\r\n                        <hr style={{marginLeft:\"-21px\", marginRight:\"-21px\" }}/>\r\n                        <div className=\"btn-group ai-tag-group\" role=\"group\" >\r\n                            <input type=\"checkbox\" className=\"btn-check\" id=\"btncheck1\" />\r\n                            <label className=\"btn btn-outline-primary btn-sm mb-0\" htmlFor=\"btncheck1\">Include featured image</label>\r\n                        </div>\r\n                        <hr style={{marginLeft:\"-21px\", marginRight:\"-21px\", marginBottom:\"0\"}} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-footer border-0\">\r\n                <div className=\"text-center\">\r\n                    <Link to={\"#\"} className=\"btn btn-primary\">\r\n                        {SVGICON.Refresh}{\" \"}\r\n                        Repurpose\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FineTuneJob;","import React, {useState, useRef, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Tab, Nav} from 'react-bootstrap';\r\n\r\n//\r\nimport PageTitle from '../../layouts/PageTitle';\r\nimport MainContent from './MainContent';\r\nimport TopMenus from './TopMenus';\r\nimport FineTuneJob from './FineTuneJob';\r\nimport Prompts from './Prompts';\r\n\r\nconst schedulerTable = [\r\n    { modal:'lion'},\r\n    { modal:'Tegr'},\r\n    { modal:'Fres'},\r\n    { modal:'Tiney'},\r\n    { modal:'lion'},\r\n    { modal:'Tegr'},\r\n    { modal:'Fres'},\r\n    { modal:'Tiney'},\r\n    { modal:'lion'},\r\n    { modal:'Tegr'},\r\n    { modal:'Fres'},\r\n    { modal:'Tiney'},\r\n    { modal:'Tiney'},\r\n    { modal:'lion'},\r\n    { modal:'Tegr'},\r\n    { modal:'Fres'},\r\n    { modal:'Tiney'},\r\n    \r\n];\r\n\r\nconst numb = [3, 6, 13, 15];\r\n\r\nconst FineTuneModels = () => {\r\n    const [data, setData] = useState(\r\n\t\tdocument.querySelectorAll(\"#fine-tbl_wrapper tbody tr\")\r\n\t);\r\n\tconst sort = 10;\r\n\tconst activePag = useRef(0);\r\n\tconst [test, settest] = useState(0);\r\n\tconst chageData = (frist, sec) => {\r\n\t\tfor (var i = 0; i < data.length; ++i) {\r\n\t\t\tif (i >= frist && i < sec) {\r\n\t\t\t\tdata[i].classList.remove(\"d-none\");\r\n\t\t\t} else {\r\n\t\t\t\tdata[i].classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n   \r\n    useEffect(() => {\r\n      setData(document.querySelectorAll(\"#fine-tbl_wrapper tbody tr\"));\r\n\t}, [test]);\r\n\r\n   activePag.current === 0 && chageData(0, sort);\r\n   let paggination = Array(Math.ceil(data.length / sort))\r\n      .fill()\r\n      .map((_, i) => i + 1);\r\n\tconst onClick = (i) => {\r\n\t\tactivePag.current = i;\r\n\t\tchageData(activePag.current * sort, (activePag.current + 1) * sort);\r\n\t\tsettest(i);\r\n\t};\r\n    return (\r\n        <>\r\n            <PageTitle activeMenu={'Fine-tune Models'} motherMenu={'AiKit'} />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xl-12\">                        \r\n                        <MainContent  detail=\"This is a demo of AIKit plugin made for you to test the experience of using the plugin.\" \r\n                            subtitle={`This is a demo of AIKit plugin made for you to test the experience of using the plugin. Text & images generated in this demo are dummy. In real life, AIKit will call OpenAI API and generate relevant text and images based on your prompts. `}\r\n                        />                            \r\n\t\t\t\t\t\t<TopMenus  id={6}/>\r\n                        <Tab.Container defaultActiveKey={'Job'}>\r\n                            <div className=\"card h-auto\">\r\n                                <div className=\"card-body ai-tabs-1 py-2\">\r\n                                    <Nav as=\"ul\" className=\"nav nav-tabs align-items-end\">\r\n                                        <Nav.Item as=\"li\" >\r\n                                            <Nav.Link className=\"nav-link\" eventKey=\"Create\" type=\"button\">Create Fine-tune Job</Nav.Link >\r\n                                        </Nav.Item>\r\n                                        <Nav.Item as=\"li\" >\r\n                                            <Nav.Link eventKey=\"Job\" type=\"button\" >Jobs<span className=\"badge badge-circle badge-light light ms-2\">5</span></Nav.Link >\r\n                                        </Nav.Item>\t\t\t\t\t\t\t\t  \r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey={'Create'}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-4\">\r\n                                            <FineTuneJob />\r\n                                        </div>\r\n                                        <div className=\"col-xl-8\">\r\n                                            <Prompts />\r\n                                        </div>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey={'Job'}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body p-0\">                                           \r\n                                            <div id=\"fine-tbl_wrapper\" className=\"table-responsive dataTables_wrapper active-projects style-1\">\t\t\t\t\t\t\t\t\r\n                                                <table  id=\"empoloyees-tblwrapper\" className=\"table dataTable dataTables_wrapper no-footer mb-0\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Model Name Suffix</th>\r\n                                                            <th>Model Name</th>\r\n                                                            <th>Base Model</th>\r\n                                                            <th>Date created</th>\r\n                                                            <th>Status</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {schedulerTable.map((item, ind)=>(\r\n                                                            <tr key={ind}>                                                                \r\n                                                                <td className=\"text-black\">Write a rat story</td>\r\n                                                                <td>\r\n                                                                    {item.modal}\r\n                                                                </td>\r\n                                                                \r\n                                                                <td>hourly</td>\r\n                                                                <td>4:50 AM Nov 11, 2023</td>\r\n                                                                <td>\r\n                                                                {\r\n                                                                  numb.includes(ind) ?  \r\n                                                                  <span className=\"badge badge-success\">Success</span>\r\n                                                                  :\r\n                                                                  <span className=\"badge badge-light\">Pending training data</span>\r\n                                                                }\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <Link to={\"#\"} className=\"btn btn-primary light btn-sharp\">\r\n                                                                        <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                            <path d=\"M0.625 8C0.625 8 3.125 3 7.5 3C11.875 3 14.375 8 14.375 8C14.375 8 11.875 13 7.5 13C3.125 13 0.625 8 0.625 8Z\" stroke=\"var(--primary)\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                            <path d=\"M7.5 9.875C8.53553 9.875 9.375 9.03553 9.375 8C9.375 6.96447 8.53553 6.125 7.5 6.125C6.46447 6.125 5.625 6.96447 5.625 8C5.625 9.03553 6.46447 9.875 7.5 9.875Z\" stroke=\"var(--primary)\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                        </svg>\r\n                                                                    </Link>{\" \"}\r\n                                                                    <Link to={\"#\"} className=\"btn btn-danger light btn-sharp\">\r\n                                                                        <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                            <path d=\"M1.875 4.25H3.125H13.125\" stroke=\"#FF5B5B\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                                            <path d=\"M11.875 4.25V13C11.875 13.3315 11.7433 13.6495 11.5089 13.8839C11.2745 14.1183 10.9565 14.25 10.625 14.25H4.375C4.04348 14.25 3.72554 14.1183 3.49112 13.8839C3.2567 13.6495 3.125 13.3315 3.125 13V4.25M5 4.25V3C5 2.66848 5.1317 2.35054 5.36612 2.11612C5.60054 1.8817 5.91848 1.75 6.25 1.75H8.75C9.08152 1.75 9.39946 1.8817 9.63388 2.11612C9.8683 2.35054 10 2.66848 10 3V4.25\" stroke=\"#FF5B5B\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                                            <path d=\"M6.25 7.375V11.125\" stroke=\"#FF5B5B\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                                            <path d=\"M8.75 7.375V11.125\" stroke=\"#FF5B5B\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                                        </svg>\r\n                                                                    </Link>\r\n                                                                    \r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\t\t\t\t\t\t\t\t\t\t\t\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\r\n                                                    <div className=\"dataTables_info\">\r\n                                                        Showing {activePag.current * sort + 1} to{\" \"}\r\n                                                        {data.length > (activePag.current + 1) * sort\r\n                                                            ? (activePag.current + 1) * sort\r\n                                                            : data.length}{\" \"}\r\n                                                        of {data.length} entries\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className=\"dataTables_paginate paging_simple_numbers\"\r\n                                                        id=\"example2_paginate\"\r\n                                                    >\r\n                                                        <Link\r\n                                                            className=\"paginate_button previous disabled\"\r\n                                                            to=\"#\"\r\n                                                            onClick={() =>\r\n                                                            activePag.current > 0 &&\r\n                                                            onClick(activePag.current - 1)\r\n                                                            }\r\n                                                        >\r\n                                                            <i className=\"fa-solid fa-angle-left\" />\r\n                                                        </Link>\r\n                                                        <span>\r\n                                                            {paggination.map((number, i) => (\r\n                                                            <Link\r\n                                                                key={i}\r\n                                                                to=\"#\"\r\n                                                                className={`paginate_button  ${\r\n                                                                    activePag.current === i ? \"current\" : \"\"\r\n                                                                } `}\r\n                                                                onClick={() => onClick(i)}\r\n                                                            >\r\n                                                                {number}\r\n                                                            </Link>\r\n                                                            ))}\r\n                                                        </span>\r\n                                                        <Link\r\n                                                            className=\"paginate_button next\"\r\n                                                            to=\"#\"\r\n                                                            onClick={() =>\r\n                                                            activePag.current + 1 < paggination.length &&\r\n                                                                onClick(activePag.current + 1)\r\n                                                            }\r\n                                                        >\r\n                                                            <i className=\"fa-solid fa-angle-right\" />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div> \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Tab.Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FineTuneModels;"],"names":["options","value","label","options1","options2","options3","data","icon","IMAGES","England","IndiaFlag","Arab","FineTuneJob","selectedOption","setSelectedOption","useState","_jsxs","className","children","_jsx","Select","isSearchable","onChange","e","getOptionLabel","style","display","alignItems","src","alt","width","marginRight","marginLeft","OverlayTrigger","overlay","Tooltip","id","SVGICON","HoverCircle","Link","to","PostArticle","YouTube","htmlFor","type","placeholder","defaultValue","role","marginBottom","Refresh","schedulerTable","modal","numb","FineTuneModels","setData","document","querySelectorAll","sort","activePag","useRef","test","settest","chageData","frist","sec","i","length","classList","remove","add","useEffect","current","paggination","Array","Math","ceil","fill","map","_","onClick","_Fragment","PageTitle","activeMenu","motherMenu","MainContent","detail","subtitle","TopMenus","Tab","Container","defaultActiveKey","Nav","as","Item","eventKey","Content","Pane","Prompts","item","ind","includes","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","number"],"sourceRoot":""}