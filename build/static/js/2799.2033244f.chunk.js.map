{"version":3,"file":"static/js/2799.2033244f.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {  Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  featureTemplateOptions,\n} from \"../VehicleTabs/Options\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\nimport useStorage from \"../../../../hooks/useStorage\";\nimport '../../../../scss/pages/_driver-tracking.scss'\n\nconst Account = ({ handleNext, register, setValue, onSubmit, handleSubmit, getValues, errors, control}) => {\n  \n  const {checkUser} = useStorage()\n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n  const [isStateDisabled, setIsStateDisabled] = useState(true);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \"0.25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n\n  const { id } = useParams();\n\n\n  const userData = JSON.parse(localStorage.getItem('userJsonData'))\n\n  const newData = userData.filter(data => data.id === parseInt(id,10));\n\n  const [filteredUserData,setFilteredUserData] = useState(newData);\n\n  \n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n      <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n           Email  <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"email\"\n            register={register}\n            label=\"Email\"\n            className=\"form-control\"\n            name=\"email\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].email : ''}\n            placeholder=\"\"\n          />\n           <Error errorName={errors.email} />\n        </div>\n      <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].userName : ''}\n          />\n          <Error errorName={errors.userName} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Mobile Number <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].contact : ''}\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country<span className=\"text-danger\">*</span></label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n              setIsStateDisabled(false)\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white customSelectHeight\"\n            placeHolder=\"Select Country\"\n          />\n         { !getValues('country') && <Error errorName={errors.country} />}\n        </div>\n        <div className={`${isStateDisabled ? 'col-xl-6 mb-3 pe-none':'col-xl-6 mb-3'}`}>\n          <label className=\"form-label\">State<span className=\"text-danger\">*</span></label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white customSelectHeight\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues('state') && <Error errorName={errors.state} />}\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Password\"\n            name=\"password\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].password : ''}\n          />\n          <Error errorName={errors.password} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Confirm Password <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            placeholder=\"\"\n            defaultValue={filteredUserData[0] ? filteredUserData[0].confirmPassword : ''}\n          />\n          <Error errorName={errors.confirmPassword} />\n        </div>\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Feature Template <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"featureTemplate\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) => {setTempValue(newValue.label); setValue(\"featureTemplate\", newValue.label)}}\n                options={featureTemplateOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={featureTemplateOptions[0]} \n              />\n            )}\n          />\n          {!getValues('featureTemplate') && <Error errorName={errors.featureTemplate} />}\n        </div>\n        \n        </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button type=\"submit\" onClick={handleSubmit(onSubmit)} style={{ width: \"10%\" }}> Submit</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {subUserAccountSchema} from '../../../yup'\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\nimport useStorage from \"../../../hooks/useStorage\";\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const {checkRole,checkUserName} = useStorage()\n  const role = checkRole()\n  const userName = checkUserName()\n  const tabHeading = [\"Account\"];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n  const navigate = useNavigate()\n\n  const {\n    register,\n    formState: { errors },\n    setValue,\n    getValues,\n    control,\n    handleSubmit,\n  } = useForm({\n    resolver: yupResolver(subUserAccountSchema),\n  });\n\n  const onSubmit = (data) => {\n    try {\n      const existingData = JSON.parse(localStorage.getItem(\"userJsonData\"));\n      data.id = existingData.length + 1;\n      data.role = \"user\";\n      data.parent = userName;\n      data.type = role;\n      existingData.push(data);\n      localStorage.setItem(\"userJsonData\", JSON.stringify(existingData));\n      notifySuccess(\"User created successfully !!\");\n      navigate('/subUser')\n    } catch (error) {\n      notifyError(\"Error Occured !!\");\n      navigate('/subUser')\n    }\n  }\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={\"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","checkUser","useStorage","tempValue","setTempValue","useState","countryid","setCountryid","stateid","setstateid","isStateDisabled","setIsStateDisabled","customStyles","base","padding","id","useParams","newData","JSON","parse","localStorage","getItem","filter","data","parseInt","filteredUserData","setFilteredUserData","_jsxs","className","children","style","width","margin","htmlFor","_jsx","CustomInput","type","label","name","defaultValue","email","placeholder","Error","errorName","userName","contact","mobileNumber","CountrySelect","onChange","e","containerClassName","inputClassName","placeHolder","country","concat","background","StateSelect","state","password","confirmPassword","Controller","rules","required","render","_ref2","field","value","ref","Select","newValue","options","featureTemplateOptions","styles","featureTemplate","display","justifyContent","Button","onClick","Title","editData","setEditData","activeIndex","setActiveIndex","checkRole","checkUserName","role","tabHeading","component","Account","navigate","length","useNavigate","formState","useForm","resolver","yupResolver","subUserAccountSchema","existingData","parent","push","setItem","stringify","notifySuccess","error","notifyError","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}