{"version":3,"file":"static/js/8831.05294747.chunk.js","mappings":"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","sources":["jsx/components/TabComponent/SubUserTab/Account.jsx","jsx/pages/CreateForms/SubUserForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {  Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport Error from \"../../Error/Error\";\nimport {\n  branchOptions,\n} from \"../VehicleTabs/Options\";\nimport CustomInput from \"../../Input/CustomInput\";\nimport { CountrySelect, StateSelect } from \"react-country-state-city/dist/cjs\";\n\nconst Account = ({ handleNext, register, setValue, onSubmit, handleSubmit, getValues, errors, control}) => {\n  \n  const [tempValue, setTempValue] = useState();\n  const [countryid, setCountryid] = useState(0);\n  const [stateid, setstateid] = useState(0);\n\n  const customStyles = {\n    control: (base) => ({\n      ...base,\n      padding: \".25rem 0 \", // Adjust the height as needed\n    }),\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"row\" style={{ width: \"70%\", margin: \"auto\" }}>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Branch <span className=\"text-danger\">*</span>\n          </label>\n          <Controller\n            name=\"branch\"\n            control={control}\n            render={({ field: { onChange, value, name, ref } }) => (\n              <Select\n                onChange={(newValue) =>{setTempValue(newValue.value); setValue(\"branch\", newValue.value)}}\n                options={branchOptions}\n                ref={ref}\n                name={name}\n                styles={customStyles}\n                defaultValue={branchOptions[0]}\n              />\n            )}\n          />\n          { !getValues('branch') && <Error errorName={errors.branch} />}\n        </div>\n\n\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">Country<span className=\"text-danger\">*</span></label>\n          <CountrySelect\n            onChange={(e) => {\n              setCountryid(e.id);\n              setValue(\"country\", e.name);\n            }}\n            containerClassName=\"bg-white\"\n            inputClassName=\"border border-white\"\n            placeHolder=\"Select Country\"\n          />\n         { !getValues('country') && <Error errorName={errors.country} />}\n        </div>\n        <div className=\"col-xl-6 mb-3\">\n          <label className=\"form-label\">State<span className=\"text-danger\">*</span></label>\n          <div style={{ background: \"white\" }}>\n            <StateSelect\n              countryid={countryid}\n              onChange={(e) => {\n                setstateid(e.id);\n                setValue(\"state\", e.name);\n              }}\n              containerClassName=\"bg-white\"\n              inputClassName=\"border border-white\"\n              placeHolder=\"Select State\"\n            />\n          </div>\n          {!getValues('state') && <Error errorName={errors.state} />}\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"User Name\"\n            name=\"userName\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.userName} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Confirm User Name <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Confirm User Name\"\n            name=\"confirmUserName\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.confirmUserName} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Age <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"number\"\n            register={register}\n            label=\"Age\"\n            name=\"age\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.age} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Mobile Number <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Mobile Number\"\n            name=\"mobileNumber\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.mobileNumber} />\n        </div>\n\n        <div className=\"col-xl-6 mb-3 \">\n          <label className=\"form-label\">\n            Experience <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"text\"\n            register={register}\n            label=\"Experience\"\n            name=\"experience\"\n            placeholder=\"\"\n          />\n          <Error errorName={errors.experience} />\n        </div>\n\n      \n        <div className=\"col-xl-6 mb-3\">\n          <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">\n          Password Recovery Email  <span className=\"text-danger\">*</span>\n          </label>\n          <CustomInput\n            type=\"password\"\n            register={register}\n            label=\"Password Recovery Email\"\n            className=\"form-control\"\n            name=\"passwordRecoveryEmail\"\n            placeholder=\"\"\n          />\n           <Error errorName={errors.passwordRecoveryEmail} />\n        </div>\n        </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"2rem 0\",\n        }}\n      >\n        <Button type=\"submit\" onClick={handleSubmit(onSubmit)} style={{ width: \"10%\" }}> Submit</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown, Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport \"react-country-state-city/dist/react-country-state-city.css\";\nimport MainPagetitle from \"../../layouts/MainPagetitle\";\nimport useDriverSubmit from \"../../../hooks/useDriverSubmit\";\nimport Account from \"../../components/TabComponent/SubUserTab/Account\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {subUserAccuntSchema} from '../../../yup'\n\nconst SubUserForm = ({ Title, editData, setEditData }) => {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabHeading = [\"Account\"];\n  const component = [Account];\n  const totalTabs = tabHeading.length;\n\n  const {register, formState:{errors}, setValue, getValues, control, handleSubmit} = useForm({\n    resolver: yupResolver( subUserAccuntSchema)\n  })\n\n  const onSubmit = (data)=>{\n    console.log(data)\n    const existingData = JSON.parse(localStorage.getItem('userData'));\n    data.id  = existingData.length +1;\n    existingData.push(data)\n    localStorage.setItem('userData',JSON.stringify(existingData))\n    return;\n  }\n  return (\n    <>\n      <MainPagetitle\n        mainTitle=\"User\"\n        pageTitle={\"Create\"}\n        parentTitle={\"User\"}\n      />\n      <div className=\"m-2 p-2\">\n        <FormProvider>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"default-tab\">\n              <Tab.Container defaultActiveKey={tabHeading[0].toLowerCase()}>\n                <Nav as=\"ul\" className=\"nav-tabs\">\n                  {tabHeading.map((data, i) => (\n                    <Nav.Item as=\"li\" key={i}>\n                      <Nav.Link\n                        style={{ padding: \".5rem 2rem\" }}\n                        eventKey={data.toLowerCase()}\n                        active={i === activeIndex}\n                        onClick={() => setActiveIndex(i)}\n                      >\n                        {data}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ))}\n                </Nav>\n                <Tab.Content className=\"pt-4\">\n                  {tabHeading.map((data, i) => {\n                    const Component = component[i];\n                    return (\n                      <Tab.Pane\n                        eventKey={data.toLowerCase()}\n                        key={i}\n                        active={i === activeIndex}\n                      >\n                        <Component\n                          data={tabHeading}\n                          control={control}\n                          setValue={setValue}\n                          register={register}\n                          getValues={getValues}\n                          errors={errors}\n                          onSubmit={onSubmit}\n                          handleSubmit={handleSubmit}\n                        />\n                      </Tab.Pane>\n                    );\n                  })}\n                </Tab.Content>\n              </Tab.Container>\n            </div>\n          </form>\n        </FormProvider>\n      </div>\n    </>\n  );\n};\nexport default SubUserForm;\n"],"names":["_ref","handleNext","register","setValue","onSubmit","handleSubmit","getValues","errors","control","tempValue","setTempValue","useState","countryid","setCountryid","stateid","setstateid","customStyles","base","padding","_jsxs","className","children","style","width","margin","_jsx","Controller","name","render","_ref2","field","onChange","value","ref","Select","newValue","options","branchOptions","styles","defaultValue","Error","errorName","branch","CountrySelect","e","id","containerClassName","inputClassName","placeHolder","country","background","StateSelect","state","CustomInput","type","label","placeholder","userName","confirmUserName","age","mobileNumber","experience","htmlFor","passwordRecoveryEmail","display","justifyContent","Button","onClick","Title","editData","setEditData","activeIndex","setActiveIndex","tabHeading","component","Account","formState","length","useForm","resolver","yupResolver","subUserAccuntSchema","data","console","log","existingData","JSON","parse","localStorage","getItem","push","setItem","stringify","_Fragment","MainPagetitle","mainTitle","pageTitle","parentTitle","FormProvider","Tab","Container","defaultActiveKey","toLowerCase","Nav","as","map","i","Item","Link","eventKey","active","Content","Component","Pane"],"sourceRoot":""}