{"version":3,"file":"static/js/9597.eb68b763.chunk.js","mappings":"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","sources":["jsx/components/Tables/GeofenceTable.jsx","jsx/pages/Geofence.jsx","services/api/GeoFenceService.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { MdDelete } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DeleteModal from '../Modal/DeleteModal';\n\nconst GeofenceTable = ({tableData,currentPage, itemsPerPage, onConfirmDelete, editDrawerOpen,page}) => {\n    console.log(tableData)\n    const startIndex = (currentPage - 1) * itemsPerPage + 1;\n    return (\n        <>\n            {tableData.map((item, index) => (\n                <tr key={index}>\n                    <td><span>{startIndex + index}</span></td>\n                    <td>\n                        <h6>{item.name}</h6>\n                    </td>\n                    <td><span>{item.category}</span></td>\n                    <td>\n                        <span>{item.contactNumber}</span>\n                    </td>\n                    <td>\n                        <span>{item.address}</span>\n                    </td>\n                    <td><span>{item.description}</span></td>\n                    <td>\n                        <span>{item.geofenceAccess}</span>\n                    </td>\n                    <td>\n                        <span className='d-flex justify-content-center'>\n                            <span className='cursor-pointer' onClick={() => editDrawerOpen(item._id)} ><FaEdit style={{ color: \"green\", fontSize: \"1.2rem\" }} /></span>\n                            <DeleteModal className='cursor-pointer ' onConfirmDelete={onConfirmDelete} id={item._id} ><MdDelete style={{ color: \"red\", fontSize: \"1.2rem\" }} /></DeleteModal>\n\n                        </span>\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n\nexport default GeofenceTable","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nimport MainPagetitle from \"../layouts/MainPagetitle\";\nimport InviteCustomer from \"../constant/ModalList\";\nimport EmployeeOffcanvas from \"../constant/EmployeeOffcanvas\";\nimport { GeofenceData } from \"../components/Tables/Tables\";\nimport GeofenceTable from \"../components/Tables/GeofenceTable\";\nimport { useTranslation } from \"react-i18next\";\nimport { notifyError, notifySuccess } from \"../../utils/toast\";\nimport {\n  deleteGeofenceData,\n  getGeofenceData,\n} from \"../../services/api/GeoFenceService\";\nimport usePagination from \"../../hooks/usePagination\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport clsx from \"clsx\";\nimport ReactPaginate from \"react-paginate\";\nimport { ICON } from \"../constant/theme\";\nimport Paginate from \"../components/Pagination/Paginate\";\n\nconst headers = [\n  { label: \"Employee ID\", key: \"emplid\" },\n  { label: \"Employee Name\", key: \"title\" },\n  { label: \"Department\", key: \"department\" },\n  { label: \"Email Address\", key: \"email\" },\n  { label: \"Contact Number\", key: \"contact\" },\n  { label: \"Gender\", key: \"gender\" },\n  { label: \"Location\", key: \"location\" },\n  { label: \"Status\", key: \"status\" },\n];\n\nconst Geofence = (ref) => {\n \n  const navigate = useNavigate();\n  const { page, nextPage, prevPage, goToPage, setCount, totalCount } =\n    usePagination();\n\n  const { isRtl } = useContext(ThemeContext);\n\n  const [tableData, setTableData] = useState([]);\n  const [editData, setEditData] = useState({\n    id: 0,\n    status: \"\",\n    title: \"\",\n    contact: 0,\n    age: 0,\n    drivingExperience: 0,\n    gender: \"\",\n    location: \"\",\n  });\n\n  const itemsPerPage=10;\n\n    const handlePageClick = ({ selected }) => {\n      goToPage(selected + 1); \n    };\n  \n    const startIndex = (page - 1) * itemsPerPage;\n    const slicedData = tableData.slice(startIndex, startIndex + itemsPerPage);\n\n  const getData = async () => {\n    try {\n      const { geofences, count } = await getGeofenceData(page);\n      setCount(count);\n      setTableData(geofences);\n    } catch (error) {\n      notifyError(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [page]);\n\n  const onConfirmDelete = async (id) => {\n    try {\n      const data = await deleteGeofenceData(id);\n      if(data.success){\n        notifySuccess(data.message);\n      }\n      getData(page);\n    } catch (error) {\n      notifyError(error)\n    }\n  \n  };\n  const editDrawerOpen = (item) => {\n    navigate(`/settings/geofence/map/edit/${item}`);\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MainPagetitle\n        mainTitle={t(\"geofence\")}\n        pageTitle={t(\"geofence\")}\n        parentTitle={t(\"settings\")}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"card\">\n              <div className=\"card-body p-0\">\n                <div className=\"table-responsive active-projects style-1 ItemsCheckboxSec shorting\">\n                  <div className=\"tbl-caption d-flex justify-content-between text-wrap align-items-center\">\n                    <h4 className=\"heading mb-0\">{t(\"geofence\")}</h4>\n                    <div className=\"d-flex\">\n                      <Link\n                        to={\"/settings/geofence/map\"}\n                        className=\"btn btn-primary btn-sm ms-1\"\n                        data-bs-toggle=\"offcanvas\"\n                        // onClick={() => employe.current.showModal()}\n                      >\n                        + {t(\"showMap\")}\n                      </Link>{\" \"}\n                    </div>\n                  </div>\n                  <div\n                    id=\"employee-tbl_wrapper\"\n                    className=\"dataTables_wrapper no-footer\"\n                  >\n                    <table\n                      id=\"empoloyees-tblwrapper\"\n                      className=\"table ItemsCheckboxSec dataTable no-footer mb-0\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>{t(\"geofenceID\")}</th>\n                          <th>{t(\"geofenceName\")}</th>\n                          <th>{t(\"geofenceType\")}</th>\n                          <th>{t(\"contactNumber\")}</th>\n                          <th>{t(\"address\")}</th>\n                          <th>{t(\"description\")}</th>\n                          <th>{t(\"geofenceAccess\")}</th>\n                          <th>{t(\"action\")}</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <GeofenceTable\n                          page={page}\n                          editData={editData}\n                          tableData={tableData}\n                          onConfirmDelete={onConfirmDelete}\n                          editDrawerOpen={editDrawerOpen}\n                          setEditData={setEditData}\n                          currentPage={page} \n                            itemsPerPage={itemsPerPage} \n                        />\n                      </tbody>\n                    </table>\n                    <div className=\"d-sm-flex text-center justify-content-between align-items-center\">\n                      <div className=\"dataTables_info\">\n                        {t(\"showing\")} {(page - 1) * 10 + 1} {t(\"to\")}{\" \"}\n                        {Math.min(page * 10, totalCount)} {t(\"of\")} {totalCount}{\" \"}\n                        {t(\"entries\")}\n                      </div>\n                      <div\n                        className=\"dataTables_paginate paging_simple_numbers\"\n                        id=\"example2_paginate\"\n                      >\n                        <Paginate\n                            totalCount={totalCount}\n                            itemsPerPage={itemsPerPage}\n                            handlePageClick={handlePageClick}\n                          />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Geofence;\n","import axios from \"axios\"\n\nexport const getGeofenceData =async  (pageNo = 1, limit = 10) => {\n    const data = await axios.get(`/geofences?page=${pageNo}&limit=${limit}`)\n    return data.data.data;\n}\n\nexport const deleteGeofenceData = async (id) => {\n   const {data} =  await axios.delete(`/geofences/${id}`)\n    return data;\n}\n\nexport const createGeofenceData = async (body) => {\n    const {data} = await axios.post('/geofences',body);\n    return data;\n}\n\nexport const getGeofenceById = async (id) => {\n    const {data} = await axios.get(`/geofences/${id}`);\n    return data;\n}\n\nexport const updateGeofence = async (id,body) => {\n    const {data} = await axios.patch(`/geofences/${id}`,body);\n    return data;\n}"],"names":["_ref","tableData","currentPage","itemsPerPage","onConfirmDelete","editDrawerOpen","page","console","log","startIndex","_jsx","_Fragment","children","map","item","index","_jsxs","name","category","contactNumber","address","description","geofenceAccess","className","onClick","_id","FaEdit","style","color","fontSize","DeleteModal","id","MdDelete","ref","navigate","useNavigate","nextPage","prevPage","goToPage","setCount","totalCount","usePagination","isRtl","useContext","ThemeContext","setTableData","useState","editData","setEditData","status","title","contact","age","drivingExperience","gender","location","getData","slice","async","geofences","count","getGeofenceData","error","notifyError","useEffect","t","useTranslation","MainPagetitle","mainTitle","pageTitle","parentTitle","Link","to","GeofenceTable","data","deleteGeofenceData","success","notifySuccess","message","concat","Math","min","Paginate","handlePageClick","selected","pageNo","arguments","length","undefined","limit","axios","get","delete","createGeofenceData","post","body","getGeofenceById","updateGeofence","patch"],"sourceRoot":""}