{"version":3,"file":"static/js/9037.0899f63b.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","jsx/components/bootstrap/Carousel.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import React, {useState} from 'react'\r\nimport { Fragment } from 'react';\r\nimport Highlight from \"react-highlight\";\r\n//import PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {Link} from 'react-scroll';\r\n\r\n/// Page Title\r\nimport PageTitle from '../../layouts/PageTitle'\r\n\r\n\r\n/// Images\r\nimport img1 from '../../../images/big/img1.jpg'\r\nimport img2 from '../../../images/big/img2.jpg'\r\nimport img3 from '../../../images/big/img3.jpg'\r\nimport img4 from '../../../images/big/img4.jpg'\r\nimport img5 from '../../../images/big/img5.jpg'\r\nimport img6 from '../../../images/big/img6.jpg'\r\nimport img7 from '../../../images/big/img7.jpg'\r\n\r\n/// Bootstrap\r\nimport { Row, Col, Card, Carousel, Nav, Tab } from 'react-bootstrap'\r\n\r\n/// carousel data\r\nconst carousel1 = [img1, img2, img3]\r\nconst carousel2 = [\r\n  { img: img2, text: 'First' },\r\n  { img: img3, text: 'Second' },\r\n  { img: img4, text: 'Third' },\r\n]\r\nconst carousel3 = [img3, img4, img5]\r\n\r\nconst carousel5 = [\r\n  { img: img5, text: 'First' },\r\n  { img: img6, text: 'Second' },\r\n  { img: img7, text: 'Third' },\r\n]\r\n\r\nconst sidebarLink = [\r\n  {title:'Slides', to:'slides-only'},\r\n  {title:'With Captions', to:'with-captions'},\r\n  {title:'Only Slides', to:'slides-only-1'},\r\n  {title:'Slides With Indicators', to:'slides-indicators'},\r\n  {title:'Slides With Captions', to:'slides-captions'},\r\n]\r\nconst UiCarousel = () => {\r\n  const [activeLink ,setActiveLink] = useState(0);\r\n  return (\r\n    <Fragment>\r\n      <PageTitle motherMenu='Bootstrap' activeMenu='Carousel' />\r\n      <div className=\"container-fluid\">\r\n          <div className=\"element-area\">\r\n            <div className=\"demo-view\">\r\n              <div className=\"container-fluid pt-0 ps-0 pe-lg-4 pe-0\">\r\n                <Row>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-only\" className=\"dz-card\">\r\n                        <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title'>Slides</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                              <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                                <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                                <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                              </Nav.Item>\r\n                            </Nav>   \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel1.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel1.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n      <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>    \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"with-captions\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                          <h4 className='card-intro-title'>With Captions</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>  \r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                  {carousel2.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        className='d-block w-100'\r\n                                        src={carousel.img}\r\n                                        alt={`${carousel.text} slide`}\r\n                                      />\r\n                                      <Carousel.Caption className=' d-none d-md-block'>\r\n                                        <h5>{carousel.text} slide label</h5>\r\n                                        <p>\r\n                                          Nulla vitae elit libero, a pharetra augue mollis\r\n                                          interdum.\r\n                                        </p>\r\n                                      </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel controls={false} indicators={false}>\r\n    {carousel2.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          className='d-block w-100'\r\n          src={carousel.img}\r\n          alt={\\`$\\{carousel.text} slide\\`}\r\n        />\r\n        <Carousel.Caption className=' d-none d-md-block'>\r\n          <h5>{carousel.text} slide label</h5>\r\n          <p>\r\n            Nulla vitae elit libero, a pharetra augue mollis\r\n            interdum.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight> \r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>  \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-only-1\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title'>Only Slides</h4>                        \r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header> \r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\"> \r\n                              <Card.Body className='p-4'>\r\n                                <Carousel controls={false} indicators={false}>\r\n                                  {carousel3.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                              </Tab.Pane>\r\n                              <Tab.Pane eventKey=\"Code\">\r\n                              <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel controls={false} indicators={false}>\r\n    {carousel3.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n\r\n                              </Tab.Pane>\r\n                            </Tab.Content>\r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-indicators\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title mb-4'>Slides With indicators</h4>\r\n                          \r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel1.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        src={carousel}\r\n                                        className='d-block w-100'\r\n                                        alt={`Slide ${i + 1}`}\r\n                                      />\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel1.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          src={carousel}\r\n          className='d-block w-100'\r\n          alt={\\`Slide $\\{i + 1}\\`}\r\n        />\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>   \r\n                      </Card>\r\n                    </Tab.Container> \r\n                  </Col>\r\n                  <Col xl={12}>\r\n                    <Tab.Container defaultActiveKey=\"Preview\">\r\n                      <Card name=\"slides-captions\" className=\"dz-card\">\r\n                          <Card.Header className=\"flex-wrap\">\r\n                            <h4 className='card-intro-title mb-4'>Slides With captions</h4>\r\n                            <Nav as=\"ul\" className=\"nav nav-tabs dzm-tabs\" id=\"myTab\" role=\"tablist\">\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" role=\"presentation\">\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Preview\">Preview</Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item as=\"li\" className=\"nav-item\" >\r\n                            <Nav.Link as=\"button\"  type=\"button\" eventKey=\"Code\">React</Nav.Link>\r\n                          </Nav.Item>\r\n                        </Nav>  \r\n                          </Card.Header>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Preview\">\r\n                              <Card.Body className='p-4'>\r\n                                <Carousel>\r\n                                  {carousel5.map((carousel, i) => (\r\n                                    <Carousel.Item key={i}>\r\n                                      <img\r\n                                        className='d-block w-100'\r\n                                        src={carousel.img}\r\n                                        alt={`${carousel.text} slide`}\r\n                                      />\r\n                                      <Carousel.Caption className=' d-none d-md-block'>\r\n                                        <h5>{carousel.text} slide label</h5>\r\n                                        <p>\r\n                                          Nulla vitae elit libero, a pharetra augue mollis\r\n                                          interdum.\r\n                                        </p>\r\n                                      </Carousel.Caption>\r\n                                    </Carousel.Item>\r\n                                  ))}\r\n                                </Carousel>\r\n                              </Card.Body>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Code\">\r\n                            <div className=\"card-body pt-0 p-0 code-area\">\r\n  <pre className=\"mb-0\"><code className=\"language-html\">\r\n  <Highlight>\r\n  {`\r\n  <Carousel>\r\n    {carousel5.map((carousel, i) => (\r\n      <Carousel.Item key={i}>\r\n        <img\r\n          className='d-block w-100'\r\n          src={carousel.img}\r\n          alt={\\`$\\{carousel.text} slide\\`}\r\n        />\r\n        <Carousel.Caption className=' d-none d-md-block'>\r\n          <h5>{carousel.text} slide label</h5>\r\n          <p>\r\n            Nulla vitae elit libero, a pharetra augue mollis\r\n            interdum.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    ))}\r\n  </Carousel>\r\n  `}\r\n  </Highlight>\r\n  </code></pre>\r\n  </div>\r\n                            </Tab.Pane>\r\n\r\n                          </Tab.Content>    \r\n                      </Card>\r\n                    </Tab.Container>  \r\n                  </Col>\r\n                </Row>               \r\n              </div>\r\n            </div>\r\n            <div className=\"demo-right \">\r\n                <div className=\"demo-right-inner dlab-scroll \" id=\"right-sidebar\">\r\n                    <h4 className=\"title\">Carousel</h4>\r\n                    <ul className=\"navbar-nav\" id=\"menu-bar\">\r\n                      {sidebarLink.map((item, ind)=>(\r\n                        <li key={ind}                          \r\n                        >\r\n                          <Link to={item.to} \r\n                            className={`scroll ${ind === activeLink ? 'active' :  ''} `}\r\n                            activeClass=\"active\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            onClick={()=>setActiveLink(ind)}\r\n                          > \r\n                            {item.title}\r\n                          </Link>\r\n                        </li>\r\n                      ))}                          \r\n                    </ul>\t\r\n                </div>\r\n            </div>\r\n          </div>      \r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UiCarousel\r\n","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\nconst MAX_DELAY_MS = 2 ** 31 - 1;\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  const delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(() => setChainedTimeout(handleRef, fn, timeoutAtMs), MAX_DELAY_MS);\n}\n\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\nexport default function useTimeout() {\n  const isMounted = useMounted();\n\n  // types are confused between node and web here IDK\n  const handleRef = useRef();\n  useWillUnmount(() => clearTimeout(handleRef.current));\n  return useMemo(() => {\n    const clear = () => clearTimeout(handleRef.current);\n    function set(fn, delayMs = 0) {\n      if (!isMounted()) return;\n      clear();\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n    return {\n      set,\n      clear,\n      handleRef\n    };\n  }, []);\n}","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["fn","deps","isFirst","useRef","useEffect","current","CarouselCaption","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","CarouselItem","finalClassName","Carousel","_ref2","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","interval","keyboard","onKeyDown","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","children","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","useState","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","index","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","concat","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","Math","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","_jsxs","map","type","onClick","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","Item","carousel1","img1","img2","img3","carousel2","img","text","img4","carousel3","img5","carousel5","img6","img7","sidebarLink","title","to","UiCarousel","activeLink","setActiveLink","Fragment","PageTitle","motherMenu","activeMenu","Row","Col","xl","Tab","Container","defaultActiveKey","Card","name","Header","Nav","id","role","Link","eventKey","Content","Pane","Body","carousel","i","src","alt","Highlight","item","ind","activeClass","spy","smooth","MAX_DELAY_MS","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","isMounted","useMounted","useWillUnmount","clearTimeout","clear","arguments","func","hasChildOfType","toArray","some"],"sourceRoot":""}