{"version":3,"file":"static/js/1830.e935b0d3.chunk.js","mappings":"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","sources":["../node_modules/sweetalert2/dist/sweetalert2.all.js"],"sourcesContent":["/*!\n* sweetalert2 v11.7.3\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    awaitingPromise: new WeakMap(),\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @param {string[]} items\n   * @returns {object}\n   */\n  const prefix = items => {\n    const result = {};\n    for (const i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n    return result;\n  };\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Filter the unique values into a new array\n   *\n   * @param {Array} arr\n   * @returns {Array}\n   */\n  const uniqueArray = arr => {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | Array} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {Array}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getConfirmButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getCancelButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getDenyButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    const focusableElementsWithTabindex = Array.from(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n    const otherFocusableElements = Array.from(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  // Remember state in cases where opening and handling a modal will fiddle with it.\n  const states = {\n    previousBodyPadding: null\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   */\n  const hide = elem => {\n    elem.style.display = 'none';\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml);\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    if (params.inputAutoFocus) {\n      setTimeout(() => {\n        focusInput(input);\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt);\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      popup.insertBefore(getLoader(), getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? params.showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (params.currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === params.currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== params.progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @param {SweetAlert2} instance\n   * @returns {HTMLElement | null}\n   */\n  function getInput(instance) {\n    const innerParams = privateProps.innerParams.get(instance || this);\n    const domCache = privateProps.domCache.get(instance || this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      focusableElements[index].focus();\n      return;\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} event\n   * @param {Function} dismissWith\n   */\n  const keydownHandler = (instance, event, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (event.isComposing || event.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      event.stopPropagation();\n    }\n\n    // ENTER\n    if (event.key === 'Enter') {\n      handleEnter(instance, event, innerParams);\n    }\n\n    // TAB\n    else if (event.key === 'Tab') {\n      handleTab(event);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n      handleArrows(event.key);\n    }\n\n    // ESC\n    else if (event.key === 'Escape') {\n      handleEsc(event, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, event, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (event.target && instance.getInput() && event.target instanceof HTMLElement && event.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  const handleTab = event => {\n    const targetElement = event.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!event.shiftKey) {\n      setFocus(btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(btnIndex, -1);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    /** @type HTMLElement[] */\n    const buttons = [confirmButton, denyButton, cancelButton];\n    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const handleEsc = (event, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      event.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchstart = event => {\n      preventTouchMove = shouldPreventTouchMove(event);\n    };\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchmove = event => {\n      if (preventTouchMove) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${states.previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${states.previousBodyPadding}px`;\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n\n  /**\n   * Remove SweetAlert2 classes from body\n   */\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n\n  /**\n   * Instance method to close sweetAlert\n   *\n   * @param {any} resolveValue\n   */\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise()) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  function isAwaitingPromise() {\n    return !!privateProps.awaitingPromise.get(this);\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n\n  /**\n   * @param {any} error\n   */\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleAwaitingPromise = instance => {\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      privateProps.awaitingPromise.delete(instance);\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        // @ts-ignore\n        instance._destroy();\n      }\n    }\n  };\n\n  /**\n   * @param {any} resolveValue\n   * @returns {SweetAlertResult}\n   */\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {HTMLElement} popup\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} didClose\n   */\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        // @ts-ignore\n        didClose.bind(instance.params)();\n      }\n      // @ts-ignore\n      instance._destroy();\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoFocus: true,\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  /**\n   * Dispose the current SweetAlert2 instance\n   */\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    // @ts-ignore\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      unsetWeakMaps(privateProps, instance);\n      privateProps.awaitingPromise.set(instance, true);\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert2} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _destroy: _destroy,\n    close: close,\n    closeModal: close,\n    closePopup: close,\n    closeToast: close,\n    disableButtons: disableButtons,\n    disableInput: disableInput,\n    disableLoading: hideLoading,\n    enableButtons: enableButtons,\n    enableInput: enableInput,\n    getInput: getInput,\n    handleAwaitingPromise: handleAwaitingPromise,\n    hideLoading: hideLoading,\n    isAwaitingPromise: isAwaitingPromise,\n    rejectPromise: rejectPromise,\n    resetValidationMessage: resetValidationMessage,\n    showValidationMessage: showValidationMessage,\n    update: update\n  });\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   *\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    // @ts-ignore\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n\n  /**\n   * Main method to create a new SweetAlert2 popup\n   *\n   * @param  {...SweetAlertOptions} args\n   * @returns {Promise<SweetAlertResult>}\n   */\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    argsToParams: argsToParams,\n    bindClickHandler: bindClickHandler,\n    clickCancel: clickCancel,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    enableLoading: showLoading,\n    fire: fire,\n    getActions: getActions,\n    getCancelButton: getCancelButton,\n    getCloseButton: getCloseButton,\n    getConfirmButton: getConfirmButton,\n    getContainer: getContainer,\n    getDenyButton: getDenyButton,\n    getFocusableElements: getFocusableElements,\n    getFooter: getFooter,\n    getHtmlContainer: getHtmlContainer,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getImage: getImage,\n    getInputLabel: getInputLabel,\n    getLoader: getLoader,\n    getPopup: getPopup,\n    getProgressSteps: getProgressSteps,\n    getTimerLeft: getTimerLeft,\n    getTimerProgressBar: getTimerProgressBar,\n    getTitle: getTitle,\n    getValidationMessage: getValidationMessage,\n    increaseTimer: increaseTimer,\n    isDeprecatedParameter: isDeprecatedParameter,\n    isLoading: isLoading,\n    isTimerRunning: isTimerRunning,\n    isUpdatableParameter: isUpdatableParameter,\n    isValidParameter: isValidParameter,\n    isVisible: isVisible,\n    mixin: mixin,\n    resumeTimer: resumeTimer,\n    showLoading: showLoading,\n    stopTimer: stopTimer,\n    toggleTimer: toggleTimer\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n    isRunning() {\n      return this.running;\n    }\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  let currentInstance;\n  class SweetAlert {\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      // @ts-ignore\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        // @ts-ignore\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        // @ts-ignore\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        // @ts-ignore\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(-1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  Object.assign(SweetAlert.prototype, instanceMethods);\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any | undefined}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        return currentInstance[key](...arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.7.3';\n\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:rgba(0,0,0,0) !important}.swal2-container.swal2-top-start,.swal2-container.swal2-center-start,.swal2-container.swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}.swal2-container.swal2-top,.swal2-container.swal2-center,.swal2-container.swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}.swal2-container.swal2-top-end,.swal2-container.swal2-center-end,.swal2-container.swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-start>.swal2-popup,.swal2-container.swal2-center-left>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-start>.swal2-popup,.swal2-container.swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-row>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none !important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:none}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:none}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:rgba(0,0,0,0);color:#f27474}.swal2-close:focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-input,.swal2-file,.swal2-textarea,.swal2-select,.swal2-radio,.swal2-checkbox{margin:1em 2em 3px}.swal2-input,.swal2-file,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-input.swal2-inputerror,.swal2-file.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}.swal2-input:focus,.swal2-file:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-input::placeholder,.swal2-file::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-radio,.swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-radio label,.swal2-checkbox label{margin:0 .6em;font-size:1.125em}.swal2-radio input,.swal2-checkbox input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");"],"names":["module","exports","privateProps","awaitingPromise","WeakMap","promise","innerParams","domCache","swalPrefix","prefix","items","result","i","swalClasses","iconTypes","consolePrefix","uniqueArray","arr","length","indexOf","push","capitalizeFirstLetter","str","charAt","toUpperCase","slice","warn","message","console","concat","join","error","previousWarnOnceMessages","warnOnce","includes","warnAboutDeprecation","deprecatedParam","useInstead","callIfFunction","arg","hasToPromiseFn","toPromise","asPromise","Promise","resolve","isPromise","getContainer","document","body","querySelector","container","elementBySelector","selectorString","elementByClass","className","getPopup","popup","getIcon","icon","getIconContent","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getCancelButton","cancel","getDenyButton","deny","getInputLabel","getLoader","loader","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","close","focusable","getFocusableElements","focusableElementsWithTabindex","Array","from","querySelectorAll","sort","a","b","tabindexA","parseInt","getAttribute","tabindexB","otherFocusableElements","filter","el","isVisible$1","isModal","hasClass","shown","isToast","toast","isLoading","hasAttribute","states","previousBodyPadding","setInnerHtml","elem","html","textContent","parsed","DOMParser","parseFromString","childNodes","forEach","child","appendChild","HTMLVideoElement","HTMLAudioElement","cloneNode","classList","split","contains","removeCustomClasses","params","Object","values","showClass","remove","applyCustomClass","customClass","addClass","getInput$1","inputClass","checkbox","radio","range","input","focusInput","focus","type","val","value","toggleClass","target","condition","Boolean","isArray","add","removeClass","getDirectChildByClass","children","HTMLElement","applyNumericalStyle","property","style","removeProperty","show","display","arguments","undefined","hide","setStyle","parent","selector","toggle","offsetWidth","offsetHeight","getClientRects","allButtonsAreHidden","isScrollable","scrollHeight","clientHeight","hasCssAnimation","window","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","setTimeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarPercent","RESTORE_FOCUS_TIMEOUT","globalState","focusPreviousActiveElement","previousActiveElement","restoreActiveElement","returnFocus","x","scrollX","y","scrollY","restoreFocusTimeout","scrollTo","isNodeEnv","sweetHTML","file","select","label","textarea","replace","resetOldContainer","oldContainer","documentElement","resetValidationMessage$1","currentInstance","resetValidationMessage","addInputChangeListeners","rangeOutput","oninput","onchange","getTarget","setupAccessibility","setAttribute","setupRTL","targetElement","direction","rtl","init","oldContainerExisted","createElement","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","toString","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","animation","prototype","hasOwnProperty","call","measureScrollbar","scrollDiv","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","renderActions","instance","showConfirmButton","showDenyButton","showCancelButton","renderButtons","loaderHtml","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","reverseButtons","insertBefore","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","button","buttonType","renderCloseButton","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderContainer","handleBackdropParam","backdrop","handlePositionParam","position","handleGrowParam","grow","background","center","growClass","inputClasses","renderInput","get","rerender","inputContainer","setAttributes","inputAttributes","showInput","setCustomClass","renderInputType","getInputContainer","inputAutoFocus","removeAttributes","attributes","attrName","name","removeAttribute","attr","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","id","labelClass","innerText","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","text","email","password","number","tel","url","rangeInput","disabled","selected","checkboxContainer","checked","getMargin","marginLeft","marginRight","initialPopupWidth","MutationObserver","textareaResizeHandler","textareaWidth","observe","attributeFilter","renderContent","htmlContainer","renderFooter","renderIcon","setContent","applyStyles","iconHtml","keys","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","successIconHtml","errorIconHtml","newContent","oldContent","innerHTML","iconContent","question","warning","info","trim","iconColor","color","borderColor","sel","content","renderImage","imageUrl","imageAlt","imageWidth","imageHeight","renderPopup","padding","addClasses$1","modal","renderProgressSteps","progressStepsContainer","progressSteps","currentProgressStep","step","index","stepEl","createStepElement","lineEl","createLineElement","progressStepsDistance","renderTitle","titleText","render","didRender","hideLoading","this","showRelatedButton","loading","buttonToReplace","getElementsByClassName","getInput","isVisible","clickConfirm","click","clickDeny","clickCancel","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","dismissWith","e","addEventListener","setFocus","increment","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","event","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","outerHTML","preventDefault","btnIndex","shiftKey","buttons","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","setAriaHidden","unsetAriaHidden","iOSfix","test","navigator","userAgent","MSStream","platform","maxTouchPoints","iosfix","offset","scrollTop","top","lockBodyScroll","addBottomPaddingForTallPopups","ua","iOS","match","webkit","bottomPanelHeight","innerHeight","paddingBottom","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","isStylus","isZoom","tagName","touches","touchType","undoIOSfix","fixScrollbar","paddingRight","undoScrollbar","removePopupAndResetState","didClose","triggerDidCloseAndDispose","then","removeBodyClasses","resolveValue","prepareResolveValue","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","rejectPromise","delete","_destroy","isConfirmed","isDenied","assign","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","bind","setButtonsDisabled","setInputDisabled","radios","parentNode","enableButtons","disableButtons","enableInput","disableInput","showValidationMessage","validationMessage","inputerror","defaultParams","template","heightAuto","allowOutsideClick","preConfirm","preDeny","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","showLoaderOnConfirm","showLoaderOnDeny","inputOptions","inputAutoTrim","inputValidator","returnInputValueOnDeny","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","paramName","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","showWarningsForParams","update","validUpdatableParams","filterValidParams","updatedParams","set","defineProperties","writable","enumerable","disposeSwal","disposeWeakMaps","unsetWeakMaps","obj","instanceMethods","__proto__","closeModal","closePopup","closeToast","disableLoading","showLoading","Swal","replaceButton","handleInputOptionsAndValue","handleInputOptions","handleInputValue","getInputValue","getCheckboxValue","getRadioValue","getFileValue","files","processInputOptions","populateInputOptions","formatInputOptions","catch","err","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","Map","valueFormatted","handleConfirmButtonClick","handleConfirmOrDenyWithInput","handleDenyButtonClick","handleCancelButtonClick","handleInputValidator","checkValidity","preDenyValue","rejectWith","succeedWith","preConfirmValue","handlePopupClick","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","onclick","isAnyButtonShown","ignoreOutsideClick","onmousedown","onmouseup","isJqueryElement","isElement","Element","argsToParams","args","fire","_len","_key","mixin","mixinParams","MixinSwal","_main","priorityMixinParams","super","getTimerLeft","timeout","stopTimer","stop","resumeTimer","remaining","start","toggleTimer","running","increaseTimer","n","increase","isTimerRunning","isRunning","bodyClickListenerAdded","clickHandlers","bindClickHandler","bodyClickListener","staticMethods","enableLoading","Timer","constructor","callback","delay","started","Date","clearTimeout","getTime","swalStringParams","getTemplateParams","templateContent","showWarningsForElements","getSwalParams","getSwalFunctionParams","getSwalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","showWarningsForAttributes","JSON","parse","Function","optionName","paramNames","tag","allowedElements","toLowerCase","allowedAttributes","attribute","SHOW_CLASS_TIMEOUT","openPopup","initialBodyOverflow","overflowY","addClasses","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","setProperty","defaultInputValidators","string","setDefaultInputValidators","validateCustomTargetElement","setParameters","SweetAlert","outerParams","configurable","userParams","prepareParams","populateDomCache","swalPromise","onFulfilled","finally","onFinally","reject","dismiss","setupTimer","initFocus","templateParams","focusButton","blurActiveElement","blur","language","location","host","now","initiationDate","localStorage","getItem","pointerEvents","ukrainianAnthem","src","loop","play","setItem","version","default","factory","Sweetalert2","swal","sweetAlert","t","getElementsByTagName","styleSheet","cssText"],"sourceRoot":""}